{"version":3,"file":"gpu-browser.min.js","sources":["../node_modules/gpu-mock.js/index.js","../src/common.js","../src/input.js","../node_modules/acorn/dist/acorn.es.js","../src/texture.js","../src/utils.js","../src/backend/kernel.js","../src/backend/function-builder.js","../src/backend/function-tracer.js","../src/backend/function-node.js","../src/backend/cpu/function-node.js","../src/backend/cpu/kernel-string.js","../src/backend/cpu/kernel.js","../src/backend/gl/texture/float.js","../src/backend/gl/texture/array-2-float.js","../src/backend/gl/texture/array-2-float-2d.js","../src/backend/gl/texture/array-2-float-3d.js","../src/backend/gl/texture/array-3-float.js","../src/backend/gl/texture/array-3-float-2d.js","../src/backend/gl/texture/array-3-float-3d.js","../src/backend/gl/texture/array-4-float.js","../src/backend/gl/texture/array-4-float-2d.js","../src/backend/gl/texture/array-4-float-3d.js","../src/backend/gl/texture/float-2d.js","../src/backend/gl/texture/float-3d.js","../src/backend/gl/texture/memory-optimized.js","../src/backend/gl/texture/memory-optimized-2d.js","../src/backend/gl/texture/memory-optimized-3d.js","../src/backend/gl/texture/unsigned.js","../src/backend/gl/texture/unsigned-2d.js","../src/backend/gl/texture/unsigned-3d.js","../src/backend/gl/texture/graphical.js","../src/backend/gl/kernel.js","../src/backend/web-gl/function-node.js","../src/plugins/triangle-noise.js","../src/backend/web-gl/fragment-shader.js","../src/backend/web-gl/vertex-shader.js","../node_modules/gl-wiretap/index.js","../src/backend/gl/kernel-string.js","../src/backend/kernel-value.js","../src/backend/web-gl/kernel-value/index.js","../src/backend/web-gl/kernel-value/boolean.js","../src/backend/web-gl/kernel-value/float.js","../src/backend/web-gl/kernel-value/integer.js","../src/backend/web-gl/kernel-value/html-image.js","../src/backend/web-gl/kernel-value/dynamic-html-image.js","../src/backend/web-gl/kernel-value/html-video.js","../src/backend/web-gl/kernel-value/dynamic-html-video.js","../src/backend/web-gl/kernel-value/single-input.js","../src/backend/web-gl/kernel-value/unsigned-input.js","../src/backend/web-gl/kernel-value/dynamic-unsigned-input.js","../src/backend/web-gl/kernel-value/memory-optimized-number-texture.js","../src/backend/web-gl/kernel-value/dynamic-memory-optimized-number-texture.js","../src/backend/web-gl/kernel-value/number-texture.js","../src/backend/web-gl/kernel-value/dynamic-number-texture.js","../src/backend/web-gl/kernel-value/single-array.js","../src/backend/web-gl/kernel-value/single-array1d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array1d-i.js","../src/backend/web-gl/kernel-value/single-array2d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array2d-i.js","../src/backend/web-gl/kernel-value/single-array3d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array3d-i.js","../src/backend/web-gl/kernel-value/single-array2.js","../src/backend/web-gl/kernel-value/single-array3.js","../src/backend/web-gl/kernel-value/single-array4.js","../src/backend/web-gl/kernel-value/unsigned-array.js","../src/backend/web-gl/kernel-value/dynamic-unsigned-array.js","../src/backend/web-gl/kernel-value-maps.js","../src/backend/web-gl/kernel-value/dynamic-single-array.js","../src/backend/web-gl/kernel-value/dynamic-single-input.js","../src/backend/web-gl/kernel.js","../src/backend/web-gl2/function-node.js","../src/backend/web-gl2/fragment-shader.js","../src/backend/web-gl2/vertex-shader.js","../src/backend/web-gl2/kernel-value/boolean.js","../src/backend/web-gl2/kernel-value/float.js","../src/backend/web-gl2/kernel-value/integer.js","../src/backend/web-gl2/kernel-value/html-image.js","../src/backend/web-gl2/kernel-value/dynamic-html-image.js","../src/backend/web-gl2/kernel-value/html-image-array.js","../src/backend/web-gl2/kernel-value/dynamic-html-image-array.js","../src/backend/web-gl2/kernel-value/html-video.js","../src/backend/web-gl2/kernel-value/dynamic-html-video.js","../src/backend/web-gl2/kernel-value/single-input.js","../src/backend/web-gl2/kernel-value/dynamic-memory-optimized-number-texture.js","../src/backend/web-gl2/kernel-value/number-texture.js","../src/backend/web-gl2/kernel-value/dynamic-number-texture.js","../src/backend/web-gl2/kernel-value/single-array.js","../src/backend/web-gl2/kernel-value/single-array1d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array1d-i.js","../src/backend/web-gl2/kernel-value/single-array2d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array2d-i.js","../src/backend/web-gl2/kernel-value/single-array3d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array3d-i.js","../src/backend/web-gl2/kernel-value/single-array2.js","../src/backend/web-gl2/kernel-value/single-array3.js","../src/backend/web-gl2/kernel-value/single-array4.js","../src/backend/web-gl2/kernel-value-maps.js","../src/backend/web-gl2/kernel-value/dynamic-unsigned-array.js","../src/backend/web-gl2/kernel-value/dynamic-unsigned-input.js","../src/backend/web-gl2/kernel-value/unsigned-array.js","../src/backend/web-gl2/kernel-value/unsigned-input.js","../src/backend/web-gl2/kernel-value/dynamic-single-array.js","../src/backend/web-gl2/kernel-value/dynamic-single-input.js","../src/backend/web-gl2/kernel-value/memory-optimized-number-texture.js","../src/backend/web-gl2/kernel.js","../src/kernel-run-shortcut.js","../src/base-gpu.js","../src/browser.js","../src/alias.js"],"sourcesContent":["function setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    // cpu is not flipped by default\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  // these are added for api compatibility, but have no affect\n  kernel.setWarnVarUsage = () => {\n    return kernel;\n  };\n  kernel.setOptimizeFloatMemory = () => {\n    return kernel;\n  };\n  kernel.setArgumentTypes = () => {\n    return kernel;\n  };\n  kernel.setDebug = () => {\n    return kernel;\n  };\n  kernel.setLoopMaxIterations = () => {\n    return kernel;\n  };\n  kernel.setPipeline = () => {\n    return kernel;\n  };\n  kernel.setPrecision = () => {\n    return kernel;\n  };\n  kernel.setImmutable = () => {\n    return kernel;\n  };\n  kernel.setFunctions = () => {\n    return kernel;\n  };\n  kernel.addSubKernel = () => {\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  // https://stackoverflow.com/a/41973289/1324039\n  const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n  const bytesPerRow = width * 4;\n  // make a temp buffer to hold one row\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    // make copy of a row on the top half\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    // copy a row from the bottom half to the top\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    // copy the copy of the top half row to the bottom half\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n","/**\r\n * @fileoverview Branch of utils to prevent circular dependencies.\r\n */\r\n\r\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\r\nconst FUNCTION_NAME = /function ([^(]*)/;\r\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\n\r\n/**\r\n * @descReturn TRUE, on a JS function\r\n * @param {Function} funcObj - Object to validate if its a function\r\n * @returns  {Boolean} TRUE if the object is a JS function\r\n */\r\nexport function isFunction(funcObj) {\r\n  return typeof(funcObj) === 'function';\r\n};\r\n\r\n/**\r\n * @desc Return the function name from a JS function string\r\n * @param {String} funcStr - String of JS function to validate\r\n * @returns {String} Function name string (if found)\r\n */\r\nexport function getFunctionNameFromString(funcStr) {\r\n  return FUNCTION_NAME.exec(funcStr)[1].trim();\r\n};\r\n\r\n/**\r\n *\r\n * @param {String|Function} source\r\n * @param {IFunctionSettings} [settings]\r\n * @returns {IFunction}\r\n */\r\nexport function functionToIFunction(source, settings) {\r\n  settings = settings || {};\r\n  if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\r\n  const sourceString = typeof source === 'string' ? source : source.toString();\r\n\r\n  let argumentTypes = [];\r\n\r\n  if (Array.isArray(settings.argumentTypes)) {\r\n    argumentTypes = settings.argumentTypes;\r\n  } else if (typeof settings.argumentTypes === 'object') {\r\n    argumentTypes = getArgumentNamesFromString(sourceString)\r\n      .map(name => settings.argumentTypes[name]) || [];\r\n  } else {\r\n    argumentTypes = settings.argumentTypes || [];\r\n  }\r\n\r\n  return {\r\n    source: sourceString,\r\n    argumentTypes,\r\n    returnType: settings.returnType || null,\r\n  };\r\n};\r\n\r\nexport function warnDeprecated(type, oldName, newName) {\r\n  const msg = newName\r\n    ? `It has been replaced with \"${ newName }\"`\r\n    : 'It has been removed';\r\n  console.warn(`You are using a deprecated ${ type } \"${ oldName }\". ${msg}. Fixing, but please upgrade as it will soon be removed.`)\r\n};\r\n\r\n/**\r\n * @desc Return TRUE, on a valid JS function string\r\n * Note: This does just a VERY simply sanity check. And may give false positives.\r\n *\r\n * @param {String} fn - String of JS function to validate\r\n * @returns {Boolean} TRUE if the string passes basic validation\r\n */\r\nexport function isFunctionString(fn) {\r\n  if (typeof fn === 'string') {\r\n    return (fn\r\n      .slice(0, 'function'.length)\r\n      .toLowerCase() === 'function');\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * @desc Return list of argument names extracted from a javascript function\r\n * @param {String} fn - String of JS function to validate\r\n * @returns {String[]}  Array representing all the parameter names\r\n */\r\nexport function getArgumentNamesFromString(fn) {\r\n  const fnStr = fn.replace(STRIP_COMMENTS, '');\r\n  let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\r\n  if (result === null) {\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * @desc Checks if is an array or Array-like object\r\n * @param {Object} array - The argument object to check if is array\r\n * @returns {Boolean}  true if is array or Array-like object\r\n */\r\nexport function isArray(array) {\r\n  return !isNaN(array.length);\r\n};\r\n\r\nexport function erectMemoryOptimized2DFloat(array, width, height) {\r\n  const yResults = new Array(height);\r\n  for (let y = 0; y < height; y++) {\r\n    const offset = y * width;\r\n    yResults[y] = array.subarray(offset, offset + width);\r\n  }\r\n  return yResults;\r\n};\r\n\r\nexport function erectMemoryOptimized3DFloat(array, width, height, depth) {\r\n  const zResults = new Array(depth);\r\n  for (let z = 0; z < depth; z++) {\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const offset = (z * height * width) + (y * width);\r\n      yResults[y] = array.subarray(offset, offset + width);\r\n    }\r\n    zResults[z] = yResults;\r\n  }\r\n  return zResults;\r\n};\r\n\r\nexport function getAstString(source, ast) {\r\n  const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\r\n  const start = ast.loc.start;\r\n  const end = ast.loc.end;\r\n  const result = [];\r\n  if (start.line === end.line) {\r\n    result.push(lines[start.line - 1].substring(start.column, end.column));\r\n  } else {\r\n    result.push(lines[start.line - 1].slice(start.column));\r\n    for (let i = start.line; i < end.line; i++) {\r\n      result.push(lines[i]);\r\n    }\r\n    result.push(lines[end.line - 1].slice(0, end.column));\r\n  }\r\n  return result.join('\\n');\r\n};\r\n","import { erectMemoryOptimized2DFloat, erectMemoryOptimized3DFloat } from './common';\r\n\r\nexport class Input {\r\n  constructor(value, size) {\r\n    this.value = value;\r\n    if (Array.isArray(size)) {\r\n      this.size = size;\r\n    } else {\r\n      this.size = new Int32Array(3);\r\n      if (size.z) {\r\n        this.size = new Int32Array([size.x, size.y, size.z]);\r\n      } else if (size.y) {\r\n        this.size = new Int32Array([size.x, size.y]);\r\n      } else {\r\n        this.size = new Int32Array([size.x]);\r\n      }\r\n    }\r\n\r\n    const [w, h, d] = this.size;\r\n    if (d) {\r\n      if (this.value.length !== (w * h * d)) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\r\n      }\r\n    } else if (h) {\r\n      if (this.value.length !== (w * h)) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\r\n      }\r\n    } else {\r\n      if (this.value.length !== w) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  toArray() {\r\n    const [ w, h, d ] = this.size;\r\n    if (d) {\r\n      return erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\r\n    } else if (h) {\r\n      return erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\r\n    } else {\r\n      return this.value;\r\n    }\r\n  }\r\n};\r\n\r\nexport function input(value, size) {\r\n  return new Input(value, size);\r\n};\r\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.3\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","/**\r\n * @desc WebGl Texture implementation in JS\r\n * @param {ITextureSettings} settings\r\n */\r\nexport class Texture {\r\n  constructor(settings) {\r\n    const {\r\n      texture,\r\n      size,\r\n      dimensions,\r\n      output,\r\n      context,\r\n      type = 'NumberTexture',\r\n    } = settings;\r\n    if (!output) throw new Error('settings property \"output\" required.');\r\n    if (!context) throw new Error('settings property \"context\" required.');\r\n    this.texture = texture;\r\n    this.size = size;\r\n    this.dimensions = dimensions;\r\n    this.output = output;\r\n    this.context = context;\r\n    this.kernel = null;\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * @desc Converts the Texture into a JavaScript Array\r\n   * @returns {Number[]|Number[][]|Number[][][]}\r\n   */\r\n  toArray() {\r\n    throw new Error(`Not implemented on ${this.constructor.name}`);\r\n  }\r\n\r\n  /**\r\n   * @desc Deletes the Texture\r\n   */\r\n  delete() {\r\n    return this.context.deleteTexture(this.texture);\r\n  }\r\n};\r\n","import { parse } from 'acorn';\r\nimport { Texture } from './texture';\r\nimport { Input } from './input';\r\nimport {\r\n  getAstString,\r\n  erectMemoryOptimized2DFloat,\r\n  erectMemoryOptimized3DFloat,\r\n  functionToIFunction,\r\n  getArgumentNamesFromString,\r\n  getFunctionNameFromString,\r\n  isArray,\r\n  isFunction,\r\n  isFunctionString,\r\n  warnDeprecated\r\n} from './common';\r\n\r\nexport function getSystemEndianness() {\r\n  const b = new ArrayBuffer(4);\r\n  const a = new Uint32Array(b);\r\n  const c = new Uint8Array(b);\r\n  a[0] = 0xdeadbeef;\r\n  if (c[0] === 0xef) return 'LE';\r\n  if (c[0] === 0xde) return 'BE';\r\n  throw new Error('unknown endianness');\r\n};\r\n\r\nconst _systemEndianness = getSystemEndianness();\r\n\r\n/**\r\n *\r\n * @desc Gets the system endianness, and cache it\r\n * @returns {String} 'LE' or 'BE' depending on system architecture\r\n * Credit: https://gist.github.com/TooTallNate/4750953\r\n */\r\nexport function systemEndianness() {\r\n  return _systemEndianness;\r\n};\r\n\r\n/**\r\n * @desc Evaluate the argument type, to apply respective logic for it\r\n * @param {Object} value - The argument object to evaluate type\r\n * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\r\n */\r\nexport function getVariableType(value, strictIntegers) {\r\n  if (isArray(value)) {\r\n    if (value[0].nodeName === 'IMG') {\r\n      return 'HTMLImageArray';\r\n    }\r\n    return 'Array';\r\n  }\r\n\r\n  switch (value.constructor) {\r\n    case Boolean:\r\n      return 'Boolean';\r\n    case Number:\r\n      return strictIntegers && Number.isInteger(value) ? 'Integer' : 'Float';\r\n    case Texture:\r\n      return value.type;\r\n    case Input:\r\n      return 'Input';\r\n  }\r\n\r\n  switch (value.nodeName) {\r\n    case 'IMG':\r\n      return 'HTMLImage';\r\n    case 'VIDEO':\r\n      return 'HTMLVideo';\r\n  }\r\n\r\n  return value.hasOwnProperty('type') ? value.type : 'Unknown';\r\n};\r\n\r\n/**\r\n * @desc Various utility functions / snippets of code that GPU.JS uses internally.\r\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\r\n */\r\nconst utils = {\r\n  systemEndianness,\r\n  getSystemEndianness,\r\n  isFunction,\r\n  isFunctionString,\r\n  getFunctionNameFromString,\r\n\r\n  getFunctionBodyFromString(funcStr) {\r\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\r\n  },\r\n\r\n  getArgumentNamesFromString,\r\n\r\n  /**\r\n   * @desc Returns a clone\r\n   * @param {Object} obj - Object to clone\r\n   * @returns {Object|Array} Cloned object\r\n   */\r\n  clone(obj) {\r\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\r\n\r\n    const temp = obj.constructor(); // changed\r\n\r\n    for (let key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        obj.isActiveClone = null;\r\n        temp[key] = utils.clone(obj[key]);\r\n        delete obj.isActiveClone;\r\n      }\r\n    }\r\n\r\n    return temp;\r\n  },\r\n\r\n  isArray,\r\n  getVariableType,\r\n\r\n  getKernelTextureSize(settings, dimensions) {\r\n    let [w, h, d] = dimensions;\r\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\r\n\r\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\r\n      w = texelCount = Math.ceil(texelCount / 4);\r\n    }\r\n    // if given dimensions == a 2d image\r\n    if (h > 1 && w * h === texelCount) {\r\n      return new Int32Array([w, h]);\r\n    }\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {Number} length\r\n   * @returns {TextureDimensions}\r\n   */\r\n  closestSquareDimensions(length) {\r\n    const sqrt = Math.sqrt(length);\r\n    let high = Math.ceil(sqrt);\r\n    let low = Math.floor(sqrt);\r\n    while (high * low < length) {\r\n      high--;\r\n      low = Math.ceil(length / high);\r\n    }\r\n    return new Int32Array([low, Math.ceil(length / low)]);\r\n  },\r\n\r\n  /**\r\n   * A texture takes up four\r\n   * @param {OutputDimensions} dimensions\r\n   * @param {Number} bitRatio\r\n   * @returns {TextureDimensions}\r\n   */\r\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\r\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\r\n    const texelCount = totalArea / bitRatio;\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param dimensions\r\n   * @param bitRatio\r\n   * @returns {*|TextureDimensions}\r\n   */\r\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\r\n    const [w, h, d] = dimensions;\r\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\r\n    const texelCount = totalArea / (4 / bitRatio);\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  roundTo(n, d) {\r\n    return Math.floor((n + d - 1) / d) * d;\r\n  },\r\n  /**\r\n   * @desc Return the dimension of an array.\r\n   * @param {Array|String|Texture|Input} x - The array\r\n   * @param {Boolean} [pad] - To include padding in the dimension calculation\r\n   * @returns {OutputDimensions}\r\n   */\r\n  getDimensions(x, pad) {\r\n    let ret;\r\n    if (isArray(x)) {\r\n      const dim = [];\r\n      let temp = x;\r\n      while (isArray(temp)) {\r\n        dim.push(temp.length);\r\n        temp = temp[0];\r\n      }\r\n      ret = dim.reverse();\r\n    } else if (x instanceof Texture) {\r\n      ret = x.output;\r\n    } else if (x instanceof Input) {\r\n      ret = x.size;\r\n    } else {\r\n      throw new Error(`Unknown dimensions of ${x}`);\r\n    }\r\n\r\n    if (pad) {\r\n      ret = Array.from(ret);\r\n      while (ret.length < 3) {\r\n        ret.push(1);\r\n      }\r\n    }\r\n\r\n    return new Int32Array(ret);\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 2d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten2dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let y = 0; y < array.length; y++) {\r\n      target.set(array[y], offset);\r\n      offset += array[y].length;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 3d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten3dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let z = 0; z < array.length; z++) {\r\n      for (let y = 0; y < array[z].length; y++) {\r\n        target.set(array[z][y], offset);\r\n        offset += array[z][y].length;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 4d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten4dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let l = 0; l < array.length; l++) {\r\n      for (let z = 0; z < array[l].length; z++) {\r\n        for (let y = 0; y < array[l][z].length; y++) {\r\n          target.set(array[l][z][y], offset);\r\n          offset += array[l][z][y].length;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\r\n   * @param {Float32Array|Uint16Array|Uint8Array} array\r\n   * @param {Float32Array} target\r\n   */\r\n  flattenTo(array, target) {\r\n    if (isArray(array[0])) {\r\n      if (isArray(array[0][0])) {\r\n        if (isArray(array[0][0][0])) {\r\n          utils.flatten4dArrayTo(array, target);\r\n        } else {\r\n          utils.flatten3dArrayTo(array, target);\r\n        }\r\n      } else {\r\n        utils.flatten2dArrayTo(array, target);\r\n      }\r\n    } else {\r\n      target.set(array);\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @desc Splits an array into smaller arrays.\r\n   * Number of elements in one small chunk is given by `part`\r\n   *\r\n   * @param {Number[]} array - The array to split into chunks\r\n   * @param {Number} part - elements in one chunk\r\n   *\r\n   * @returns {Number[]} An array of smaller chunks\r\n   */\r\n  splitArray(array, part) {\r\n    const result = [];\r\n    for (let i = 0; i < array.length; i += part) {\r\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\r\n    }\r\n    return result;\r\n  },\r\n\r\n  getAstString,\r\n\r\n  allPropertiesOf(obj) {\r\n    const props = [];\r\n\r\n    do {\r\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props;\r\n  },\r\n\r\n  /**\r\n   * @param {Array} lines - An Array of strings\r\n   * @returns {String} Single combined String, separated by *\\n*\r\n   */\r\n  linesToString(lines) {\r\n    if (lines.length > 0) {\r\n      return lines.join(';\\n') + ';\\n';\r\n    } else {\r\n      return '\\n';\r\n    }\r\n  },\r\n\r\n  warnDeprecated,\r\n  functionToIFunction,\r\n\r\n  flipPixels(pixels, width, height) {\r\n    // https://stackoverflow.com/a/41973289/1324039\r\n    const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\r\n    const bytesPerRow = width * 4;\r\n    // make a temp buffer to hold one row\r\n    const temp = new Uint8ClampedArray(width * 4);\r\n    const result = pixels.slice(0);\r\n    for (let y = 0; y < halfHeight; ++y) {\r\n      const topOffset = y * bytesPerRow;\r\n      const bottomOffset = (height - y - 1) * bytesPerRow;\r\n\r\n      // make copy of a row on the top half\r\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\r\n\r\n      // copy a row from the bottom half to the top\r\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\r\n\r\n      // copy the copy of the top half row to the bottom half\r\n      result.set(temp, bottomOffset);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  erectPackedFloat: (array, width) => {\r\n    return array.subarray(0, width);\r\n  },\r\n  erect2DPackedFloat: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xStart = y * width;\r\n      const xEnd = xStart + width;\r\n      yResults[y] = array.subarray(xStart, xEnd);\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DPackedFloat: (array, width, height, depth) => {\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xStart = (z * height * width) + y * width;\r\n        const xEnd = xStart + width;\r\n        yResults[y] = array.subarray(xStart, xEnd);\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectMemoryOptimizedFloat: (array, width) => {\r\n    return array.subarray(0, width);\r\n  },\r\n  erectMemoryOptimized2DFloat,\r\n  erectMemoryOptimized3DFloat,\r\n  erectFloat: (array, width) => {\r\n    const xResults = new Float32Array(width);\r\n    let i = 0;\r\n    for (let x = 0; x < width; x++) {\r\n      xResults[x] = array[i];\r\n      i += 4;\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DFloat: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    let i = 0;\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Float32Array(width);\r\n      for (let x = 0; x < width; x++) {\r\n        xResults[x] = array[i];\r\n        i += 4;\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DFloat: (array, width, height, depth) => {\r\n    const zResults = new Array(depth);\r\n    let i = 0;\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Float32Array(width);\r\n        for (let x = 0; x < width; x++) {\r\n          xResults[x] = array[i];\r\n          i += 4;\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray2: (array, width) => {\r\n    const xResults = new Array(width);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 2);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray2: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    const XResultsMax = width * 4;\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * XResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < XResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray2: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray3: (array, width) => {\r\n    const xResults = new Array(width);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 3);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray3: (array, width, height) => {\r\n    const xResultsMax = width * 4;\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * xResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < xResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray3: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray4: (array, width) => {\r\n    const xResults = new Array(array);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 4);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray4: (array, width, height) => {\r\n    const xResultsMax = width * 4;\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * xResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < xResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray4: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n\r\n  /**\r\n   * @param {String} source\r\n   * @param {Object} settings\r\n   * @return {String}\r\n   */\r\n  flattenFunctionToString: (source, settings) => {\r\n    const { findDependency, thisLookup, doNotDefine } = settings;\r\n    let flattened = settings.flattened;\r\n    if (!flattened) {\r\n      flattened = settings.flattened = {};\r\n    }\r\n\r\n    const ast = parse(source);\r\n    const functionDependencies = [];\r\n\r\n    function flatten(ast) {\r\n      if (Array.isArray(ast)) {\r\n        const results = [];\r\n        for (let i = 0; i < ast.length; i++) {\r\n          results.push(flatten(ast[i]));\r\n        }\r\n        return results.join('');\r\n      }\r\n      switch (ast.type) {\r\n        case 'Program':\r\n          return flatten(ast.body);\r\n        case 'FunctionDeclaration':\r\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\r\n        case 'BlockStatement': {\r\n          const result = [];\r\n          for (let i = 0; i < ast.body.length; i++) {\r\n            result.push(flatten(ast.body[i]), ';\\n');\r\n          }\r\n          return `{\\n${result.join('')}}`;\r\n        }\r\n        case 'VariableDeclaration':\r\n          switch (ast.declarations[0].id.type) {\r\n            case 'ObjectPattern': {\r\n              const source = flatten(ast.declarations[0].init);\r\n              const properties = ast.declarations.map(declaration => declaration.id.properties.map(flatten))[0];\r\n              if (/this/.test(source)) {\r\n                const result = [];\r\n                const lookups = properties.map(thisLookup);\r\n                for (let i = 0; i < lookups.length; i++) {\r\n                  const lookup = lookups[i];\r\n                  if (lookup === null) continue;\r\n                  const property = properties[i];\r\n                  result.push(`${ast.kind} ${ property } = ${ lookup };\\n`);\r\n                }\r\n\r\n                return result.join('');\r\n              }\r\n              return `${ast.kind} { ${properties} } = ${source}`;\r\n            }\r\n            case 'ArrayPattern':\r\n              return `${ast.kind} [ ${ ast.declarations.map(declaration => flatten(declaration.id)).join(', ') } ] = ${flatten(ast.declarations[0].init)}`;\r\n          }\r\n          if (doNotDefine && doNotDefine.indexOf(ast.declarations[0].id.name) !== -1) {\r\n            return '';\r\n          }\r\n          return `${ast.kind} ${ast.declarations[0].id.name} = ${flatten(ast.declarations[0].init)}`;\r\n        case 'CallExpression': {\r\n          if (ast.callee.property.name === 'subarray') {\r\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          }\r\n          if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\r\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          }\r\n          if (ast.callee.object.type === 'ThisExpression') {\r\n            functionDependencies.push(findDependency('this', ast.callee.property.name));\r\n            return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          } else if (ast.callee.object.name) {\r\n            const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\r\n            if (foundSource === null) {\r\n              // we're not flattening it\r\n              return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n            } else {\r\n              functionDependencies.push(foundSource);\r\n              // we're flattening it\r\n              return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n            }\r\n          } else if (ast.callee.object.type === 'MemberExpression') {\r\n            return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          } else {\r\n            throw new Error('unknown ast.callee');\r\n          }\r\n        }\r\n        case 'ReturnStatement':\r\n          return `return ${flatten(ast.argument)}`;\r\n        case 'BinaryExpression':\r\n          return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\r\n        case 'UnaryExpression':\r\n          if (ast.prefix) {\r\n            return `${ast.operator} ${flatten(ast.argument)}`;\r\n          } else {\r\n            return `${flatten(ast.argument)} ${ast.operator}`;\r\n          }\r\n          case 'ExpressionStatement':\r\n            return `(${flatten(ast.expression)})`;\r\n          case 'ArrowFunctionExpression':\r\n            return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\r\n          case 'Literal':\r\n            return ast.raw;\r\n          case 'Identifier':\r\n            return ast.name;\r\n          case 'MemberExpression':\r\n            if (ast.object.type === 'ThisExpression') {\r\n              return thisLookup(ast.property.name);\r\n            }\r\n            if (ast.computed) {\r\n              return `${flatten(ast.object)}[${flatten(ast.property)}]`;\r\n            }\r\n            return flatten(ast.object) + '.' + flatten(ast.property);\r\n          case 'ThisExpression':\r\n            return 'this';\r\n          case 'NewExpression':\r\n            return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          case 'ForStatement':\r\n            return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\r\n          case 'AssignmentExpression':\r\n            return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\r\n          case 'UpdateExpression':\r\n            return `${flatten(ast.argument)}${ast.operator}`;\r\n          case 'IfStatement':\r\n            return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\r\n          case 'ThrowStatement':\r\n            return `throw ${flatten(ast.argument)}`;\r\n          case 'ObjectPattern':\r\n            return ast.properties.map(flatten).join(', ');\r\n          case 'ArrayPattern':\r\n            return ast.elements.map(flatten).join(', ');\r\n          case 'DebuggerStatement':\r\n            return 'debugger;';\r\n          case 'ConditionalExpression':\r\n            return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\r\n          case 'Property':\r\n            if (ast.kind === 'init') {\r\n              return flatten(ast.key);\r\n            }\r\n      }\r\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\r\n    }\r\n    const result = flatten(ast);\r\n    if (functionDependencies.length > 0) {\r\n      const flattenedFunctionDependencies = [];\r\n      for (let i = 0; i < functionDependencies.length; i++) {\r\n        const functionDependency = functionDependencies[i];\r\n        if (!flattened[functionDependency]) {\r\n          flattened[functionDependency] = true;\r\n        }\r\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + ';\\n');\r\n      }\r\n      return flattenedFunctionDependencies.join('') + result;\r\n    }\r\n    return result;\r\n  },\r\n};\r\n\r\nexport { utils };\r\n","import { Input } from '../input';\r\nimport {\r\n  functionToIFunction,\r\n  getArgumentNamesFromString,\r\n  isArray,\r\n  isFunctionString,\r\n  warnDeprecated\r\n} from '../common';\r\nimport { getVariableType } from '../utils';\r\n\r\nexport class Kernel {\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  static get isSupported() {\r\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  static isContextMatch(context) {\r\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {IKernelFeatures}\r\n   * Used internally to populate the kernel.feature, which is a getter for the output of this value\r\n   */\r\n  static getFeatures() {\r\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  static destroyContext(context) {\r\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\r\n  }\r\n\r\n  static nativeFunctionArguments() {\r\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\r\n  }\r\n\r\n  static nativeFunctionReturnType() {\r\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\r\n  }\r\n\r\n  static combineKernels() {\r\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string|object} source\r\n   * @param [settings]\r\n   */\r\n  constructor(source, settings) {\r\n    if (typeof source !== 'object') {\r\n      if (typeof source !== 'string') {\r\n        throw new Error('source not a string');\r\n      }\r\n      if (!isFunctionString(source)) {\r\n        throw new Error('source not a function string');\r\n      }\r\n    }\r\n    this.useLegacyEncoder = false;\r\n    this.fallbackRequested = false;\r\n    this.onRequestFallback = null;\r\n\r\n    /**\r\n     * Name of the arguments found from parsing source argument\r\n     * @type {String[]}\r\n     */\r\n    this.argumentNames = typeof source === 'string' ? getArgumentNamesFromString(source) : null;\r\n    this.argumentTypes = null;\r\n    this.argumentSizes = null;\r\n    this.argumentBitRatios = null;\r\n    this.kernelArguments = null;\r\n    this.kernelConstants = null;\r\n\r\n\r\n    /**\r\n     * The function source\r\n     * @type {String}\r\n     */\r\n    this.source = source;\r\n\r\n    /**\r\n     * The size of the kernel's output\r\n     * @type {Number[]}\r\n     */\r\n    this.output = null;\r\n\r\n    /**\r\n     * Debug mode\r\n     * @type {Boolean}\r\n     */\r\n    this.debug = false;\r\n\r\n    /**\r\n     * Graphical mode\r\n     * @type {Boolean}\r\n     */\r\n    this.graphical = false;\r\n\r\n    /**\r\n     * Maximum loops when using argument values to prevent infinity\r\n     * @type {Number}\r\n     */\r\n    this.loopMaxIterations = 0;\r\n\r\n    /**\r\n     * Constants used in kernel via `this.constants`\r\n     * @type {Object}\r\n     */\r\n    this.constants = null;\r\n    this.constantTypes = null;\r\n    this.constantBitRatios = null;\r\n    this.dynamicArguments = false;\r\n    this.dynamicOutput = false;\r\n\r\n    /**\r\n     *\r\n     * @type {Object}\r\n     */\r\n    this.canvas = null;\r\n\r\n    /**\r\n     *\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.context = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.checkContext = null;\r\n\r\n    /**\r\n     *\r\n     * @type {GPU}\r\n     */\r\n    this.gpu = null;\r\n\r\n    /**\r\n     *\r\n     * @type {IGPUFunction[]}\r\n     */\r\n    this.functions = null;\r\n\r\n    /**\r\n     *\r\n     * @type {IGPUNativeFunction[]}\r\n     */\r\n    this.nativeFunctions = null;\r\n\r\n    /**\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.injectedNative = null;\r\n\r\n    /**\r\n     *\r\n     * @type {ISubKernel[]}\r\n     */\r\n    this.subKernels = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.validate = true;\r\n\r\n    /**\r\n     * Enforces kernel to write to a new array or texture on run\r\n     * @type {Boolean}\r\n     */\r\n    this.immutable = false;\r\n\r\n    /**\r\n     * Enforces kernel to write to a texture on run\r\n     * @type {Boolean}\r\n     */\r\n    this.pipeline = false;\r\n\r\n    /**\r\n     * Make GPU use single precison or unsigned.  Acceptable values: 'single' or 'unsigned'\r\n     * @type {String|null}\r\n     * @enum 'single' | 'unsigned'\r\n     */\r\n    this.precision = null;\r\n\r\n    /**\r\n     *\r\n     * @type {String|null}\r\n     * @enum 'speed' | 'balanced' | 'precision'\r\n     */\r\n    this.tactic = 'balanced';\r\n\r\n    this.plugins = null;\r\n\r\n    this.returnType = null;\r\n    this.leadingReturnStatement = null;\r\n    this.followingReturnStatement = null;\r\n    this.optimizeFloatMemory = null;\r\n    this.strictIntegers = false;\r\n    this.fixIntegerDivisionAccuracy = null;\r\n    this.warnVarUsage = true;\r\n  }\r\n\r\n  mergeSettings(settings) {\r\n    for (let p in settings) {\r\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\r\n      switch (p) {\r\n        case 'output':\r\n          if (!Array.isArray(settings.output)) {\r\n            this.setOutput(settings.output); // Flatten output object\r\n            continue;\r\n          }\r\n          break;\r\n        case 'functions':\r\n          if (typeof settings.functions[0] === 'function') {\r\n            this.functions = settings.functions.map(source => functionToIFunction(source));\r\n            continue;\r\n          }\r\n          break;\r\n        case 'graphical':\r\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\r\n            this.precision = 'unsigned';\r\n          }\r\n          this[p] = settings[p];\r\n          continue;\r\n      }\r\n      this[p] = settings[p];\r\n    }\r\n\r\n    if (!this.canvas) this.canvas = this.initCanvas();\r\n    if (!this.context) this.context = this.initContext();\r\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\r\n  }\r\n  /**\r\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\r\n   * and instantiates the program.\r\n   * @abstract\r\n   */\r\n  build() {\r\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Run the kernel program, and send the output to renderOutput\r\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\r\n   * @returns {Float32Array|Float32Array[]|Float32Array[][]|void} Result The final output of the program, as float, and as Textures for reuse.\r\n   * @abstract\r\n   */\r\n  run() {\r\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Object}\r\n   */\r\n  initCanvas() {\r\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Object}\r\n   */\r\n  initContext() {\r\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @param {IFunctionSettings} settings\r\n   * @return {Object};\r\n   * @abstract\r\n   */\r\n  initPlugins(settings) {\r\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Setup the parameter types for the parameters\r\n   * supplied to the Kernel function\r\n   *\r\n   * @param {IArguments} args - The actual parameters sent to the Kernel\r\n   */\r\n  setupArguments(args) {\r\n    this.kernelArguments = [];\r\n    if (!this.argumentTypes) {\r\n      if (!this.argumentTypes) {\r\n        this.argumentTypes = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n          const argType = getVariableType(args[i], this.strictIntegers);\r\n          const type = argType === 'Integer' ? 'Number' : argType;\r\n          this.argumentTypes.push(type);\r\n          this.kernelArguments.push({\r\n            type\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.argumentTypes.length; i++) {\r\n        this.kernelArguments.push({\r\n          type: this.argumentTypes[i]\r\n        });\r\n      }\r\n    }\r\n\r\n    // setup sizes\r\n    this.argumentSizes = new Array(args.length);\r\n    this.argumentBitRatios = new Int32Array(args.length);\r\n\r\n    for (let i = 0; i < args.length; i++) {\r\n      const arg = args[i];\r\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\r\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\r\n    }\r\n\r\n    if (this.argumentNames.length !== args.length) {\r\n      throw new Error(`arguments are miss-aligned`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup constants\r\n   */\r\n  setupConstants() {\r\n    this.kernelConstants = [];\r\n    let needsConstantTypes = this.constantTypes === null;\r\n    if (needsConstantTypes) {\r\n      this.constantTypes = {};\r\n    }\r\n    this.constantBitRatios = {};\r\n    if (this.constants) {\r\n      for (let name in this.constants) {\r\n        if (needsConstantTypes) {\r\n          const type = getVariableType(this.constants[name], this.strictIntegers);\r\n          this.constantTypes[name] = type;\r\n          this.kernelConstants.push({\r\n            name,\r\n            type\r\n          });\r\n        } else {\r\n          this.kernelConstants.push({\r\n            name,\r\n            type: this.constantTypes[name]\r\n          });\r\n        }\r\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setOptimizeFloatMemory(flag) {\r\n    this.optimizeFloatMemory = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set output dimensions of the kernel function\r\n   * @param {Array|Object} output - The output array to set the kernel output size to\r\n   */\r\n  setOutput(output) {\r\n    if (output.hasOwnProperty('x')) {\r\n      if (output.hasOwnProperty('y')) {\r\n        if (output.hasOwnProperty('z')) {\r\n          this.output = [output.x, output.y, output.z];\r\n        } else {\r\n          this.output = [output.x, output.y];\r\n        }\r\n      } else {\r\n        this.output = [output.x];\r\n      }\r\n    } else {\r\n      this.output = output;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle debug mode\r\n   * @param {Boolean} flag - true to enable debug\r\n   */\r\n  setDebug(flag) {\r\n    this.debug = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle graphical output mode\r\n   * @param {Boolean} flag - true to enable graphical output\r\n   */\r\n  setGraphical(flag) {\r\n    this.graphical = flag;\r\n    this.precision = 'unsigned';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set the maximum number of loop iterations\r\n   * @param {number} max - iterations count\r\n   *\r\n   */\r\n  setLoopMaxIterations(max) {\r\n    this.loopMaxIterations = max;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set Constants\r\n   */\r\n  setConstants(constants) {\r\n    this.constants = constants;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [IKernelValueTypes] constantTypes\r\n   * @return {Kernel}\r\n   */\r\n  setConstantTypes(constantTypes) {\r\n    this.constantTypes = constantTypes;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IFunction[]|KernelFunction[]} functions\r\n   * @return {Kernel}\r\n   */\r\n  setFunctions(functions) {\r\n    if (typeof functions[0] === 'function') {\r\n      this.functions = functions.map(source => functionToIFunction(source));\r\n    } else {\r\n      this.functions = functions;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IGPUNativeFunction} nativeFunctions\r\n   * @return {Kernel}\r\n   */\r\n  setNativeFunctions(nativeFunctions) {\r\n    this.nativeFunctions = nativeFunctions;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} injectedNative\r\n   * @return {Kernel}\r\n   */\r\n  setInjectedNative(injectedNative) {\r\n    this.injectedNative = injectedNative;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set writing to texture on/off\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setPipeline(flag) {\r\n    this.pipeline = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set precision to 'unsigned' or 'single'\r\n   * @param {String} flag 'unsigned' or 'single'\r\n   * @return {Kernel}\r\n   */\r\n  setPrecision(flag) {\r\n    this.precision = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param flag\r\n   * @return {Kernel}\r\n   * @deprecated\r\n   */\r\n  setOutputToTexture(flag) {\r\n    warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\r\n    this.pipeline = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set to immutable\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setImmutable(flag) {\r\n    this.immutable = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Bind the canvas to kernel\r\n   * @param {Object} canvas\r\n   */\r\n  setCanvas(canvas) {\r\n    this.canvas = canvas;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setStrictIntegers(flag) {\r\n    this.strictIntegers = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setDynamicOutput(flag) {\r\n    this.dynamicOutput = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setHardcodeConstants(flag) {\r\n    warnDeprecated('method', 'setHardcodeConstants');\r\n    this.setDynamicOutput(flag);\r\n    this.setDynamicArguments(flag);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setDynamicArguments(flag) {\r\n    this.dynamicArguments = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setUseLegacyEncoder(flag) {\r\n    this.useLegacyEncoder = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setWarnVarUsage(flag) {\r\n    this.warnVarUsage = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @returns {Object}\r\n   */\r\n  getCanvas() {\r\n    warnDeprecated('method', 'getCanvas');\r\n    return this.canvas;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @returns {Object}\r\n   */\r\n  getWebGl() {\r\n    warnDeprecated('method', 'getWebGl');\r\n    return this.context;\r\n  }\r\n\r\n  /**\r\n   * @desc Bind the webGL instance to kernel\r\n   * @param {WebGLRenderingContext} context - webGl instance to bind\r\n   */\r\n  setContext(context) {\r\n    this.context = context;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [IKernelValueTypes|GPUVariableType[]] argumentTypes\r\n   * @return {Kernel}\r\n   */\r\n  setArgumentTypes(argumentTypes) {\r\n    if (Array.isArray(argumentTypes)) {\r\n      this.argumentTypes = argumentTypes;\r\n    } else {\r\n      this.argumentTypes = [];\r\n      for (const p in argumentTypes) {\r\n        const argumentIndex = this.argumentNames.indexOf(p);\r\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\r\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [Tactic] tactic\r\n   * @return {Kernel}\r\n   */\r\n  setTactic(tactic) {\r\n    this.tactic = tactic;\r\n    return this;\r\n  }\r\n\r\n  requestFallback(args) {\r\n    if (!this.onRequestFallback) {\r\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\r\n    }\r\n    this.fallbackRequested = true;\r\n    return this.onRequestFallback(args);\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings\r\n   * @abstract\r\n   */\r\n  validateSettings() {\r\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Add a sub kernel to the root kernel instance.\r\n   * This is what `createKernelMap` uses.\r\n   *\r\n   * @param {ISubKernel} subKernel - function (as a String) of the subKernel to add\r\n   */\r\n  addSubKernel(subKernel) {\r\n    if (this.subKernels === null) {\r\n      this.subKernels = [];\r\n    }\r\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\r\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\r\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\r\n    this.subKernels.push(subKernel);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Destroys all memory associated with this kernel\r\n   * @param {Boolean} [removeCanvasReferences] remove any associated canvas references\r\n   */\r\n  destroy(removeCanvasReferences) {\r\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\r\n   * @param value\r\n   * @returns {number}\r\n   */\r\n  getBitRatio(value) {\r\n    if (this.precision === 'single') {\r\n      // 8 and 16 are upconverted to float32\r\n      return 4;\r\n    } else if (Array.isArray(value[0])) {\r\n      return this.getBitRatio(value[0]);\r\n    } else if (value.constructor === Input) {\r\n      return this.getBitRatio(value.value);\r\n    }\r\n    switch (value.constructor) {\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Int8Array:\r\n        return 1;\r\n      case Uint16Array:\r\n      case Int16Array:\r\n        return 2;\r\n      case Float32Array:\r\n      case Int32Array:\r\n      default:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {number[]}\r\n   */\r\n  getPixels() {\r\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\r\n  }\r\n\r\n  checkOutput() {\r\n    if (!this.output || !isArray(this.output)) throw new Error('kernel.output not an array');\r\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\r\n    for (let i = 0; i < this.output.length; i++) {\r\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\r\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const settings = {\r\n      output: this.output,\r\n      threadDim: this.threadDim,\r\n      pipeline: this.pipeline,\r\n      argumentNames: this.argumentNames,\r\n      argumentsTypes: this.argumentTypes,\r\n      constants: this.constants,\r\n      pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\r\n      returnType: this.returnType,\r\n    };\r\n    return {\r\n      settings\r\n    };\r\n  }\r\n}\r\n","/**\r\n * @desc This handles all the raw state, converted state, etc. of a single function.\r\n * [INTERNAL] A collection of functionNodes.\r\n * @class\r\n */\r\nexport class FunctionBuilder {\r\n  /**\r\n   *\r\n   * @param {Kernel} kernel\r\n   * @param {FunctionNode} FunctionNode\r\n   * @param {object} [extraNodeOptions]\r\n   * @returns {FunctionBuilder}\r\n   * @static\r\n   */\r\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\r\n    const {\r\n      kernelArguments,\r\n      kernelConstants,\r\n      argumentNames,\r\n      argumentSizes,\r\n      argumentBitRatios,\r\n      constants,\r\n      constantBitRatios,\r\n      debug,\r\n      loopMaxIterations,\r\n      nativeFunctions,\r\n      output,\r\n      optimizeFloatMemory,\r\n      precision,\r\n      plugins,\r\n      source,\r\n      subKernels,\r\n      functions,\r\n      leadingReturnStatement,\r\n      followingReturnStatement,\r\n      dynamicArguments,\r\n      dynamicOutput,\r\n      warnVarUsage,\r\n    } = kernel;\r\n\r\n    const argumentTypes = new Array(kernelArguments.length);\r\n    const constantTypes = {};\r\n\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      argumentTypes[i] = kernelArguments[i].type;\r\n    }\r\n\r\n    for (let i = 0; i < kernelConstants.length; i++) {\r\n      const kernelConstant = kernelConstants[i]\r\n      constantTypes[kernelConstant.name] = kernelConstant.type;\r\n    }\r\n\r\n    const needsArgumentType = (functionName, index) => {\r\n      return functionBuilder.needsArgumentType(functionName, index);\r\n    };\r\n\r\n    const assignArgumentType = (functionName, index, type) => {\r\n      functionBuilder.assignArgumentType(functionName, index, type);\r\n    };\r\n\r\n    const lookupReturnType = (functionName, ast, requestingNode) => {\r\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\r\n    };\r\n\r\n    const lookupFunctionArgumentTypes = (functionName) => {\r\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\r\n    };\r\n\r\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\r\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\r\n    };\r\n\r\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\r\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\r\n    };\r\n\r\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\r\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\r\n    };\r\n\r\n    const triggerTrackArgumentSynonym = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\r\n      functionBuilder.trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex);\r\n    };\r\n\r\n    const lookupArgumentSynonym = (originFunctionName, functionName, argumentName) => {\r\n      return functionBuilder.lookupArgumentSynonym(originFunctionName, functionName, argumentName);\r\n    };\r\n\r\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\r\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\r\n    };\r\n\r\n    const onNestedFunction = (ast, returnType) => {\r\n      const argumentNames = [];\r\n      for (let i = 0; i < ast.params.length; i++) {\r\n        argumentNames.push(ast.params[i].name);\r\n      }\r\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\r\n        returnType: null,\r\n        ast,\r\n        name: ast.id.name,\r\n        argumentNames,\r\n        lookupReturnType,\r\n        lookupFunctionArgumentTypes,\r\n        lookupFunctionArgumentName,\r\n        lookupFunctionArgumentBitRatio,\r\n        needsArgumentType,\r\n        assignArgumentType,\r\n        triggerImplyArgumentType,\r\n        triggerTrackArgumentSynonym,\r\n        lookupArgumentSynonym,\r\n        onFunctionCall,\r\n        warnVarUsage,\r\n      }));\r\n      nestedFunction.traceFunctionAST(ast);\r\n      functionBuilder.addFunctionNode(nestedFunction);\r\n    };\r\n\r\n    const nodeOptions = Object.assign({\r\n      isRootKernel: false,\r\n      onNestedFunction,\r\n      lookupReturnType,\r\n      lookupFunctionArgumentTypes,\r\n      lookupFunctionArgumentName,\r\n      lookupFunctionArgumentBitRatio,\r\n      needsArgumentType,\r\n      assignArgumentType,\r\n      triggerImplyArgumentType,\r\n      triggerTrackArgumentSynonym,\r\n      lookupArgumentSynonym,\r\n      onFunctionCall,\r\n      optimizeFloatMemory,\r\n      precision,\r\n      constants,\r\n      constantTypes,\r\n      constantBitRatios,\r\n      debug,\r\n      loopMaxIterations,\r\n      output,\r\n      plugins,\r\n      dynamicArguments,\r\n      dynamicOutput,\r\n    }, extraNodeOptions || {});\r\n\r\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\r\n      isRootKernel: true,\r\n      name: 'kernel',\r\n      argumentNames,\r\n      argumentTypes,\r\n      argumentSizes,\r\n      argumentBitRatios,\r\n      leadingReturnStatement,\r\n      followingReturnStatement,\r\n    });\r\n\r\n    if (typeof source === 'object' && source.functionNodes) {\r\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\r\n    }\r\n\r\n    const rootNode = new FunctionNode(source, rootNodeOptions);\r\n\r\n    let functionNodes = null;\r\n    if (functions) {\r\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\r\n        returnType: fn.returnType,\r\n        argumentTypes: fn.argumentTypes,\r\n        output,\r\n        plugins,\r\n        constants,\r\n        constantTypes,\r\n        constantBitRatios,\r\n        optimizeFloatMemory,\r\n        precision,\r\n        lookupReturnType,\r\n        lookupFunctionArgumentTypes,\r\n        lookupFunctionArgumentName,\r\n        lookupFunctionArgumentBitRatio,\r\n        needsArgumentType,\r\n        assignArgumentType,\r\n        triggerImplyArgumentType,\r\n        triggerTrackArgumentSynonym,\r\n        lookupArgumentSynonym,\r\n        onFunctionCall,\r\n      }));\r\n    }\r\n\r\n    let subKernelNodes = null;\r\n    if (subKernels) {\r\n      subKernelNodes = subKernels.map((subKernel) => {\r\n        const { name, source } = subKernel;\r\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\r\n          name,\r\n          isSubKernel: true,\r\n          isRootKernel: false,\r\n        }));\r\n      });\r\n    }\r\n\r\n    const functionBuilder = new FunctionBuilder({\r\n      kernel,\r\n      rootNode,\r\n      functionNodes,\r\n      nativeFunctions,\r\n      subKernelNodes\r\n    });\r\n\r\n    return functionBuilder;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IFunctionBuilderSettings} [settings]\r\n   */\r\n  constructor(settings) {\r\n    settings = settings || {};\r\n    this.kernel = settings.kernel;\r\n    this.rootNode = settings.rootNode;\r\n    this.functionNodes = settings.functionNodes || [];\r\n    this.subKernelNodes = settings.subKernelNodes || [];\r\n    this.nativeFunctions = settings.nativeFunctions || [];\r\n    this.functionMap = {};\r\n    this.nativeFunctionNames = [];\r\n    this.lookupChain = [];\r\n    this.argumentChain = [];\r\n    this.functionNodeDependencies = {};\r\n    this.functionCalls = {};\r\n\r\n    if (this.rootNode) {\r\n      this.functionMap['kernel'] = this.rootNode;\r\n    }\r\n\r\n    if (this.functionNodes) {\r\n      for (let i = 0; i < this.functionNodes.length; i++) {\r\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\r\n      }\r\n    }\r\n\r\n    if (this.subKernelNodes) {\r\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\r\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\r\n      }\r\n    }\r\n\r\n    if (this.nativeFunctions) {\r\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\r\n        const nativeFunction = this.nativeFunctions[i];\r\n        this.nativeFunctionNames.push(nativeFunction.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Add the function node directly\r\n   *\r\n   * @param {FunctionNode} functionNode - functionNode to add\r\n   *\r\n   */\r\n  addFunctionNode(functionNode) {\r\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\r\n    this.functionMap[functionNode.name] = functionNode;\r\n    if (functionNode.isRootKernel) {\r\n      this.rootNode = functionNode;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Trace all the depending functions being called, from a single function\r\n   *\r\n   * This allow for 'unneeded' functions to be automatically optimized out.\r\n   * Note that the 0-index, is the starting function trace.\r\n   *\r\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\r\n   * @param {String[]} [retList] - Returning list of function names that is traced. Including itself.\r\n   *\r\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\r\n   */\r\n  traceFunctionCalls(functionName, retList) {\r\n    functionName = functionName || 'kernel';\r\n    retList = retList || [];\r\n\r\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\r\n      if (retList.indexOf(functionName) === -1) {\r\n        retList.push(functionName);\r\n      }\r\n      return retList;\r\n    }\r\n\r\n    const functionNode = this.functionMap[functionName];\r\n    if (functionNode) {\r\n      // Check if function already exists\r\n      const functionIndex = retList.indexOf(functionName);\r\n      if (functionIndex === -1) {\r\n        retList.push(functionName);\r\n        functionNode.toString(); //ensure JS trace is done\r\n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\r\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\r\n        }\r\n      } else {\r\n        /**\r\n         * https://github.com/gpujs/gpu.js/issues/207\r\n         * if dependent function is already in the list, because a function depends on it, and because it has\r\n         * already been traced, we know that we must move the dependent function to the end of the the retList.\r\n         * */\r\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\r\n        retList.push(dependantFunctionName);\r\n      }\r\n    }\r\n\r\n    return retList;\r\n  }\r\n\r\n  /**\r\n   * @desc Return the string for a function\r\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getPrototypeString(functionName) {\r\n    return this.getPrototypes(functionName).join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Return the string for a function\r\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getPrototypes(functionName) {\r\n    if (this.rootNode) {\r\n      this.rootNode.toString();\r\n    }\r\n    if (functionName) {\r\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\r\n    }\r\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\r\n  }\r\n\r\n  /**\r\n   * @desc Get string from function names\r\n   * @param {String[]} functionList - List of function to build string\r\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getStringFromFunctionNames(functionList) {\r\n    const ret = [];\r\n    for (let i = 0; i < functionList.length; ++i) {\r\n      const node = this.functionMap[functionList[i]];\r\n      if (node) {\r\n        ret.push(this.functionMap[functionList[i]].toString());\r\n      }\r\n    }\r\n    return ret.join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Return string of all functions converted\r\n   * @param {String[]} functionList - List of function names to build the string.\r\n   * @returns {Array} Prototypes of all functions converted\r\n   */\r\n  getPrototypesFromFunctionNames(functionList) {\r\n    const ret = [];\r\n    for (let i = 0; i < functionList.length; ++i) {\r\n      const functionName = functionList[i];\r\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\r\n      if (functionIndex > -1) {\r\n        ret.push(this.nativeFunctions[functionIndex].source);\r\n        continue;\r\n      }\r\n      const node = this.functionMap[functionName];\r\n      if (node) {\r\n        ret.push(node.toString());\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\r\n      const nativeIndex = this.nativeFunctions.indexOf(name);\r\n      if (nativeIndex > -1) {\r\n        return {\r\n          name,\r\n          source: this.nativeFunctions[nativeIndex].source\r\n        };\r\n      } else if (this.functionMap[name]) {\r\n        return this.functionMap[name].toJSON();\r\n      } else {\r\n        throw new Error(`function ${ name } not found`);\r\n      }\r\n    });\r\n  }\r\n\r\n  fromJSON(jsonFunctionNodes, FunctionNode) {\r\n    this.functionMap = {};\r\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\r\n      const jsonFunctionNode = jsonFunctionNodes[i];\r\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Get string for a particular function name\r\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {String} settings - The string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getString(functionName) {\r\n    if (functionName) {\r\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\r\n    }\r\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\r\n  }\r\n\r\n  lookupReturnType(functionName, ast, requestingNode) {\r\n    if (ast.type !== 'CallExpression') {\r\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\r\n    }\r\n    if (this._isNativeFunction(functionName)) {\r\n      return this._lookupNativeFunctionReturnType(functionName);\r\n    } else if (this._isFunction(functionName)) {\r\n      const node = this._getFunction(functionName);\r\n      if (node.returnType) {\r\n        return node.returnType;\r\n      } else {\r\n        for (let i = 0; i < this.lookupChain.length; i++) {\r\n          // detect circlical logic\r\n          if (this.lookupChain[i].ast === ast) {\r\n            // detect if arguments have not resolved, preventing a return type\r\n            // if so, go ahead and resolve them, so we can resolve the return type\r\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\r\n              const args = ast.arguments;\r\n              for (let j = 0; j < args.length; j++) {\r\n                this.lookupChain.push({\r\n                  name: requestingNode.name,\r\n                  ast: args[i],\r\n                  requestingNode\r\n                });\r\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\r\n                this.lookupChain.pop();\r\n              }\r\n              return node.returnType = node.getType(node.getJsAST());\r\n            }\r\n\r\n            throw new Error('circlical logic detected!');\r\n          }\r\n        }\r\n        // get ready for a ride!\r\n        this.lookupChain.push({\r\n          name: requestingNode.name,\r\n          ast,\r\n          requestingNode\r\n        });\r\n        const type = node.getType(node.getJsAST());\r\n        this.lookupChain.pop();\r\n        return node.returnType = type;\r\n      }\r\n    }\r\n\r\n    // function not found, maybe native?\r\n    return null;\r\n\r\n    /**\r\n     * first iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = null\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = null\r\n     * calcErrorOutput.targets = null\r\n     * calcErrorOutput.returns = null\r\n     * calcDeltasSigmoid.error = null\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = null\r\n     *\r\n     * resolvable are:\r\n     * calcErrorOutput.output\r\n     * calcErrorOutput.targets\r\n     * calcErrorOutput.returns\r\n     *\r\n     * second iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = null\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = Number\r\n     * calcErrorOutput.targets = Array\r\n     * calcErrorOutput.returns = Number\r\n     * calcDeltasSigmoid.error = null\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = null\r\n     *\r\n     * resolvable are:\r\n     * calcDeltasSigmoid.error\r\n     * calcDeltasSigmoid.returns\r\n     * kernel.returns\r\n     *\r\n     * third iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = Number\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = Number\r\n     * calcErrorOutput.targets = Array\r\n     * calcErrorOutput.returns = Number\r\n     * calcDeltasSigmoid.error = Number\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = Number\r\n     *\r\n     *\r\n     */\r\n  }\r\n\r\n  _getFunction(functionName) {\r\n    if (!this._isFunction(functionName)) {\r\n      new Error(`Function ${functionName} not found`);\r\n    }\r\n    return this.functionMap[functionName];\r\n  }\r\n\r\n  _isFunction(functionName) {\r\n    return Boolean(this.functionMap[functionName]);\r\n  }\r\n\r\n  _getNativeFunction(functionName) {\r\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\r\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _isNativeFunction(functionName) {\r\n    return Boolean(this._getNativeFunction(functionName));\r\n  }\r\n\r\n  _lookupNativeFunctionReturnType(functionName) {\r\n    let nativeFunction = this._getNativeFunction(functionName);\r\n    if (nativeFunction) {\r\n      return nativeFunction.returnType;\r\n    }\r\n    throw new Error(`Native function ${ functionName } not found`);\r\n  }\r\n\r\n  lookupFunctionArgumentTypes(functionName) {\r\n    if (this._isNativeFunction(functionName)) {\r\n      return this._getNativeFunction(functionName).argumentTypes;\r\n    } else if (this._isFunction(functionName)) {\r\n      return this._getFunction(functionName).argumentTypes;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  lookupFunctionArgumentName(functionName, argumentIndex) {\r\n    return this._getFunction(functionName).argumentNames[argumentIndex];\r\n  }\r\n\r\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\r\n    if (!this._isFunction(functionName)) {\r\n      throw new Error('function not found');\r\n    }\r\n    if (this.rootNode.name === functionName) {\r\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\r\n      if (i !== -1) {\r\n        return this.rootNode.argumentBitRatios[i];\r\n      } else {\r\n        throw new Error('argument bit ratio not found');\r\n      }\r\n    } else {\r\n      const node = this._getFunction(functionName);\r\n      const argumentSynonym = node.argumentSynonym[node.synonymIndex];\r\n      if (!argumentSynonym) {\r\n        throw new Error('argument synonym not found');\r\n      }\r\n      return this.lookupFunctionArgumentBitRatio(argumentSynonym.functionName, argumentSynonym.argumentName);\r\n    }\r\n  }\r\n\r\n  needsArgumentType(functionName, i) {\r\n    if (!this._isFunction(functionName)) return false;\r\n    const fnNode = this._getFunction(functionName);\r\n    return !fnNode.argumentTypes[i];\r\n  }\r\n\r\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\r\n    if (!this._isFunction(functionName)) return;\r\n    const fnNode = this._getFunction(functionName);\r\n    if (!fnNode.argumentTypes[i]) {\r\n      fnNode.argumentTypes[i] = argumentType;\r\n    }\r\n  }\r\n\r\n  trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\r\n    if (!this._isFunction(calleeFunctionName)) return;\r\n    const node = this._getFunction(calleeFunctionName);\r\n    if (!node.argumentSynonym) {\r\n      node.argumentSynonym = {};\r\n    }\r\n    const calleeArgumentName = node.argumentNames[argumentIndex];\r\n    if (!node.argumentSynonym[calleeArgumentName]) {\r\n      node.argumentSynonym[calleeArgumentName] = {};\r\n    }\r\n    node.synonymIndex++;\r\n    node.argumentSynonym[node.synonymIndex] = {\r\n      functionName,\r\n      argumentName,\r\n      calleeArgumentName,\r\n      calleeFunctionName,\r\n    };\r\n  }\r\n\r\n  lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\r\n    if (originFunctionName === functionName) return argumentName;\r\n    if (!this._isFunction(functionName)) return null;\r\n    const node = this._getFunction(functionName);\r\n    const argumentSynonym = node.argumentSynonym[node.synonymUseIndex];\r\n    if (!argumentSynonym) return null;\r\n    if (argumentSynonym.calleeArgumentName !== argumentName) return null;\r\n    node.synonymUseIndex++;\r\n    if (originFunctionName !== functionName) {\r\n      return this.lookupArgumentSynonym(originFunctionName, argumentSynonym.functionName, argumentSynonym.argumentName);\r\n    }\r\n    return argumentSynonym.argumentName;\r\n  }\r\n\r\n  trackFunctionCall(functionName, calleeFunctionName, args) {\r\n    if (!this.functionNodeDependencies[functionName]) {\r\n      this.functionNodeDependencies[functionName] = new Set();\r\n      this.functionCalls[functionName] = [];\r\n    }\r\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\r\n    this.functionCalls[functionName].push(args);\r\n  }\r\n\r\n  getKernelResultType() {\r\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\r\n  }\r\n\r\n  getSubKernelResultType(index) {\r\n    const subKernelNode = this.subKernelNodes[index];\r\n    let called = false;\r\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\r\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\r\n      if (functionCall.ast.callee.name === subKernelNode.name) {\r\n        called = true;\r\n      }\r\n    }\r\n    if (!called) {\r\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\r\n    }\r\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\r\n  }\r\n\r\n  getReturnTypes() {\r\n    const result = {\r\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\r\n    };\r\n    const list = this.traceFunctionCalls(this.rootNode.name);\r\n    for (let i = 0; i < list.length; i++) {\r\n      const functionName = list[i];\r\n      const functionNode = this.functionMap[functionName];\r\n      result[functionName] = functionNode.getType(functionNode.ast);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","export class FunctionTracer {\r\n  constructor(ast) {\r\n    this.runningContexts = [];\r\n    this.contexts = [];\r\n    this.functionCalls = [];\r\n    this.declarations = [];\r\n    this.identifiers = [];\r\n    this.functions = [];\r\n    this.returnStatements = [];\r\n    this.inLoopInit = false;\r\n    this.scan(ast);\r\n  }\r\n\r\n  get currentContext() {\r\n    return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\r\n  }\r\n\r\n  newContext(run) {\r\n    const newContext = Object.assign({}, this.currentContext);\r\n    this.contexts.push(newContext);\r\n    this.runningContexts.push(newContext);\r\n    run();\r\n    this.runningContexts.pop();\r\n  }\r\n\r\n  /**\r\n   * Recursively scans AST for declarations and functions, and add them to their respective context\r\n   * @param ast\r\n   */\r\n  scan(ast) {\r\n    if (Array.isArray(ast)) {\r\n      for (let i = 0; i < ast.length; i++) {\r\n        this.scan(ast[i]);\r\n      }\r\n      return;\r\n    }\r\n    switch (ast.type) {\r\n      case 'Program':\r\n        this.scan(ast.body);\r\n        break;\r\n      case 'BlockStatement':\r\n        this.newContext(() => {\r\n          this.scan(ast.body);\r\n        });\r\n        break;\r\n      case 'AssignmentExpression':\r\n      case 'LogicalExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'BinaryExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'UpdateExpression':\r\n      case 'UnaryExpression':\r\n        this.scan(ast.argument);\r\n        break;\r\n      case 'VariableDeclaration':\r\n        this.scan(ast.declarations);\r\n        break;\r\n      case 'VariableDeclarator':\r\n        const { currentContext } = this;\r\n        const declaration = {\r\n          ast: ast,\r\n          context: currentContext,\r\n          name: ast.id.name,\r\n          origin: 'declaration',\r\n          forceInteger: this.inLoopInit,\r\n          assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name),\r\n        };\r\n        currentContext[ast.id.name] = declaration;\r\n        this.declarations.push(declaration);\r\n        this.scan(ast.id);\r\n        this.scan(ast.init);\r\n        break;\r\n      case 'FunctionExpression':\r\n      case 'FunctionDeclaration':\r\n        if (this.runningContexts.length === 0) {\r\n          this.scan(ast.body);\r\n        } else {\r\n          this.functions.push(ast);\r\n        }\r\n        break;\r\n      case 'IfStatement':\r\n        this.scan(ast.test);\r\n        this.scan(ast.consequent);\r\n        if (ast.alternate) this.scan(ast.alternate);\r\n        break;\r\n      case 'ForStatement':\r\n        this.newContext(() => {\r\n          this.inLoopInit = true;\r\n          this.scan(ast.init);\r\n          this.inLoopInit = false;\r\n          this.scan(ast.test);\r\n          this.scan(ast.update);\r\n          this.newContext(() => {\r\n            this.scan(ast.body);\r\n          });\r\n        });\r\n        break;\r\n      case 'DoWhileStatement':\r\n      case 'WhileStatement':\r\n        this.newContext(() => {\r\n          this.scan(ast.body);\r\n          this.scan(ast.test);\r\n        });\r\n        break;\r\n      case 'Identifier':\r\n        this.identifiers.push({\r\n          context: this.currentContext,\r\n          ast,\r\n        });\r\n        break;\r\n      case 'ReturnStatement':\r\n        this.returnStatements.push(ast);\r\n        this.scan(ast.argument);\r\n        break;\r\n      case 'MemberExpression':\r\n        this.scan(ast.object);\r\n        this.scan(ast.property);\r\n        break;\r\n      case 'ExpressionStatement':\r\n        this.scan(ast.expression);\r\n        break;\r\n      case 'CallExpression':\r\n        this.functionCalls.push({\r\n          context: this.currentContext,\r\n          ast,\r\n        });\r\n        this.scan(ast.arguments);\r\n        break;\r\n      case 'ArrayExpression':\r\n        this.scan(ast.elements);\r\n        break;\r\n      case 'ConditionalExpression':\r\n        this.scan(ast.test);\r\n        this.scan(ast.alternate);\r\n        this.scan(ast.consequent);\r\n        break;\r\n      case 'SwitchStatement':\r\n        this.scan(ast.discriminant);\r\n        this.scan(ast.cases);\r\n        break;\r\n      case 'SwitchCase':\r\n        this.scan(ast.test);\r\n        this.scan(ast.consequent);\r\n        break;\r\n      case 'ThisExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'Literal':\r\n      case 'DebuggerStatement':\r\n      case 'EmptyStatement':\r\n      case 'BreakStatement':\r\n      case 'ContinueStatement':\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled type \"${ast.type}\"`);\r\n    }\r\n  }\r\n}\r\n","import { parse } from 'acorn';\r\nimport { FunctionTracer } from './function-tracer';\r\nimport {\r\n  getArgumentNamesFromString,\r\n  getAstString,\r\n  getFunctionNameFromString,\r\n  isFunctionString,\r\n} from '../common';\r\n\r\n/**\r\n *\r\n * @desc Represents a single function, inside JS, webGL, or openGL.\r\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\r\n */\r\nexport class FunctionNode {\r\n  /**\r\n   *\r\n   * @param {string|object} source\r\n   * @param {IFunctionSettings} [settings]\r\n   */\r\n  constructor(source, settings) {\r\n    if (!source && !settings.ast) {\r\n      throw new Error('source parameter is missing');\r\n    }\r\n    settings = settings || {};\r\n    this.source = source;\r\n    this.ast = null;\r\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\r\n      'kernel' :\r\n      (settings.name || getFunctionNameFromString(source)) : null;\r\n    this.calledFunctions = [];\r\n    this.constants = {};\r\n    this.constantTypes = {};\r\n    this.constantBitRatios = {};\r\n    this.isRootKernel = false;\r\n    this.isSubKernel = false;\r\n    this.debug = null;\r\n    this.declarations = null;\r\n    this.functions = null;\r\n    this.identifiers = null;\r\n    this.contexts = null;\r\n    this.functionCalls = null;\r\n    this.states = [];\r\n    this.needsArgumentType = null;\r\n    this.assignArgumentType = null;\r\n    this.lookupReturnType = null;\r\n    this.lookupFunctionArgumentTypes = null;\r\n    this.lookupFunctionArgumentBitRatio = null;\r\n    this.triggerImplyArgumentType = null;\r\n    this.triggerImplyArgumentBitRatio = null;\r\n    this.onNestedFunction = null;\r\n    this.onFunctionCall = null;\r\n    this.optimizeFloatMemory = null;\r\n    this.precision = null;\r\n    this.loopMaxIterations = null;\r\n    this.argumentNames = (typeof this.source === 'string' ? getArgumentNamesFromString(this.source) : null);\r\n    this.argumentTypes = [];\r\n    this.argumentSizes = [];\r\n    this.argumentBitRatios = null;\r\n    this.returnType = null;\r\n    this.output = [];\r\n    this.plugins = null;\r\n    this.leadingReturnStatement = null;\r\n    this.followingReturnStatement = null;\r\n    this.dynamicOutput = null;\r\n    this.dynamicArguments = null;\r\n    this.strictTypingChecking = false;\r\n    this.fixIntegerDivisionAccuracy = null;\r\n    this.warnVarUsage = true;\r\n\r\n    if (settings) {\r\n      for (const p in settings) {\r\n        if (!settings.hasOwnProperty(p)) continue;\r\n        if (!this.hasOwnProperty(p)) continue;\r\n        this[p] = settings[p];\r\n      }\r\n    }\r\n\r\n    this.literalTypes = {};\r\n\r\n    this.validate();\r\n    this._string = null;\r\n    this._internalVariableNames = {};\r\n  }\r\n\r\n  validate() {\r\n    if (typeof this.source !== 'string' && !this.ast) {\r\n      throw new Error('this.source not a string');\r\n    }\r\n\r\n    if (!this.ast && !isFunctionString(this.source)) {\r\n      throw new Error('this.source not a function string');\r\n    }\r\n\r\n    if (!this.name) {\r\n      throw new Error('this.name could not be set');\r\n    }\r\n\r\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\r\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\r\n    }\r\n\r\n    if (this.output.length < 1) {\r\n      throw new Error('this.output is not big enough');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} name\r\n   * @returns {boolean}\r\n   */\r\n  isIdentifierConstant(name) {\r\n    if (!this.constants) return false;\r\n    return this.constants.hasOwnProperty(name);\r\n  }\r\n\r\n  isInput(argumentName) {\r\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\r\n  }\r\n\r\n  pushState(state) {\r\n    this.states.push(state);\r\n  }\r\n\r\n  popState(state) {\r\n    if (this.state !== state) {\r\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\r\n    }\r\n    this.states.pop();\r\n  }\r\n\r\n  isState(state) {\r\n    return this.state === state;\r\n  }\r\n\r\n  get state() {\r\n    return this.states[this.states.length - 1];\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * @name astMemberExpressionUnroll\r\n   * @desc Parses the abstract syntax tree for binary expression.\r\n   *\r\n   * <p>Utility function for astCallExpression.</p>\r\n   *\r\n   * @param {Object} ast - the AST object to parse\r\n   *\r\n   * @returns {String} the function namespace call, unrolled\r\n   */\r\n  astMemberExpressionUnroll(ast) {\r\n    if (ast.type === 'Identifier') {\r\n      return ast.name;\r\n    } else if (ast.type === 'ThisExpression') {\r\n      return 'this';\r\n    }\r\n\r\n    if (ast.type === 'MemberExpression') {\r\n      if (ast.object && ast.property) {\r\n        //babel sniffing\r\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\r\n          return this.astMemberExpressionUnroll(ast.property);\r\n        }\r\n\r\n        return (\r\n          this.astMemberExpressionUnroll(ast.object) +\r\n          '.' +\r\n          this.astMemberExpressionUnroll(ast.property)\r\n        );\r\n      }\r\n    }\r\n\r\n    //babel sniffing\r\n    if (ast.hasOwnProperty('expressions')) {\r\n      const firstExpression = ast.expressions[0];\r\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\r\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\r\n      }\r\n    }\r\n\r\n    // Failure, unknown expression\r\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\r\n   * This is used internally to convert to shader code\r\n   *\r\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\r\n   *\r\n   * @returns {Object} The function AST Object, note that result is cached under this.ast;\r\n   */\r\n  getJsAST(inParser) {\r\n    if (this.ast) {\r\n      return this.ast;\r\n    }\r\n    if (typeof this.source === 'object') {\r\n      this.traceFunctionAST(this.source);\r\n      return this.ast = this.source;\r\n    }\r\n\r\n    const parser = inParser && inParser.hasOwnProperty('parse') ? inParser.parse : parse\r\n    if (inParser === null) {\r\n      throw new Error('Missing JS to AST parser');\r\n    }\r\n\r\n    const ast = Object.freeze(parser(`const parser_${ this.name } = ${ this.source };`, {\r\n      locations: true\r\n    }));\r\n    // take out the function object, outside the var declarations\r\n    const functionAST = ast.body[0].declarations[0].init;\r\n    this.traceFunctionAST(functionAST);\r\n\r\n    if (!ast) {\r\n      throw new Error('Failed to parse JS code');\r\n    }\r\n\r\n    return this.ast = functionAST;\r\n  }\r\n\r\n  traceFunctionAST(ast) {\r\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\r\n    this.contexts = contexts;\r\n    this.identifiers = identifiers;\r\n    this.functionCalls = functionCalls;\r\n    this.declarations = [];\r\n    this.functions = functions;\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      const { ast, context, name, origin, forceInteger, assignable } = declaration;\r\n      const { init } = ast;\r\n      const dependencies = this.getDependencies(init);\r\n      let valueType = null;\r\n\r\n      if (forceInteger) {\r\n        valueType = 'Integer';\r\n      } else {\r\n        if (init) {\r\n          const realType = this.getType(init);\r\n          switch (realType) {\r\n            case 'Integer':\r\n            case 'Float':\r\n            case 'Number':\r\n              if (init.type === 'MemberExpression') {\r\n                valueType = realType;\r\n              } else {\r\n                valueType = 'Number';\r\n              }\r\n              break;\r\n            case 'LiteralInteger':\r\n              valueType = 'Number';\r\n              break;\r\n            default:\r\n              valueType = realType;\r\n          }\r\n        }\r\n      }\r\n      this.declarations.push({\r\n        valueType,\r\n        dependencies,\r\n        isSafe: this.isSafeDependencies(dependencies),\r\n        ast,\r\n        name,\r\n        context,\r\n        origin,\r\n        assignable,\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < functions.length; i++) {\r\n      this.onNestedFunction(functions[i]);\r\n    }\r\n  }\r\n\r\n  getDeclaration(ast) {\r\n    for (let i = 0; i < this.identifiers.length; i++) {\r\n      const identifier = this.identifiers[i];\r\n      if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\r\n        for (let j = 0; j < this.declarations.length; j++) {\r\n          const declaration = this.declarations[j];\r\n          if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\r\n            return declaration;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @desc Return the type of parameter sent to subKernel/Kernel.\r\n   * @param {Object} ast - Identifier\r\n   * @returns {String} Type of the parameter\r\n   */\r\n  getVariableType(ast) {\r\n    if (ast.type !== 'Identifier') {\r\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\r\n    }\r\n    let type = null;\r\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\r\n    if (argumentIndex === -1) {\r\n      const declaration = this.getDeclaration(ast);\r\n      if (declaration) {\r\n        return declaration.valueType;\r\n      }\r\n    } else {\r\n      const argumentType = this.argumentTypes[argumentIndex];\r\n      if (argumentType) {\r\n        type = argumentType;\r\n      }\r\n    }\r\n    if (!type && this.strictTypingChecking) {\r\n      throw new Error(`Declaration of ${name} not found`);\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Generally used to lookup the value type returned from a member expressions\r\n   * @param {String} type\r\n   * @return {String}\r\n   */\r\n  getLookupType(type) {\r\n    if (!typeLookupMap.hasOwnProperty(type)) {\r\n      throw new Error(`unknown typeLookupMap ${ type }`);\r\n    }\r\n    return typeLookupMap[type];\r\n  }\r\n\r\n  getConstantType(constantName) {\r\n    if (this.constantTypes[constantName]) {\r\n      const type = this.constantTypes[constantName];\r\n      if (type === 'Float') {\r\n        return 'Number';\r\n      } else {\r\n        return type;\r\n      }\r\n    }\r\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\r\n  }\r\n\r\n  toString() {\r\n    if (this._string) return this._string;\r\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\r\n  }\r\n\r\n  toJSON() {\r\n    const settings = {\r\n      source: this.source,\r\n      name: this.name,\r\n      constants: this.constants,\r\n      constantTypes: this.constantTypes,\r\n      isRootKernel: this.isRootKernel,\r\n      isSubKernel: this.isSubKernel,\r\n      debug: this.debug,\r\n      output: this.output,\r\n      loopMaxIterations: this.loopMaxIterations,\r\n      argumentNames: this.argumentNames,\r\n      argumentTypes: this.argumentTypes,\r\n      argumentSizes: this.argumentSizes,\r\n      returnType: this.returnType,\r\n      leadingReturnStatement: this.leadingReturnStatement,\r\n      followingReturnStatement: this.followingReturnStatement,\r\n    };\r\n\r\n    return {\r\n      ast: this.ast,\r\n      settings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Recursively looks up type for ast expression until it's found\r\n   * @param ast\r\n   * @returns {String|null}\r\n   */\r\n  getType(ast) {\r\n    if (Array.isArray(ast)) {\r\n      return this.getType(ast[ast.length - 1]);\r\n    }\r\n    switch (ast.type) {\r\n      case 'BlockStatement':\r\n        return this.getType(ast.body);\r\n      case 'ArrayExpression':\r\n        return `Array(${ ast.elements.length })`;\r\n      case 'Literal':\r\n        const literalKey = `${ast.start},${ast.end}`;\r\n        if (this.literalTypes[literalKey]) {\r\n          return this.literalTypes[literalKey];\r\n        }\r\n        if (Number.isInteger(ast.value)) {\r\n          return 'LiteralInteger';\r\n        } else if (ast.value === true || ast.value === false) {\r\n          return 'Boolean';\r\n        } else {\r\n          return 'Number';\r\n        }\r\n        case 'AssignmentExpression':\r\n          return this.getType(ast.left);\r\n        case 'CallExpression':\r\n          if (this.isAstMathFunction(ast)) {\r\n            return 'Number';\r\n          }\r\n          if (!ast.callee || !ast.callee.name) {\r\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\r\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\r\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\r\n              return this.lookupReturnType(functionName, ast, this);\r\n            }\r\n            throw this.astErrorOutput('Unknown call expression', ast);\r\n          }\r\n          if (ast.callee && ast.callee.name) {\r\n            const functionName = ast.callee.name;\r\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\r\n            return this.lookupReturnType(functionName, ast, this);\r\n          }\r\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\r\n        case 'BinaryExpression':\r\n          // modulos is Number\r\n          switch (ast.operator) {\r\n            case '%':\r\n            case '/':\r\n              if (this.fixIntegerDivisionAccuracy) {\r\n                return 'Number';\r\n              } else {\r\n                break;\r\n              }\r\n              case '>':\r\n              case '<':\r\n                return 'Boolean';\r\n              case '&':\r\n              case '|':\r\n              case '^':\r\n              case '<<':\r\n              case '>>':\r\n              case '>>>':\r\n                return 'Integer';\r\n          }\r\n          const type = this.getType(ast.left);\r\n          if (this.isState('skip-literal-correction')) return type;\r\n          if (type === 'LiteralInteger') {\r\n            const rightType = this.getType(ast.right);\r\n            if (rightType === 'LiteralInteger') {\r\n              if (ast.left.value % 1 === 0) {\r\n                return 'Integer';\r\n              } else {\r\n                return 'Float';\r\n              }\r\n            }\r\n            return rightType;\r\n          }\r\n          return typeLookupMap[type] || type;\r\n        case 'UpdateExpression':\r\n          return this.getType(ast.argument);\r\n        case 'UnaryExpression':\r\n          if (ast.operator === '~') {\r\n            return 'Integer';\r\n          }\r\n          return this.getType(ast.argument);\r\n        case 'VariableDeclaration': {\r\n          const declarations = ast.declarations;\r\n          let lastType;\r\n          for (let i = 0; i < declarations.length; i++) {\r\n            const declaration = declarations[i];\r\n            lastType = this.getType(declaration);\r\n          }\r\n          if (!lastType) {\r\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\r\n          }\r\n          return lastType;\r\n        }\r\n        case 'VariableDeclarator':\r\n          const declaration = this.getDeclaration(ast.id);\r\n          if (!declaration) {\r\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\r\n          }\r\n\r\n          if (!declaration.valueType) {\r\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\r\n          }\r\n\r\n          return declaration.valueType;\r\n        case 'Identifier':\r\n          if (ast.name === 'Infinity') {\r\n            return 'Number';\r\n          }\r\n          if (this.isAstVariable(ast)) {\r\n            const signature = this.getVariableSignature(ast);\r\n            if (signature === 'value') {\r\n              const type = this.getVariableType(ast);\r\n              if (!type) {\r\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\r\n              }\r\n              return type;\r\n            }\r\n          }\r\n          const origin = this.findIdentifierOrigin(ast);\r\n          if (origin && origin.init) {\r\n            return this.getType(origin.init);\r\n          }\r\n          return null;\r\n        case 'ReturnStatement':\r\n          return this.getType(ast.argument);\r\n        case 'MemberExpression':\r\n          if (this.isAstMathFunction(ast)) {\r\n            switch (ast.property.name) {\r\n              case 'ceil':\r\n                return 'Integer';\r\n              case 'floor':\r\n                return 'Integer';\r\n              case 'round':\r\n                return 'Integer';\r\n            }\r\n            return 'Number';\r\n          }\r\n          if (this.isAstVariable(ast)) {\r\n            const variableSignature = this.getVariableSignature(ast);\r\n            switch (variableSignature) {\r\n              case 'value[]':\r\n                return this.getLookupType(this.getVariableType(ast.object));\r\n              case 'value[][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object));\r\n              case 'value[][][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\r\n              case 'value[][][][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\r\n              case 'value.thread.value':\r\n              case 'this.thread.value':\r\n                return 'Integer';\r\n              case 'this.output.value':\r\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\r\n              case 'this.constants.value':\r\n                return this.getConstantType(ast.property.name);\r\n              case 'this.constants.value[]':\r\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\r\n              case 'this.constants.value[][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\r\n              case 'this.constants.value[][][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\r\n              case 'this.constants.value[][][][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\r\n              case 'fn()[]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'fn()[][]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'fn()[][][]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'value.value':\r\n                if (this.isAstMathVariable(ast)) {\r\n                  return 'Number';\r\n                }\r\n                switch (ast.property.name) {\r\n                  case 'r':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'g':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'b':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'a':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                }\r\n                case '[][]':\r\n                  return 'Number';\r\n            }\r\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\r\n          }\r\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\r\n        case 'ConditionalExpression':\r\n          return this.getType(ast.consequent);\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n          const lastReturn = this.findLastReturn(ast.body);\r\n          if (lastReturn) {\r\n            return this.getType(lastReturn);\r\n          }\r\n          return null;\r\n        case 'IfStatement':\r\n          return this.getType(ast.consequent);\r\n        default:\r\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\r\n    }\r\n  }\r\n\r\n  inferArgumentTypesIfNeeded(functionName, args) {\r\n    // ensure arguments are filled in, so when we lookup return type, we already can infer it\r\n    for (let i = 0; i < args.length; i++) {\r\n      if (!this.needsArgumentType(functionName, i)) continue;\r\n      const type = this.getType(args[i]);\r\n      if (!type) {\r\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\r\n      }\r\n      this.assignArgumentType(functionName, i, type);\r\n    }\r\n  }\r\n\r\n  isAstMathVariable(ast) {\r\n    const mathProperties = [\r\n      'E',\r\n      'PI',\r\n      'SQRT2',\r\n      'SQRT1_2',\r\n      'LN2',\r\n      'LN10',\r\n      'LOG2E',\r\n      'LOG10E',\r\n    ];\r\n    return ast.type === 'MemberExpression' &&\r\n      ast.object && ast.object.type === 'Identifier' &&\r\n      ast.object.name === 'Math' &&\r\n      ast.property &&\r\n      ast.property.type === 'Identifier' &&\r\n      mathProperties.indexOf(ast.property.name) > -1;\r\n  }\r\n\r\n  isAstMathFunction(ast) {\r\n    const mathFunctions = [\r\n      'abs',\r\n      'acos',\r\n      'asin',\r\n      'atan',\r\n      'atan2',\r\n      'ceil',\r\n      'cos',\r\n      'exp',\r\n      'floor',\r\n      'log',\r\n      'log2',\r\n      'max',\r\n      'min',\r\n      'pow',\r\n      'random',\r\n      'round',\r\n      'sign',\r\n      'sin',\r\n      'sqrt',\r\n      'tan',\r\n    ];\r\n    return ast.type === 'CallExpression' &&\r\n      ast.callee &&\r\n      ast.callee.type === 'MemberExpression' &&\r\n      ast.callee.object &&\r\n      ast.callee.object.type === 'Identifier' &&\r\n      ast.callee.object.name === 'Math' &&\r\n      ast.callee.property &&\r\n      ast.callee.property.type === 'Identifier' &&\r\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\r\n  }\r\n\r\n  isAstVariable(ast) {\r\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\r\n  }\r\n\r\n  isSafe(ast) {\r\n    return this.isSafeDependencies(this.getDependencies(ast));\r\n  }\r\n\r\n  isSafeDependencies(dependencies) {\r\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ast\r\n   * @param dependencies\r\n   * @param isNotSafe\r\n   * @return {Array}\r\n   */\r\n  getDependencies(ast, dependencies, isNotSafe) {\r\n    if (!dependencies) {\r\n      dependencies = [];\r\n    }\r\n    if (!ast) return null;\r\n    if (Array.isArray(ast)) {\r\n      for (let i = 0; i < ast.length; i++) {\r\n        this.getDependencies(ast[i], dependencies, isNotSafe);\r\n      }\r\n      return dependencies;\r\n    }\r\n    switch (ast.type) {\r\n      case 'AssignmentExpression':\r\n        this.getDependencies(ast.left, dependencies, isNotSafe);\r\n        this.getDependencies(ast.right, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'ConditionalExpression':\r\n        this.getDependencies(ast.test, dependencies, isNotSafe);\r\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\r\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'Literal':\r\n        dependencies.push({\r\n          origin: 'literal',\r\n          value: ast.value,\r\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\r\n        });\r\n        break;\r\n      case 'VariableDeclarator':\r\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\r\n      case 'Identifier':\r\n        const declaration = this.getDeclaration(ast);\r\n        if (declaration) {\r\n          dependencies.push({\r\n            name: ast.name,\r\n            origin: 'declaration',\r\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\r\n          });\r\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\r\n          dependencies.push({\r\n            name: ast.name,\r\n            origin: 'argument',\r\n            isSafe: false,\r\n          });\r\n        } else if (this.strictTypingChecking) {\r\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\r\n        }\r\n        break;\r\n      case 'FunctionDeclaration':\r\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\r\n      case 'ReturnStatement':\r\n        return this.getDependencies(ast.argument, dependencies);\r\n      case 'BinaryExpression':\r\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\r\n        this.getDependencies(ast.left, dependencies, isNotSafe);\r\n        this.getDependencies(ast.right, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'UnaryExpression':\r\n      case 'UpdateExpression':\r\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\r\n      case 'VariableDeclaration':\r\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\r\n      case 'ArrayExpression':\r\n        dependencies.push({\r\n          origin: 'declaration',\r\n          isSafe: true,\r\n        });\r\n        return dependencies;\r\n      case 'CallExpression':\r\n        dependencies.push({\r\n          origin: 'function',\r\n          isSafe: true,\r\n        });\r\n        return dependencies;\r\n      case 'MemberExpression':\r\n        const details = this.getMemberExpressionDetails(ast);\r\n        switch (details.signature) {\r\n          case 'value[]':\r\n            this.getDependencies(ast.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'value[][]':\r\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'value[][][]':\r\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'this.output.value':\r\n            if (this.dynamicOutput) {\r\n              dependencies.push({\r\n                name: details.name,\r\n                origin: 'output',\r\n                isSafe: false,\r\n              });\r\n            }\r\n            break;\r\n        }\r\n        if (details) {\r\n          if (details.property) {\r\n            this.getDependencies(details.property, dependencies, isNotSafe);\r\n          }\r\n          if (details.xProperty) {\r\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\r\n          }\r\n          if (details.yProperty) {\r\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\r\n          }\r\n          if (details.zProperty) {\r\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\r\n          }\r\n          return dependencies;\r\n        }\r\n        default:\r\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\r\n    }\r\n    return dependencies;\r\n  }\r\n\r\n  getVariableSignature(ast) {\r\n    if (!this.isAstVariable(ast)) {\r\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\r\n    }\r\n    if (ast.type === 'Identifier') {\r\n      return 'value';\r\n    }\r\n    const signature = [];\r\n    while (true) {\r\n      if (!ast) break;\r\n      if (ast.computed) {\r\n        signature.push('[]');\r\n      } else if (ast.type === 'ThisExpression') {\r\n        signature.unshift('this');\r\n      } else if (ast.property && ast.property.name) {\r\n        if (\r\n          ast.property.name === 'x' ||\r\n          ast.property.name === 'y' ||\r\n          ast.property.name === 'z'\r\n        ) {\r\n          signature.unshift('.value');\r\n        } else if (\r\n          ast.property.name === 'constants' ||\r\n          ast.property.name === 'thread' ||\r\n          ast.property.name === 'output'\r\n        ) {\r\n          signature.unshift('.' + ast.property.name);\r\n        } else {\r\n          signature.unshift('.value');\r\n        }\r\n      } else if (ast.name) {\r\n        signature.unshift('value');\r\n      } else if (ast.callee && ast.callee.name) {\r\n        signature.unshift('fn()');\r\n      } else if (ast.elements) {\r\n        signature.unshift('[]');\r\n      } else {\r\n        signature.unshift('unknown');\r\n      }\r\n      ast = ast.object;\r\n    }\r\n\r\n    const signatureString = signature.join('');\r\n    const allowedExpressions = [\r\n      'value',\r\n      'value[]',\r\n      'value[][]',\r\n      'value[][][]',\r\n      'value[][][][]',\r\n      'value.value',\r\n      'value.thread.value',\r\n      'this.thread.value',\r\n      'this.output.value',\r\n      'this.constants.value',\r\n      'this.constants.value[]',\r\n      'this.constants.value[][]',\r\n      'this.constants.value[][][]',\r\n      'this.constants.value[][][][]',\r\n      'fn()[]',\r\n      'fn()[][]',\r\n      'fn()[][][]',\r\n      '[][]',\r\n    ];\r\n    if (allowedExpressions.indexOf(signatureString) > -1) {\r\n      return signatureString;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  build() {\r\n    return this.toString().length > 0;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for generically to its respective function\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed string array\r\n   */\r\n  astGeneric(ast, retArr) {\r\n    if (ast === null) {\r\n      throw this.astErrorOutput('NULL ast', ast);\r\n    } else {\r\n      if (Array.isArray(ast)) {\r\n        for (let i = 0; i < ast.length; i++) {\r\n          this.astGeneric(ast[i], retArr);\r\n        }\r\n        return retArr;\r\n      }\r\n\r\n      switch (ast.type) {\r\n        case 'FunctionDeclaration':\r\n          return this.astFunctionDeclaration(ast, retArr);\r\n        case 'FunctionExpression':\r\n          return this.astFunctionExpression(ast, retArr);\r\n        case 'ReturnStatement':\r\n          return this.astReturnStatement(ast, retArr);\r\n        case 'Literal':\r\n          return this.astLiteral(ast, retArr);\r\n        case 'BinaryExpression':\r\n          return this.astBinaryExpression(ast, retArr);\r\n        case 'Identifier':\r\n          return this.astIdentifierExpression(ast, retArr);\r\n        case 'AssignmentExpression':\r\n          return this.astAssignmentExpression(ast, retArr);\r\n        case 'ExpressionStatement':\r\n          return this.astExpressionStatement(ast, retArr);\r\n        case 'EmptyStatement':\r\n          return this.astEmptyStatement(ast, retArr);\r\n        case 'BlockStatement':\r\n          return this.astBlockStatement(ast, retArr);\r\n        case 'IfStatement':\r\n          return this.astIfStatement(ast, retArr);\r\n        case 'SwitchStatement':\r\n          return this.astSwitchStatement(ast, retArr);\r\n        case 'BreakStatement':\r\n          return this.astBreakStatement(ast, retArr);\r\n        case 'ContinueStatement':\r\n          return this.astContinueStatement(ast, retArr);\r\n        case 'ForStatement':\r\n          return this.astForStatement(ast, retArr);\r\n        case 'WhileStatement':\r\n          return this.astWhileStatement(ast, retArr);\r\n        case 'DoWhileStatement':\r\n          return this.astDoWhileStatement(ast, retArr);\r\n        case 'VariableDeclaration':\r\n          return this.astVariableDeclaration(ast, retArr);\r\n        case 'VariableDeclarator':\r\n          return this.astVariableDeclarator(ast, retArr);\r\n        case 'ThisExpression':\r\n          return this.astThisExpression(ast, retArr);\r\n        case 'SequenceExpression':\r\n          return this.astSequenceExpression(ast, retArr);\r\n        case 'UnaryExpression':\r\n          return this.astUnaryExpression(ast, retArr);\r\n        case 'UpdateExpression':\r\n          return this.astUpdateExpression(ast, retArr);\r\n        case 'LogicalExpression':\r\n          return this.astLogicalExpression(ast, retArr);\r\n        case 'MemberExpression':\r\n          return this.astMemberExpression(ast, retArr);\r\n        case 'CallExpression':\r\n          return this.astCallExpression(ast, retArr);\r\n        case 'ArrayExpression':\r\n          return this.astArrayExpression(ast, retArr);\r\n        case 'DebuggerStatement':\r\n          return this.astDebuggerStatement(ast, retArr);\r\n        case 'ConditionalExpression':\r\n          return this.astConditionalExpression(ast, retArr);\r\n      }\r\n\r\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\r\n    }\r\n  }\r\n  /**\r\n   * @desc To throw the AST error, with its location.\r\n   * @param {string} error - the error message output\r\n   * @param {Object} ast - the AST object where the error is\r\n   */\r\n  astErrorOutput(error, ast) {\r\n    if (typeof this.source !== 'string') {\r\n      return new Error(error);\r\n    }\r\n\r\n    const debugString = getAstString(this.source, ast);\r\n    const leadingSource = this.source.substr(ast.start);\r\n    const splitLines = leadingSource.split(/\\n/);\r\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\r\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\r\n  }\r\n\r\n  astDebuggerStatement(arrNode, retArr) {\r\n    return retArr;\r\n  }\r\n\r\n  astConditionalExpression(ast, retArr) {\r\n    if (ast.type !== 'ConditionalExpression') {\r\n      throw this.astErrorOutput('Not a conditional expression', ast);\r\n    }\r\n    retArr.push('(');\r\n    this.astGeneric(ast.test, retArr);\r\n    retArr.push('?');\r\n    this.astGeneric(ast.consequent, retArr);\r\n    retArr.push(':');\r\n    this.astGeneric(ast.alternate, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} ast\r\n   * @param {String[]} retArr\r\n   * @returns {String[]}\r\n   */\r\n  astFunction(ast, retArr) {\r\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunctionDeclaration(ast, retArr) {\r\n    if (this.isChildFunction(ast)) {\r\n      return retArr;\r\n    }\r\n    return this.astFunction(ast, retArr);\r\n  }\r\n  astFunctionExpression(ast, retArr) {\r\n    if (this.isChildFunction(ast)) {\r\n      return retArr;\r\n    }\r\n    return this.astFunction(ast, retArr);\r\n  }\r\n  isChildFunction(ast) {\r\n    for (let i = 0; i < this.functions.length; i++) {\r\n      if (this.functions[i] === ast) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  astReturnStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astLiteral(ast, retArr) {\r\n    this.literalTypes[`${ast.start},${ast.end}`] = 'Number';\r\n    return retArr;\r\n  }\r\n  astBinaryExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astIdentifierExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astAssignmentExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *generic expression* statement\r\n   * @param {Object} esNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astExpressionStatement(esNode, retArr) {\r\n    this.astGeneric(esNode.expression, retArr);\r\n    retArr.push(';');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\r\n   * @param {Object} eNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astEmptyStatement(eNode, retArr) {\r\n    return retArr;\r\n  }\r\n  astBlockStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astIfStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astSwitchStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Break* Statement\r\n   * @param {Object} brNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBreakStatement(brNode, retArr) {\r\n    retArr.push('break;');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Continue* Statement\r\n   * @param {Object} crNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astContinueStatement(crNode, retArr) {\r\n    retArr.push('continue;\\n');\r\n    return retArr;\r\n  }\r\n  astForStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astWhileStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astDoWhileStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    const declarations = varDecNode.declarations;\r\n    if (!declarations || !declarations[0] || !declarations[0].init) {\r\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\r\n    }\r\n    const result = [];\r\n    const firstDeclaration = declarations[0];\r\n    const init = firstDeclaration.init;\r\n    let type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\r\n    if (type === 'LiteralInteger') {\r\n      // We had the choice to go either float or int, choosing float\r\n      type = 'Number';\r\n    }\r\n    const markupType = typeMap[type];\r\n    if (!markupType) {\r\n      throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\r\n    }\r\n    let dependencies = this.getDependencies(firstDeclaration.init);\r\n    throw new Error('remove me');\r\n    this.declarations[firstDeclaration.id.name] = Object.freeze({\r\n      type,\r\n      dependencies,\r\n      isSafe: dependencies.every(dependency => dependency.isSafe)\r\n    });\r\n    const initResult = [`${type} user_${firstDeclaration.id.name}=`];\r\n    this.astGeneric(init, initResult);\r\n    result.push(initResult.join(''));\r\n\r\n    // first declaration is done, now any added ones setup\r\n    for (let i = 1; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      dependencies = this.getDependencies(declaration);\r\n      throw new Error('Remove me');\r\n      this.declarations[declaration.id.name] = Object.freeze({\r\n        type,\r\n        dependencies,\r\n        isSafe: false\r\n      });\r\n      this.astGeneric(declaration, result);\r\n    }\r\n\r\n    retArr.push(retArr, result.join(','));\r\n    retArr.push(';');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\r\n   * @param {Object} iVarDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclarator(iVarDecNode, retArr) {\r\n    this.astGeneric(iVarDecNode.id, retArr);\r\n    if (iVarDecNode.init !== null) {\r\n      retArr.push('=');\r\n      this.astGeneric(iVarDecNode.init, retArr);\r\n    }\r\n    return retArr;\r\n  }\r\n  astThisExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astSequenceExpression(sNode, retArr) {\r\n    for (let i = 0; i < sNode.expressions.length; i++) {\r\n      if (i > 0) {\r\n        retArr.push(',');\r\n      }\r\n      this.astGeneric(sNode.expressions, retArr);\r\n    }\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Unary* Expression\r\n   * @param {Object} uNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astUnaryExpression(uNode, retArr) {\r\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\r\n    if (unaryResult) {\r\n      return retArr;\r\n    }\r\n\r\n    if (uNode.prefix) {\r\n      retArr.push(uNode.operator);\r\n      this.astGeneric(uNode.argument, retArr);\r\n    } else {\r\n      this.astGeneric(uNode.argument, retArr);\r\n      retArr.push(uNode.operator);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Update* Expression\r\n   * @param {Object} uNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astUpdateExpression(uNode, retArr) {\r\n    if (uNode.prefix) {\r\n      retArr.push(uNode.operator);\r\n      this.astGeneric(uNode.argument, retArr);\r\n    } else {\r\n      this.astGeneric(uNode.argument, retArr);\r\n      retArr.push(uNode.operator);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Logical* Expression\r\n   * @param {Object} logNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLogicalExpression(logNode, retArr) {\r\n    retArr.push('(');\r\n    this.astGeneric(logNode.left, retArr);\r\n    retArr.push(logNode.operator);\r\n    this.astGeneric(logNode.right, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n  astMemberExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astCallExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astArrayExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ast\r\n   * @return {IFunctionNodeMemberExpressionDetails}\r\n   */\r\n  getMemberExpressionDetails(ast) {\r\n    if (ast.type !== 'MemberExpression') {\r\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\r\n    }\r\n    let name = null;\r\n    let type = null;\r\n    const variableSignature = this.getVariableSignature(ast);\r\n    switch (variableSignature) {\r\n      case 'value':\r\n        return null;\r\n      case 'value.thread.value':\r\n      case 'this.thread.value':\r\n      case 'this.output.value':\r\n        return {\r\n          signature: variableSignature,\r\n            type: 'Integer',\r\n            name: ast.property.name\r\n        };\r\n      case 'value[]':\r\n        if (typeof ast.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object),\r\n            xProperty: ast.property\r\n        };\r\n      case 'value[][]':\r\n        if (typeof ast.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object),\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value[][][]':\r\n        if (typeof ast.object.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object.object),\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value[][][][]':\r\n        if (typeof ast.object.object.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object.object.object),\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value.value':\r\n        if (typeof ast.property.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        if (this.isAstMathVariable(ast)) {\r\n          name = ast.property.name;\r\n          return {\r\n            name,\r\n            origin: 'Math',\r\n            type: 'Number',\r\n            signature: variableSignature,\r\n          };\r\n        }\r\n        switch (ast.property.name) {\r\n          case 'r':\r\n          case 'g':\r\n          case 'b':\r\n          case 'a':\r\n            name = ast.object.name;\r\n            return {\r\n              name,\r\n              property: ast.property.name,\r\n                origin: 'user',\r\n                signature: variableSignature,\r\n                type: 'Number'\r\n            };\r\n          default:\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        case 'this.constants.value':\r\n          if (typeof ast.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n              signature: variableSignature,\r\n          };\r\n        case 'this.constants.value[]':\r\n          if (typeof ast.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n              signature: variableSignature,\r\n              xProperty: ast.property,\r\n          };\r\n        case 'this.constants.value[][]': {\r\n          if (typeof ast.object.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n            signature: variableSignature,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n          };\r\n        }\r\n        case 'this.constants.value[][][]': {\r\n          if (typeof ast.object.object.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.object.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n            signature: variableSignature,\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n          };\r\n        }\r\n        case 'fn()[]':\r\n        case '[][]':\r\n          return {\r\n            signature: variableSignature,\r\n              property: ast.property,\r\n          };\r\n        default:\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n    }\r\n  }\r\n\r\n  findIdentifierOrigin(astToFind) {\r\n    const stack = [this.ast];\r\n\r\n    while (stack.length > 0) {\r\n      const atNode = stack[0];\r\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\r\n        return atNode;\r\n      }\r\n      stack.shift();\r\n      if (atNode.argument) {\r\n        stack.push(atNode.argument);\r\n      } else if (atNode.body) {\r\n        stack.push(atNode.body);\r\n      } else if (atNode.declarations) {\r\n        stack.push(atNode.declarations);\r\n      } else if (Array.isArray(atNode)) {\r\n        for (let i = 0; i < atNode.length; i++) {\r\n          stack.push(atNode[i]);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findLastReturn(ast) {\r\n    const stack = [ast || this.ast];\r\n\r\n    while (stack.length > 0) {\r\n      const atNode = stack.pop();\r\n      if (atNode.type === 'ReturnStatement') {\r\n        return atNode;\r\n      }\r\n      if (atNode.type === 'FunctionDeclaration') {\r\n        continue;\r\n      }\r\n      if (atNode.argument) {\r\n        stack.push(atNode.argument);\r\n      } else if (atNode.body) {\r\n        stack.push(atNode.body);\r\n      } else if (atNode.declarations) {\r\n        stack.push(atNode.declarations);\r\n      } else if (Array.isArray(atNode)) {\r\n        for (let i = 0; i < atNode.length; i++) {\r\n          stack.push(atNode[i]);\r\n        }\r\n      } else if (atNode.consequent) {\r\n        stack.push(atNode.consequent);\r\n      } else if (atNode.cases) {\r\n        stack.push(atNode.cases);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getInternalVariableName(name) {\r\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\r\n      this._internalVariableNames[name] = 0;\r\n    }\r\n    this._internalVariableNames[name]++;\r\n    if (this._internalVariableNames[name] === 1) {\r\n      return name;\r\n    }\r\n    return name + this._internalVariableNames[name];\r\n  }\r\n\r\n  varWarn() {\r\n    console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\r\n  }\r\n}\r\n\r\nconst typeLookupMap = {\r\n  'Number': 'Number',\r\n  'Float': 'Float',\r\n  'Integer': 'Integer',\r\n  'Array': 'Number',\r\n  'Array(2)': 'Number',\r\n  'Array(3)': 'Number',\r\n  'Array(4)': 'Number',\r\n  'Array2D': 'Number',\r\n  'Array3D': 'Number',\r\n  'Input': 'Number',\r\n  'HTMLImage': 'Array(4)',\r\n  'HTMLVideo': 'Array(4)',\r\n  'HTMLImageArray': 'Array(4)',\r\n  'NumberTexture': 'Number',\r\n  'MemoryOptimizedNumberTexture': 'Number',\r\n  'Array1D(2)': 'Array(2)',\r\n  'Array1D(3)': 'Array(3)',\r\n  'Array1D(4)': 'Array(4)',\r\n  'Array2D(2)': 'Array(2)',\r\n  'Array2D(3)': 'Array(3)',\r\n  'Array2D(4)': 'Array(4)',\r\n  'Array3D(2)': 'Array(2)',\r\n  'Array3D(3)': 'Array(3)',\r\n  'Array3D(4)': 'Array(4)',\r\n  'ArrayTexture(1)': 'Number',\r\n  'ArrayTexture(2)': 'Array(2)',\r\n  'ArrayTexture(3)': 'Array(3)',\r\n  'ArrayTexture(4)': 'Array(4)',\r\n};\r\n","import { FunctionNode } from '../function-node';\r\n\r\n/**\r\n * @desc [INTERNAL] Represents a single function, inside JS\r\n *\r\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\r\n */\r\nexport class CPUFunctionNode extends FunctionNode {\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunction(ast, retArr) {\r\n\r\n    // Setup function return type and name\r\n    if (!this.isRootKernel) {\r\n      retArr.push('function');\r\n      retArr.push(' ');\r\n      retArr.push(this.name);\r\n      retArr.push('(');\r\n\r\n      // Arguments handling\r\n      for (let i = 0; i < this.argumentNames.length; ++i) {\r\n        const argumentName = this.argumentNames[i];\r\n\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        retArr.push('user_');\r\n        retArr.push(argumentName);\r\n      }\r\n\r\n      // Function opening\r\n      retArr.push(') {\\n');\r\n    }\r\n\r\n    // Body statement iteration\r\n    for (let i = 0; i < ast.body.body.length; ++i) {\r\n      this.astGeneric(ast.body.body[i], retArr);\r\n      retArr.push('\\n');\r\n    }\r\n\r\n    if (!this.isRootKernel) {\r\n      // Function closing\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to *return* statement\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astReturnStatement(ast, retArr) {\r\n    const type = this.returnType || this.getType(ast.argument);\r\n\r\n    if (!this.returnType) {\r\n      this.returnType = type;\r\n    }\r\n\r\n    if (this.isRootKernel) {\r\n      retArr.push(this.leadingReturnStatement);\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';\\n');\r\n      retArr.push(this.followingReturnStatement);\r\n      retArr.push('continue;\\n');\r\n    } else if (this.isSubKernel) {\r\n      retArr.push(`subKernelResult_${ this.name } = `);\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';');\r\n      retArr.push(`return subKernelResult_${ this.name };`);\r\n    } else {\r\n      retArr.push('return ');\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *literal value*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLiteral(ast, retArr) {\r\n\r\n    // Reject non numeric literals\r\n    if (isNaN(ast.value)) {\r\n      throw this.astErrorOutput(\r\n        'Non-numeric literal not supported : ' + ast.value,\r\n        ast\r\n      );\r\n    }\r\n\r\n    retArr.push(ast.value);\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *binary* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBinaryExpression(ast, retArr) {\r\n    retArr.push('(');\r\n    this.astGeneric(ast.left, retArr);\r\n    retArr.push(ast.operator);\r\n    this.astGeneric(ast.right, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput(\r\n        'IdentifierExpression - not an Identifier',\r\n        idtNode\r\n      );\r\n    }\r\n\r\n    switch (idtNode.name) {\r\n      case 'Infinity':\r\n        retArr.push('Infinity');\r\n        break;\r\n      default:\r\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\r\n          retArr.push('constants_' + idtNode.name);\r\n        } else {\r\n          retArr.push('user_' + idtNode.name);\r\n        }\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *for-loop* expression\r\n   * @param {Object} forNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astForStatement(forNode, retArr) {\r\n    if (forNode.type !== 'ForStatement') {\r\n      throw this.astErrorOutput('Invalid for statement', forNode);\r\n    }\r\n\r\n    const initArr = [];\r\n    const testArr = [];\r\n    const updateArr = [];\r\n    const bodyArr = [];\r\n    let isSafe = null;\r\n\r\n    if (forNode.init) {\r\n      this.pushState('in-for-loop-init');\r\n      this.astGeneric(forNode.init, initArr);\r\n      for (let i = 0; i < initArr.length; i++) {\r\n        if (initArr[i].includes && initArr[i].includes(',')) {\r\n          isSafe = false;\r\n        }\r\n      }\r\n      this.popState('in-for-loop-init');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.test) {\r\n      this.astGeneric(forNode.test, testArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.update) {\r\n      this.astGeneric(forNode.update, updateArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.body) {\r\n      this.pushState('loop-body');\r\n      this.astGeneric(forNode.body, bodyArr);\r\n      this.popState('loop-body');\r\n    }\r\n\r\n    // have all parts, now make them safe\r\n    if (isSafe === null) {\r\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\r\n    }\r\n\r\n    if (isSafe) {\r\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push('}\\n');\r\n    } else {\r\n      const iVariableName = this.getInternalVariableName('safeI');\r\n      if (initArr.length > 0) {\r\n        retArr.push(initArr.join(''), ';\\n');\r\n      }\r\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n      if (testArr.length > 0) {\r\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\r\n      }\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push(`\\n${updateArr.join('')};`);\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *while* loop\r\n   * @param {Object} whileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed javascript string\r\n   */\r\n  astWhileStatement(whileNode, retArr) {\r\n    if (whileNode.type !== 'WhileStatement') {\r\n      throw this.astErrorOutput(\r\n        'Invalid while statement',\r\n        whileNode\r\n      );\r\n    }\r\n\r\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\r\n    retArr.push('if (');\r\n    this.astGeneric(whileNode.test, retArr);\r\n    retArr.push(') {\\n');\r\n    this.astGeneric(whileNode.body, retArr);\r\n    retArr.push('} else {\\n');\r\n    retArr.push('break;\\n');\r\n    retArr.push('}\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *do while* loop\r\n   * @param {Object} doWhileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astDoWhileStatement(doWhileNode, retArr) {\r\n    if (doWhileNode.type !== 'DoWhileStatement') {\r\n      throw this.astErrorOutput(\r\n        'Invalid while statement',\r\n        doWhileNode\r\n      );\r\n    }\r\n\r\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\r\n    this.astGeneric(doWhileNode.body, retArr);\r\n    retArr.push('if (!');\r\n    this.astGeneric(doWhileNode.test, retArr);\r\n    retArr.push(') {\\n');\r\n    retArr.push('break;\\n');\r\n    retArr.push('}\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\r\n   * @param {Object} assNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astAssignmentExpression(assNode, retArr) {\r\n    const declaration = this.getDeclaration(assNode.left);\r\n    if (declaration && !declaration.assignable) {\r\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\r\n    }\r\n    this.astGeneric(assNode.left, retArr);\r\n    retArr.push(assNode.operator);\r\n    this.astGeneric(assNode.right, retArr);\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Block* statement\r\n   * @param {Object} bNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBlockStatement(bNode, retArr) {\r\n    if (this.isState('loop-body')) {\r\n      this.pushState('block-body'); // this prevents recursive removal of braces\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      this.popState('block-body');\r\n    } else {\r\n      retArr.push('{\\n');\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\r\n      this.varWarn();\r\n    }\r\n    retArr.push(`${varDecNode.kind} `);\r\n    const { declarations } = varDecNode;\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      if (i > 0) {\r\n        retArr.push(',');\r\n      }\r\n      this.astGeneric(declarations[i], retArr);\r\n    }\r\n    if (!this.isState('in-for-loop-init')) {\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *If* Statement\r\n   * @param {Object} ifNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIfStatement(ifNode, retArr) {\r\n    retArr.push('if (');\r\n    this.astGeneric(ifNode.test, retArr);\r\n    retArr.push(')');\r\n    if (ifNode.consequent.type === 'BlockStatement') {\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n    } else {\r\n      retArr.push(' {\\n');\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n      retArr.push('\\n}\\n');\r\n    }\r\n\r\n    if (ifNode.alternate) {\r\n      retArr.push('else ');\r\n      if (ifNode.alternate.type === 'BlockStatement') {\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n      } else {\r\n        retArr.push(' {\\n');\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n        retArr.push('\\n}\\n');\r\n      }\r\n    }\r\n    return retArr;\r\n\r\n  }\r\n\r\n  astSwitchStatement(ast, retArr) {\r\n    const { discriminant, cases } = ast;\r\n    retArr.push('switch (');\r\n    this.astGeneric(discriminant, retArr);\r\n    retArr.push(') {\\n');\r\n    for (let i = 0; i < cases.length; i++) {\r\n      if (cases[i].test === null) {\r\n        retArr.push('default:\\n');\r\n        this.astGeneric(cases[i].consequent, retArr);\r\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\r\n          retArr.push('break;\\n');\r\n        }\r\n        continue;\r\n      }\r\n      retArr.push('case ');\r\n      this.astGeneric(cases[i].test, retArr);\r\n      retArr.push(':\\n');\r\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\r\n        this.astGeneric(cases[i].consequent, retArr);\r\n        retArr.push('break;\\n');\r\n      }\r\n    }\r\n    retArr.push('\\n}');\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *This* expression\r\n   * @param {Object} tNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astThisExpression(tNode, retArr) {\r\n    retArr.push('_this');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Member* Expression\r\n   * @param {Object} mNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astMemberExpression(mNode, retArr) {\r\n    const {\r\n      signature,\r\n      type,\r\n      property,\r\n      xProperty,\r\n      yProperty,\r\n      zProperty,\r\n      name,\r\n      origin\r\n    } = this.getMemberExpressionDetails(mNode);\r\n    switch (signature) {\r\n      case 'this.thread.value':\r\n        retArr.push(`_this.thread.${ name }`);\r\n        return retArr;\r\n      case 'this.output.value':\r\n        switch (name) {\r\n          case 'x':\r\n            retArr.push('outputX');\r\n            break;\r\n          case 'y':\r\n            retArr.push('outputY');\r\n            break;\r\n          case 'z':\r\n            retArr.push('outputZ');\r\n            break;\r\n          default:\r\n            throw this.astErrorOutput('Unexpected expression', mNode);\r\n        }\r\n        return retArr;\r\n      case 'value':\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n      case 'value[]':\r\n      case 'value[][]':\r\n      case 'value[][][]':\r\n      case 'value.value':\r\n        if (origin === 'Math') {\r\n          retArr.push(Math[name]);\r\n          return retArr;\r\n        }\r\n        switch (property) {\r\n          case 'r':\r\n            retArr.push(`user_${ name }[0]`);\r\n            return retArr;\r\n          case 'g':\r\n            retArr.push(`user_${ name }[1]`);\r\n            return retArr;\r\n          case 'b':\r\n            retArr.push(`user_${ name }[2]`);\r\n            return retArr;\r\n          case 'a':\r\n            retArr.push(`user_${ name }[3]`);\r\n            return retArr;\r\n        }\r\n        break;\r\n      case 'this.constants.value':\r\n      case 'this.constants.value[]':\r\n      case 'this.constants.value[][]':\r\n      case 'this.constants.value[][][]':\r\n        break;\r\n      case 'fn()[]':\r\n        this.astGeneric(mNode.object, retArr);\r\n        retArr.push('[');\r\n        this.astGeneric(mNode.property, retArr);\r\n        retArr.push(']');\r\n        return retArr;\r\n      default:\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n    }\r\n\r\n    if (!mNode.computed) {\r\n      // handle simple types\r\n      switch (type) {\r\n        case 'Number':\r\n        case 'Integer':\r\n        case 'Float':\r\n        case 'Boolean':\r\n          retArr.push(`${origin}_${name}`);\r\n          return retArr;\r\n      }\r\n    }\r\n\r\n    // handle more complex types\r\n    // argument may have come from a parent\r\n    const markupName = `${origin}_${name}`;\r\n\r\n    switch (type) {\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n      case 'HTMLImageArray':\r\n      case 'ArrayTexture(1)':\r\n      case 'ArrayTexture(2)':\r\n      case 'ArrayTexture(3)':\r\n      case 'ArrayTexture(4)':\r\n      case 'HTMLImage':\r\n      default:\r\n        let size;\r\n        let isInput;\r\n        if (origin === 'constants') {\r\n          const constant = this.constants[name];\r\n          isInput = this.constantTypes[name] === 'Input';\r\n          size = isInput ? constant.size : null;\r\n        } else {\r\n          isInput = this.isInput(name);\r\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\r\n        }\r\n        retArr.push(`${ markupName }`);\r\n        if (zProperty && yProperty) {\r\n          if (isInput) {\r\n            retArr.push('[(');\r\n            this.astGeneric(zProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          } else {\r\n            retArr.push('[');\r\n            this.astGeneric(zProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          }\r\n        } else if (yProperty) {\r\n          if (isInput) {\r\n            retArr.push('[(');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          } else {\r\n            retArr.push('[');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          }\r\n        } else if (typeof xProperty !== 'undefined') {\r\n          retArr.push('[');\r\n          this.astGeneric(xProperty, retArr);\r\n          retArr.push(']');\r\n        }\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *call* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns  {Array} the append retArr\r\n   */\r\n  astCallExpression(ast, retArr) {\r\n    if (ast.type !== 'CallExpression') {\r\n      // Failure, unknown expression\r\n      throw this.astErrorOutput('Unknown CallExpression', ast);\r\n    }\r\n    // Get the full function call, unrolled\r\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\r\n\r\n    // Register the function into the called registry\r\n    if (this.calledFunctions.indexOf(functionName) < 0) {\r\n      this.calledFunctions.push(functionName);\r\n    }\r\n\r\n    const isMathFunction = this.isAstMathFunction(ast);\r\n\r\n    // track the function was called\r\n    if (this.onFunctionCall) {\r\n      this.onFunctionCall(this.name, functionName, ast.arguments);\r\n    }\r\n\r\n    // Call the function\r\n    retArr.push(functionName);\r\n\r\n    // Open arguments space\r\n    retArr.push('(');\r\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\r\n    // Add the arguments\r\n    for (let i = 0; i < ast.arguments.length; ++i) {\r\n      const argument = ast.arguments[i];\r\n\r\n      // in order to track return type, even though this is CPU\r\n      let argumentType = this.getType(argument);\r\n      if (!targetTypes[i]) {\r\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\r\n      }\r\n\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      this.astGeneric(argument, retArr);\r\n    }\r\n    // Close arguments space\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Array* Expression\r\n   * @param {Object} arrNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astArrayExpression(arrNode, retArr) {\r\n    const arrLen = arrNode.elements.length;\r\n\r\n    retArr.push('new Float32Array([');\r\n    for (let i = 0; i < arrLen; ++i) {\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      const subNode = arrNode.elements[i];\r\n      this.astGeneric(subNode, retArr)\r\n    }\r\n    retArr.push('])');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  astDebuggerStatement(arrNode, retArr) {\r\n    retArr.push('debugger;');\r\n    return retArr;\r\n  }\r\n}\r\n","import { utils } from '../../utils'\r\n\r\nfunction constantsToString(constants, types) {\r\n  const results = [];\r\n  for (const name in types) {\r\n    if (!types.hasOwnProperty(name)) continue;\r\n    const type = types[name];\r\n    const constant = constants[name];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n      case 'Boolean':\r\n        results.push(`${name}:${constant}`);\r\n        break;\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\r\n        break;\r\n    }\r\n  }\r\n  return `{ ${ results.join() } }`;\r\n}\r\n\r\nexport function cpuKernelString(cpuKernel, name) {\r\n  const header = [];\r\n  const thisProperties = [];\r\n  const beforeReturn = [];\r\n\r\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\r\n\r\n  header.push(\r\n    '  const { context, canvas, constants: incomingConstants } = settings;',\r\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\r\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\r\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`,\r\n  );\r\n\r\n  thisProperties.push(\r\n    '    constants: _constants,',\r\n    '    context,',\r\n    '    output,',\r\n    '    thread: {x: 0, y: 0, z: 0},',\r\n  );\r\n\r\n  if (cpuKernel.graphical) {\r\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\r\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\r\n\r\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case '_colorData':\r\n            return '_colorData';\r\n          case '_imageData':\r\n            return '_imageData';\r\n          case 'output':\r\n            return 'output';\r\n          case 'thread':\r\n            return 'this.thread';\r\n        }\r\n        return JSON.stringify(cpuKernel[propertyName]);\r\n      },\r\n      findDependency: (object, name) => {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case '_colorData':\r\n            return '_colorData';\r\n          case '_imageData':\r\n            return '_imageData';\r\n          case 'output':\r\n            return 'output';\r\n          case 'thread':\r\n            return 'this.thread';\r\n        }\r\n        return JSON.stringify(cpuKernel[propertyName]);\r\n      },\r\n      findDependency: () => {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    thisProperties.push(\r\n      '    _imageData,',\r\n      '    _colorData,',\r\n      `    color: ${colorFn},`,\r\n    );\r\n\r\n    beforeReturn.push(\r\n      `  kernel.getPixels = ${getPixelsFn};`\r\n    );\r\n  }\r\n\r\n  const constantTypes = [];\r\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\r\n  for (let i = 0; i < constantKeys.length; i++) {\r\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\r\n  }\r\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\r\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\r\n      doNotDefine: ['canvas'],\r\n      findDependency: (object, name) => {\r\n        if (object === 'this') {\r\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\r\n        }\r\n        return null;\r\n      },\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case 'canvas':\r\n            return;\r\n          case 'context':\r\n            return 'context';\r\n        }\r\n      }\r\n    });\r\n    beforeReturn.push(flattenedImageTo3DArray);\r\n    thisProperties.push(`    _mediaTo2DArray,`);\r\n    thisProperties.push(`    _imageTo3DArray,`);\r\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\r\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\r\n      findDependency: (object, name) => {\r\n        return null;\r\n      },\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case 'canvas':\r\n            return 'settings.canvas';\r\n          case 'context':\r\n            return 'settings.context';\r\n        }\r\n        throw new Error('unhandled thisLookup');\r\n      }\r\n    });\r\n    beforeReturn.push(flattenedImageTo2DArray);\r\n    thisProperties.push(`    _mediaTo2DArray,`);\r\n  }\r\n\r\n  return `function(settings) {\r\n${ header.join('\\n') }\r\n  for (const p in _constantTypes) {\r\n    if (!_constantTypes.hasOwnProperty(p)) continue;\r\n    const type = _constantTypes[p];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n      case 'Boolean':\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        if (incomingConstants.hasOwnProperty(p)) {\r\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\r\n        }\r\n        continue;\r\n    }\r\n    if (!incomingConstants.hasOwnProperty(p)) {\r\n      throw new Error('constant ' + p + ' not found');\r\n    }\r\n    _constants[p] = incomingConstants[p];\r\n  }\r\n  const kernel = (function() {\r\n${cpuKernel._kernelString}\r\n  })\r\n    .apply({ ${thisProperties.join('\\n')} });\r\n  ${ beforeReturn.join('\\n') }\r\n  return kernel;\r\n}`;\r\n}\r\n","import { Kernel } from '../kernel';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { CPUFunctionNode } from './function-node';\r\nimport { utils } from '../../utils';\r\nimport { cpuKernelString } from './kernel-string';\r\n\r\n/**\r\n * @desc Kernel Implementation for CPU.\r\n * <p>Instantiates properties to the CPU Kernel.</p>\r\n */\r\nexport class CPUKernel extends Kernel {\r\n  static getFeatures() {\r\n    return this.features;\r\n  }\r\n  static get features() {\r\n    return Object.freeze({\r\n      kernelMap: true,\r\n      isIntegerDivisionAccurate: true\r\n    });\r\n  }\r\n  static get isSupported() {\r\n    return true;\r\n  }\r\n  static isContextMatch(context) {\r\n    return false;\r\n  }\r\n  /**\r\n   * @desc The current mode in which gpu.js is executing.\r\n   */\r\n  static get mode() {\r\n    return 'cpu';\r\n  }\r\n\r\n  static nativeFunctionArguments() {\r\n    return null;\r\n  }\r\n\r\n  static nativeFunctionReturnType() {\r\n    return null;\r\n  }\r\n\r\n  static combineKernels(combinedKernel) {\r\n    return combinedKernel;\r\n  }\r\n\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.mergeSettings(source.settings || settings);\r\n\r\n    this._imageData = null;\r\n    this._colorData = null;\r\n    this._kernelString = null;\r\n    this.thread = {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    };\r\n    this.translatedSources = null;\r\n  }\r\n\r\n  initCanvas() {\r\n    if (typeof document !== 'undefined') {\r\n      return document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      return new OffscreenCanvas(0, 0);\r\n    }\r\n  }\r\n\r\n  initContext() {\r\n    if (!this.canvas) return null;\r\n    return this.canvas.getContext('2d');\r\n  }\r\n\r\n  initPlugins(settings) {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      if (argType === 'Array') {\r\n        this.output = utils.getDimensions(argType);\r\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\r\n        this.output = args[0].output;\r\n      } else {\r\n        throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n    }\r\n\r\n    this.checkOutput();\r\n  }\r\n\r\n  translateSource() {\r\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\r\n    if (this.subKernels) {\r\n      const followingReturnStatement = []\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const {\r\n          name\r\n        } = this.subKernels[i];\r\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\r\n      }\r\n      this.followingReturnStatement = followingReturnStatement.join('');\r\n    }\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\r\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Builds the Kernel, by generating the kernel\r\n   * string using thread dimensions, and arguments\r\n   * supplied to the kernel.\r\n   *\r\n   * <p>If the graphical flag is enabled, canvas is used.</p>\r\n   */\r\n  build() {\r\n    this.setupConstants();\r\n    this.setupArguments(arguments);\r\n    this.validateSettings(arguments);\r\n    this.translateSource();\r\n\r\n    if (this.graphical) {\r\n      const {\r\n        canvas,\r\n        output\r\n      } = this;\r\n      if (!canvas) {\r\n        throw new Error('no canvas available for using graphical output');\r\n      }\r\n      const width = output[0];\r\n      const height = output[1] || 1;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      this._imageData = this.context.createImageData(width, height);\r\n      this._colorData = new Uint8ClampedArray(width * height * 4);\r\n    }\r\n\r\n    const kernelString = this.getKernelString();\r\n    this.kernelString = kernelString;\r\n\r\n    if (this.debug) {\r\n      console.log('Function output:');\r\n      console.log(kernelString);\r\n    }\r\n\r\n    try {\r\n      this.run = new Function([], kernelString).bind(this)();\r\n    } catch (e) {\r\n      console.error('An error occurred compiling the javascript: ', e);\r\n    }\r\n  }\r\n\r\n  color(r, g, b, a) {\r\n    if (typeof a === 'undefined') {\r\n      a = 1;\r\n    }\r\n\r\n    r = Math.floor(r * 255);\r\n    g = Math.floor(g * 255);\r\n    b = Math.floor(b * 255);\r\n    a = Math.floor(a * 255);\r\n\r\n    const width = this.output[0];\r\n    const height = this.output[1];\r\n\r\n    const x = this.thread.x;\r\n    const y = height - this.thread.y - 1;\r\n\r\n    const index = x + y * width;\r\n\r\n    this._colorData[index * 4 + 0] = r;\r\n    this._colorData[index * 4 + 1] = g;\r\n    this._colorData[index * 4 + 2] = b;\r\n    this._colorData[index * 4 + 3] = a;\r\n  }\r\n\r\n  /**\r\n   * @desc Generates kernel string for this kernel program.\r\n   *\r\n   * <p>If sub-kernels are supplied, they are also factored in.\r\n   * This string can be saved by calling the `toString` method\r\n   * and then can be reused later.</p>\r\n   *\r\n   * @returns {String} result\r\n   *\r\n   */\r\n  getKernelString() {\r\n    if (this._kernelString !== null) return this._kernelString;\r\n\r\n    let kernelThreadString = null;\r\n    let {\r\n      translatedSources\r\n    } = this;\r\n    if (translatedSources.length > 1) {\r\n      translatedSources = translatedSources.filter(fn => {\r\n        if (/^function/.test(fn)) return fn;\r\n        kernelThreadString = fn;\r\n        return false;\r\n      })\r\n    } else {\r\n      kernelThreadString = translatedSources.shift();\r\n    }\r\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\r\n  ${ this.injectedNative || '' }\r\n  const _this = this;\r\n  ${ this._processConstants() }\r\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\r\n    ${ this._processArguments() }\r\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\r\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\r\n  };`;\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\r\n   */\r\n  toString() {\r\n    return cpuKernelString(this);\r\n  }\r\n\r\n  /**\r\n   * @desc Get the maximum loop size String.\r\n   * @returns {String} result\r\n   */\r\n  _getLoopMaxString() {\r\n    return (\r\n      this.loopMaxIterations ?\r\n      ` ${ parseInt(this.loopMaxIterations) };` :\r\n      ' 1000;'\r\n    );\r\n  }\r\n\r\n  _processConstants() {\r\n    if (!this.constants) return '';\r\n\r\n    const result = [];\r\n    for (let p in this.constants) {\r\n      const type = this.constantTypes[p];\r\n      switch (type) {\r\n        case 'HTMLImage':\r\n        case 'HTMLVideo':\r\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\r\n          break;\r\n        case 'HTMLImageArray':\r\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\r\n          break;\r\n        case 'Input':\r\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\r\n          break;\r\n        default:\r\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  _processArguments() {\r\n    const result = [];\r\n    for (let i = 0; i < this.argumentTypes.length; i++) {\r\n      const variableName = `user_${this.argumentNames[i]}`;\r\n      switch (this.argumentTypes[i]) {\r\n        case 'HTMLImage':\r\n        case 'HTMLVideo':\r\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\r\n          break;\r\n        case 'HTMLImageArray':\r\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\r\n          break;\r\n        case 'Input':\r\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\r\n          break;\r\n        case 'ArrayTexture(1)':\r\n        case 'ArrayTexture(2)':\r\n        case 'ArrayTexture(3)':\r\n        case 'ArrayTexture(4)':\r\n        case 'NumberTexture':\r\n        case 'MemoryOptimizedNumberTexture':\r\n          result.push(`\r\n    if (${variableName}.toArray) {\r\n      if (!_this.textureCache) {\r\n        _this.textureCache = [];\r\n        _this.arrayCache = [];\r\n      }\r\n      const textureIndex = _this.textureCache.indexOf(${variableName});\r\n      if (textureIndex !== -1) {\r\n        ${variableName} = _this.arrayCache[textureIndex];\r\n      } else {\r\n        _this.textureCache.push(${variableName});\r\n        ${variableName} = ${variableName}.toArray();\r\n        _this.arrayCache.push(${variableName});\r\n      }\r\n    }`);\r\n          break;\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  _mediaTo2DArray(media) {\r\n    const canvas = this.canvas;\r\n    const width = media.width > 0 ? media.width : media.videoWidth;\r\n    const height = media.height > 0 ? media.height : media.videoHeight;\r\n    if (canvas.width < width) {\r\n      canvas.width = width;\r\n    }\r\n    if (canvas.height < height) {\r\n      canvas.height = height;\r\n    }\r\n    const ctx = this.context;\r\n    ctx.drawImage(media, 0, 0, width, height);\r\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\r\n    const imageArray = new Array(height);\r\n    let index = 0;\r\n    for (let y = height - 1; y >= 0; y--) {\r\n      const row = imageArray[y] = new Array(width);\r\n      for (let x = 0; x < width; x++) {\r\n        const pixel = new Float32Array(4);\r\n        pixel[0] = pixelsData[index++] / 255; // r\r\n        pixel[1] = pixelsData[index++] / 255; // g\r\n        pixel[2] = pixelsData[index++] / 255; // b\r\n        pixel[3] = pixelsData[index++] / 255; // a\r\n        row[x] = pixel;\r\n      }\r\n    }\r\n    return imageArray;\r\n  }\r\n\r\n  getPixels(flip) {\r\n    const [width, height] = this.output;\r\n    // cpu is not flipped by default\r\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\r\n  }\r\n\r\n  _imageTo3DArray(images) {\r\n    const imagesArray = new Array(images.length);\r\n    for (let i = 0; i < images.length; i++) {\r\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\r\n    }\r\n    return imagesArray;\r\n  }\r\n\r\n  _resultKernelBody(kernelString) {\r\n    switch (this.output.length) {\r\n      case 1:\r\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\r\n      case 2:\r\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\r\n      case 3:\r\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\r\n      default:\r\n        throw new Error('unsupported size kernel');\r\n    }\r\n  }\r\n\r\n  _graphicalKernelBody(kernelThreadString) {\r\n    switch (this.output.length) {\r\n      case 2:\r\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\r\n      default:\r\n        throw new Error('unsupported size kernel');\r\n    }\r\n  }\r\n\r\n  _graphicalOutput() {\r\n    return `\r\n    this._imageData.data.set(this._colorData);\r\n    this.context.putImageData(this._imageData, 0, 0);\r\n    return;`\r\n  }\r\n\r\n  _getKernelResultTypeConstructorString() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return 'Float32Array';\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        return 'Array';\r\n      default:\r\n        if (this.graphical) {\r\n          return 'Float32Array';\r\n        }\r\n        throw new Error(`unhandled returnType ${ this.returnType }`);\r\n    }\r\n  }\r\n\r\n  _resultKernel1DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const result = new ${constructorString}(outputX);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let x = 0; x < outputX; x++) {\r\n      this.thread.x = x;\r\n      this.thread.y = 0;\r\n      this.thread.z = 0;\r\n      ${ kernelString }\r\n    }`;\r\n  }\r\n\r\n  _resultKernel2DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    const result = new Array(outputY);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let y = 0; y < outputY; y++) {\r\n      this.thread.z = 0;\r\n      this.thread.y = y;\r\n      const resultX = result[y] = new ${constructorString}(outputX);\r\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\r\n      for (let x = 0; x < outputX; x++) {\r\n        this.thread.x = x;\r\n        ${ kernelString }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _graphicalKernel2DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let y = 0; y < outputY; y++) {\r\n      this.thread.z = 0;\r\n      this.thread.y = y;\r\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\r\n      for (let x = 0; x < outputX; x++) {\r\n        this.thread.x = x;\r\n        ${ kernelString }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _resultKernel3DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    const outputZ = _this.output[2];\r\n    const result = new Array(outputZ);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let z = 0; z < outputZ; z++) {\r\n      this.thread.z = z;\r\n      const resultY = result[z] = new Array(outputY);\r\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\r\n      for (let y = 0; y < outputY; y++) {\r\n        this.thread.y = y;\r\n        const resultX = resultY[y] = new ${constructorString}(outputX);\r\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\r\n        for (let x = 0; x < outputX; x++) {\r\n          this.thread.x = x;\r\n          ${ kernelString }\r\n        }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _kernelOutput() {\r\n    if (!this.subKernels) {\r\n      return '\\n    return result;';\r\n    }\r\n    return `\\n    return {\r\n      result: result,\r\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\r\n    };`;\r\n  }\r\n\r\n  _mapSubKernels(fn) {\r\n    return this.subKernels === null ? [''] :\r\n      this.subKernels.map(fn);\r\n  }\r\n\r\n\r\n\r\n  destroy(removeCanvasReference) {\r\n    if (removeCanvasReference) {\r\n      delete this.canvas;\r\n    }\r\n  }\r\n\r\n  static destroyContext(context) {}\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\r\n    return json;\r\n  }\r\n\r\n  setOutput(output) {\r\n    super.setOutput(output);\r\n    const [width, height] = this.output;\r\n    if (this.graphical) {\r\n      this._imageData = this.context.createImageData(width, height);\r\n      this._colorData = new Uint8ClampedArray(width * height * 4);\r\n    }\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { Texture } from '../../../texture';\r\n\r\nexport class GLTextureFloat extends Texture {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  renderRawOutput() {\r\n    const { context: gl } = this;\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      this.texture,\r\n      0\r\n    );\r\n    const result = new Float32Array(this.size[0] * this.size[1] * 4);\r\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n  renderValues() {\r\n    return this.renderRawOutput();\r\n  }\r\n  toArray() {\r\n    return utils.erectFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray3(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray4(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureFloat2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureFloat3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { Texture } from '../../../texture';\r\n\r\nexport class GLTextureUnsigned extends Texture {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  renderRawOutput() {\r\n    const { context: gl } = this;\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      this.texture,\r\n      0\r\n    );\r\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\r\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\r\n    return result;\r\n  }\r\n  renderValues() {\r\n    return new Float32Array(this.renderRawOutput().buffer);\r\n  }\r\n  toArray() {\r\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureUnsigned2D extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureUnsigned3D extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureGraphical extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return this.renderValues();\r\n  }\r\n}\r\n","import { Kernel } from '../kernel';\r\nimport { utils } from '../../utils';\r\nimport { GLTextureArray2Float } from './texture/array-2-float';\r\nimport { GLTextureArray2Float2D } from './texture/array-2-float-2d';\r\nimport { GLTextureArray2Float3D } from './texture/array-2-float-3d';\r\nimport { GLTextureArray3Float } from './texture/array-3-float';\r\nimport { GLTextureArray3Float2D } from './texture/array-3-float-2d';\r\nimport { GLTextureArray3Float3D } from './texture/array-3-float-3d';\r\nimport { GLTextureArray4Float } from './texture/array-4-float';\r\nimport { GLTextureArray4Float2D } from './texture/array-4-float-2d';\r\nimport { GLTextureArray4Float3D } from './texture/array-4-float-3d';\r\nimport { GLTextureFloat } from './texture/float';\r\nimport { GLTextureFloat2D } from './texture/float-2d';\r\nimport { GLTextureFloat3D } from './texture/float-3d';\r\nimport { GLTextureMemoryOptimized } from './texture/memory-optimized';\r\nimport { GLTextureMemoryOptimized2D } from './texture/memory-optimized-2d';\r\nimport { GLTextureMemoryOptimized3D } from './texture/memory-optimized-3d';\r\nimport { GLTextureUnsigned } from './texture/unsigned';\r\nimport { GLTextureUnsigned2D } from './texture/unsigned-2d';\r\nimport { GLTextureUnsigned3D } from './texture/unsigned-3d';\r\nimport { GLTextureGraphical } from './texture/graphical';\r\n\r\n/**\r\n * @abstract\r\n * @extends Kernel\r\n */\r\nexport class GLKernel extends Kernel {\r\n  static get mode() {\r\n    return 'gpu';\r\n  }\r\n\r\n  static getIsFloatRead() {\r\n    const kernelString = `function kernelFunction() {\r\n      return 1;\r\n    }`;\r\n    const kernel = new this(kernelString, {\r\n      context: this.testContext,\r\n      canvas: this.testCanvas,\r\n      validate: false,\r\n      output: [1],\r\n      precision: 'single',\r\n      returnType: 'Number',\r\n      tactic: 'speed',\r\n    });\r\n    kernel.build();\r\n    kernel.run();\r\n    const result = kernel.renderOutput();\r\n    kernel.destroy(true);\r\n    return result[0] === 1;\r\n  }\r\n\r\n  static getIsIntegerDivisionAccurate() {\r\n    function kernelFunction(v1, v2) {\r\n      return v1[this.thread.x] / v2[this.thread.x];\r\n    }\r\n    const kernel = new this(kernelFunction.toString(), {\r\n      context: this.testContext,\r\n      canvas: this.testCanvas,\r\n      validate: false,\r\n      output: [2],\r\n      returnType: 'Number',\r\n      precision: 'unsigned',\r\n      tactic: 'speed',\r\n    });\r\n    const args = [\r\n      [6, 6030401],\r\n      [3, 3991]\r\n    ];\r\n    kernel.build.apply(kernel, args);\r\n    kernel.run.apply(kernel, args);\r\n    const result = kernel.renderOutput();\r\n    kernel.destroy(true);\r\n    // have we not got whole numbers for 6/3 or 6030401/3991\r\n    // add more here if others see this problem\r\n    return result[0] === 2 && result[1] === 1511;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static get testCanvas() {\r\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static get testContext() {\r\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {IKernelFeatures}\r\n   */\r\n  static get features() {\r\n    throw new Error(`\"features\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static setupFeatureChecks() {\r\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Fix division by factor of 3 FP accuracy bug\r\n   * @param {Boolean} fix - should fix\r\n   */\r\n  setFixIntegerDivisionAccuracy(fix) {\r\n    this.fixIntegerDivisionAccuracy = fix;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle output mode\r\n   * @param {String} flag - 'single' or 'unsigned'\r\n   */\r\n  setPrecision(flag) {\r\n    this.precision = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle texture output mode\r\n   * @param {Boolean} flag - true to enable floatTextures\r\n   * @deprecated\r\n   */\r\n  setFloatTextures(flag) {\r\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\r\n    this.floatTextures = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * A highly readable very forgiving micro-parser for a glsl function that gets argument types\r\n   * @param {String} source\r\n   * @returns {{argumentTypes: String[], argumentNames: String[]}}\r\n   */\r\n  static nativeFunctionArguments(source) {\r\n    const argumentTypes = [];\r\n    const argumentNames = [];\r\n    const states = [];\r\n    const isStartingVariableName = /^[a-zA-Z_]/;\r\n    const isVariableChar = /[a-zA-Z_0-9]/;\r\n    let i = 0;\r\n    let argumentName = null;\r\n    let argumentType = null;\r\n    while (i < source.length) {\r\n      const char = source[i];\r\n      const nextChar = source[i + 1];\r\n      const state = states.length > 0 ? states[states.length - 1] : null;\r\n\r\n      // begin MULTI_LINE_COMMENT handling\r\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\r\n        states.push('MULTI_LINE_COMMENT');\r\n        i += 2;\r\n        continue;\r\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\r\n        states.pop();\r\n        i += 2;\r\n        continue;\r\n      }\r\n      // end MULTI_LINE_COMMENT handling\r\n\r\n      // begin COMMENT handling\r\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\r\n        states.push('COMMENT');\r\n        i += 2;\r\n        continue;\r\n      } else if (state === 'COMMENT' && char === '\\n') {\r\n        states.pop();\r\n        i++;\r\n        continue;\r\n      }\r\n      // end COMMENT handling\r\n\r\n      // being FUNCTION_ARGUMENTS handling\r\n      else if (state === null && char === '(') {\r\n        states.push('FUNCTION_ARGUMENTS');\r\n        i++;\r\n        continue;\r\n      } else if (state === 'FUNCTION_ARGUMENTS') {\r\n        if (char === ')') {\r\n          states.pop();\r\n          break;\r\n        }\r\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'float';\r\n          argumentName = '';\r\n          i += 6;\r\n          continue;\r\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'int';\r\n          argumentName = '';\r\n          i += 4;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec2';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec3';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec4';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        }\r\n      }\r\n      // end FUNCTION_ARGUMENTS handling\r\n\r\n      // begin DECLARE_VARIABLE handling\r\n      else if (state === 'DECLARE_VARIABLE') {\r\n        if (argumentName === '') {\r\n          if (char === ' ') {\r\n            i++;\r\n            continue;\r\n          }\r\n          if (!isStartingVariableName.test(char)) {\r\n            throw new Error('variable name is not expected string');\r\n          }\r\n        }\r\n        argumentName += char;\r\n        if (!isVariableChar.test(nextChar)) {\r\n          states.pop();\r\n          argumentNames.push(argumentName);\r\n          argumentTypes.push(typeMap[argumentType]);\r\n        }\r\n      }\r\n      // end DECLARE_VARIABLE handling\r\n\r\n      // Progress to next character\r\n      i++;\r\n    }\r\n    if (states.length > 0) {\r\n      throw new Error('GLSL function was not parsable');\r\n    }\r\n    return {\r\n      argumentNames,\r\n      argumentTypes,\r\n    };\r\n  }\r\n\r\n  static nativeFunctionReturnType(source) {\r\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\r\n  }\r\n\r\n  static combineKernels(combinedKernel, lastKernel) {\r\n    combinedKernel.apply(null, arguments);\r\n    const {\r\n      texSize,\r\n      context,\r\n      threadDim\r\n    } = lastKernel.texSize;\r\n    let result;\r\n    if (lastKernel.precision === 'single') {\r\n      const w = texSize[0];\r\n      const h = Math.ceil(texSize[1] / 4);\r\n      result = new Float32Array(w * h * 4 * 4);\r\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\r\n    } else {\r\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\r\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\r\n      result = new Float32Array(bytes.buffer);\r\n    }\r\n\r\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\r\n\r\n    if (lastKernel.output.length === 1) {\r\n      return result;\r\n    } else if (lastKernel.output.length === 2) {\r\n      return utils.splitArray(result, lastKernel.output[0]);\r\n    } else if (lastKernel.output.length === 3) {\r\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\r\n      return cube.map(function(x) {\r\n        return utils.splitArray(x, lastKernel.output[0]);\r\n      });\r\n    }\r\n  }\r\n\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.transferValues = null;\r\n    this.formatValues = null;\r\n    this.TextureConstructor = null;\r\n    this.renderOutput = null;\r\n    this.renderRawOutput = null;\r\n    this.texSize = null;\r\n    this.translatedSource = null;\r\n    this.renderStrategy = null;\r\n    this.compiledFragmentShader = null;\r\n    this.compiledVertexShader = null;\r\n  }\r\n\r\n  checkTextureSize() {\r\n    const { features } = this.constructor;\r\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\r\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\r\n    }\r\n  }\r\n\r\n  translateSource() {\r\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\r\n  }\r\n\r\n  /**\r\n   * Picks a render strategy for the now finally parsed kernel\r\n   * @param args\r\n   * @return {null|KernelOutput}\r\n   */\r\n  pickRenderStrategy(args) {\r\n    if (this.graphical) {\r\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\r\n      this.transferValues = (pixels) => pixels;\r\n      this.TextureConstructor = GLTextureGraphical;\r\n      return null;\r\n    }\r\n    if (this.precision === 'unsigned') {\r\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\r\n      this.transferValues = this.readPackedPixelsToFloat32Array;\r\n      if (this.pipeline) {\r\n        this.renderOutput = this.renderTexture;\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToTextures;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned3D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned2D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureUnsigned;\r\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            return this.requestFallback(args);\r\n        }\r\n      } else {\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToArrays;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            this.renderOutput = this.renderValues;\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned3D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\r\n              this.formatValues = utils.erect3DPackedFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned2D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\r\n              this.formatValues = utils.erect2DPackedFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureUnsigned;\r\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\r\n              this.formatValues = utils.erectPackedFloat;\r\n              return null;\r\n            }\r\n\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            return this.requestFallback(args);\r\n        }\r\n      }\r\n    } else if (this.precision === 'single') {\r\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\r\n      this.transferValues = this.readFloatPixelsToFloat32Array;\r\n      if (this.pipeline) {\r\n        this.renderStrategy = renderStrategy.FloatTexture;\r\n        this.renderOutput = this.renderTexture;\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToTextures;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              if (this.output[2] > 0) {\r\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\r\n                return null;\r\n              } else if (this.output[1] > 0) {\r\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\r\n                return null;\r\n              } else {\r\n                this.TextureConstructor = GLTextureMemoryOptimized;\r\n                return null;\r\n              }\r\n            } else {\r\n              if (this.output[2] > 0) {\r\n                this.TextureConstructor = GLTextureFloat3D;\r\n                return null;\r\n              } else if (this.output[1] > 0) {\r\n                this.TextureConstructor = GLTextureFloat2D;\r\n                return null;\r\n              } else {\r\n                this.TextureConstructor = GLTextureFloat;\r\n                return null;\r\n              }\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              return null;\r\n            }\r\n        }\r\n      }\r\n      this.renderOutput = this.renderValues;\r\n      if (this.subKernels !== null) {\r\n        this.renderKernels = this.renderKernelsToArrays;\r\n      }\r\n      if (this.optimizeFloatMemory) {\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized3DFloat;\r\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized2DFloat;\r\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureMemoryOptimized;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimizedFloat;\r\n              this.formatValues = utils.erectMemoryOptimizedFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\r\n              this.formatValues = utils.erect3DArray2;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\r\n              this.formatValues = utils.erect2DArray2;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\r\n              this.formatValues = utils.erectArray2;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\r\n              this.formatValues = utils.erect3DArray3;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\r\n              this.formatValues = utils.erect2DArray3;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\r\n              this.formatValues = utils.erectArray3;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\r\n              this.formatValues = utils.erect3DArray4;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\r\n              this.formatValues = utils.erect2DArray4;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\r\n              this.formatValues = utils.erectArray4;\r\n              return null;\r\n            }\r\n        }\r\n      } else {\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureFloat3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DFloat;\r\n              this.formatValues = utils.erect3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureFloat2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DFloat;\r\n              this.formatValues = utils.erect2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureFloat;\r\n              this.renderStrategy = renderStrategy.FloatPixelToFloat;\r\n              this.formatValues = utils.erectFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\r\n              this.formatValues = utils.erect3DArray2;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\r\n              this.formatValues = utils.erect2DArray2;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\r\n              this.formatValues = utils.erectArray2;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\r\n              this.formatValues = utils.erect3DArray3;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\r\n              this.formatValues = utils.erect2DArray3;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\r\n              this.formatValues = utils.erectArray3;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\r\n              this.formatValues = utils.erect3DArray4;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\r\n              this.formatValues = utils.erect2DArray4;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\r\n              this.formatValues = utils.erectArray4;\r\n              return null;\r\n            }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\r\n    }\r\n\r\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @returns String\r\n   */\r\n  getKernelString() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n\r\n  getMainResultTexture() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Integer':\r\n      case 'Number':\r\n        return this.getMainResultNumberTexture();\r\n      case 'Array(2)':\r\n        return this.getMainResultArray2Texture();\r\n      case 'Array(3)':\r\n        return this.getMainResultArray3Texture();\r\n      case 'Array(4)':\r\n        return this.getMainResultArray4Texture();\r\n      default:\r\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelNumberTexture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelNumberTexture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray2Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray2Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray3Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray3Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray4Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray4Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultGraphical() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultMemoryOptimizedFloats() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultPackedPixels() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n\r\n  getMainResultString() {\r\n    if (this.graphical) {\r\n      return this.getMainResultGraphical();\r\n    } else if (this.precision === 'single') {\r\n      if (this.optimizeFloatMemory) {\r\n        return this.getMainResultMemoryOptimizedFloats();\r\n      }\r\n      return this.getMainResultTexture();\r\n    } else {\r\n      return this.getMainResultPackedPixels();\r\n    }\r\n  }\r\n\r\n  getMainResultNumberTexture() {\r\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\r\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\r\n  }\r\n\r\n  getMainResultArray2Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\r\n  }\r\n\r\n  getMainResultArray3Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\r\n  }\r\n\r\n  getMainResultArray4Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getFloatTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp float;\\n';\r\n      case 'performance':\r\n        return 'precision highp float;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump float;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getIntTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp int;\\n';\r\n      case 'performance':\r\n        return 'precision highp int;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump int;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getSampler2DTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp sampler2D;\\n';\r\n      case 'performance':\r\n        return 'precision highp sampler2D;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump sampler2D;\\n';\r\n    }\r\n  }\r\n\r\n  getSampler2DArrayTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp sampler2DArray;\\n';\r\n      case 'performance':\r\n        return 'precision highp sampler2DArray;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump sampler2DArray;\\n';\r\n    }\r\n  }\r\n\r\n  renderTexture() {\r\n    return new this.TextureConstructor({\r\n      texture: this.outputTexture,\r\n      size: this.texSize,\r\n      dimensions: this.threadDim,\r\n      output: this.output,\r\n      context: this.context,\r\n    });\r\n  }\r\n  readPackedPixelsToUint8Array() {\r\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\r\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\r\n    return result;\r\n  }\r\n\r\n  readPackedPixelsToFloat32Array() {\r\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\r\n  }\r\n\r\n  readFloatPixelsToFloat32Array() {\r\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const w = texSize[0];\r\n    const h = texSize[1];\r\n    const result = new Float32Array(w * h * 4);\r\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n\r\n  readMemoryOptimizedFloatPixelsToFloat32Array() {\r\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const w = texSize[0];\r\n    const h = texSize[1];\r\n    const result = new Float32Array(w * h * 4);\r\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Boolean} [flip]\r\n   * @return {Uint8Array}\r\n   */\r\n  getPixels(flip) {\r\n    const {\r\n      context: gl,\r\n      output\r\n    } = this;\r\n    const [width, height] = output;\r\n    const pixels = new Uint8Array(width * height * 4);\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    // flipped by default, so invert\r\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\r\n  }\r\n\r\n  renderKernelsToArrays() {\r\n    const result = {\r\n      result: this.renderOutput(),\r\n    };\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      result[this.subKernels[i].property] = new this.TextureConstructor({\r\n        texture: this.subKernelOutputTextures[i],\r\n        size: this.texSize,\r\n        dimensions: this.threadDim,\r\n        output: this.output,\r\n        context: this.context,\r\n      }).toArray();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  renderKernelsToTextures() {\r\n    const result = {\r\n      result: this.renderOutput(),\r\n    };\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      result[this.subKernels[i].property] = new this.TextureConstructor({\r\n        texture: this.subKernelOutputTextures[i],\r\n        size: this.texSize,\r\n        dimensions: this.threadDim,\r\n        output: this.output,\r\n        context: this.context,\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  setOutput(output) {\r\n    super.setOutput(output);\r\n    if (this.program) {\r\n      this.threadDim = [this.output[0], this.output[1] || 1, this.output[2] || 1];\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      const { context: gl } = this;\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n      this.updateMaxTexSize();\r\n      this.framebuffer.width = this.texSize[0];\r\n      this.framebuffer.height = this.texSize[1];\r\n      this.context.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      this.canvas.width = this.maxTexSize[0];\r\n      this.canvas.height = this.maxTexSize[1];\r\n      this._setupOutputTexture();\r\n      if (this.subKernels && this.subKernels.length > 0) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  renderValues() {\r\n    return this.formatValues(\r\n      this.transferValues(),\r\n      this.output[0],\r\n      this.output[1],\r\n      this.output[2]\r\n    );\r\n  }\r\n}\r\n\r\nexport const renderStrategy = Object.freeze({\r\n  PackedPixelToUint8Array: Symbol('PackedPixelToUint8Array'),\r\n  PackedPixelToFloat: Symbol('PackedPixelToFloat'),\r\n  PackedPixelTo2DFloat: Symbol('PackedPixelTo2DFloat'),\r\n  PackedPixelTo3DFloat: Symbol('PackedPixelTo3DFloat'),\r\n  PackedTexture: Symbol('PackedTexture'),\r\n  FloatPixelToFloat32Array: Symbol('FloatPixelToFloat32Array'),\r\n  FloatPixelToFloat: Symbol('FloatPixelToFloat'),\r\n  FloatPixelTo2DFloat: Symbol('FloatPixelTo2DFloat'),\r\n  FloatPixelTo3DFloat: Symbol('FloatPixelTo3DFloat'),\r\n  FloatPixelToArray2: Symbol('FloatPixelToArray2'),\r\n  FloatPixelTo2DArray2: Symbol('FloatPixelTo2DArray2'),\r\n  FloatPixelTo3DArray2: Symbol('FloatPixelTo3DArray2'),\r\n  FloatPixelToArray3: Symbol('FloatPixelToArray3'),\r\n  FloatPixelTo2DArray3: Symbol('FloatPixelTo2DArray3'),\r\n  FloatPixelTo3DArray3: Symbol('FloatPixelTo3DArray3'),\r\n  FloatPixelToArray4: Symbol('FloatPixelToArray4'),\r\n  FloatPixelTo2DArray4: Symbol('FloatPixelTo2DArray4'),\r\n  FloatPixelTo3DArray4: Symbol('FloatPixelTo3DArray4'),\r\n  FloatTexture: Symbol('FloatTexture'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimizedFloat: Symbol('MemoryOptimizedFloatPixelToFloat'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimized2DFloat: Symbol('MemoryOptimizedFloatPixelTo2DFloat'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimized3DFloat: Symbol('MemoryOptimizedFloatPixelTo3DFloat'),\r\n});\r\n\r\nconst typeMap = {\r\n  int: 'Integer',\r\n  float: 'Number',\r\n  vec2: 'Array(2)',\r\n  vec3: 'Array(3)',\r\n  vec4: 'Array(4)',\r\n};\r\n","import { utils } from '../../utils';\r\nimport { FunctionNode } from '../function-node';\r\n// Closure capture for the ast function, prevent collision with existing AST functions\r\n// The prefixes to use\r\nconst jsMathPrefix = 'Math.';\r\nconst localPrefix = 'this.';\r\n\r\n/**\r\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective WebGL code\r\n * @extends FunctionNode\r\n * @returns the converted WebGL function string\r\n */\r\nexport class WebGLFunctionNode extends FunctionNode {\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\r\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunction(ast, retArr) {\r\n    // Setup function return type and name\r\n    if (this.isRootKernel) {\r\n      retArr.push('void');\r\n    } else {\r\n      // looking up return type, this is a little expensive, and can be avoided if returnType is set\r\n      let lastReturn = null;\r\n      if (!this.returnType) {\r\n        const lastReturn = this.findLastReturn();\r\n        if (lastReturn) {\r\n          this.returnType = this.getType(ast.body);\r\n          if (this.returnType === 'LiteralInteger') {\r\n            this.returnType = 'Number';\r\n          }\r\n        }\r\n      }\r\n\r\n      const { returnType } = this;\r\n      if (!returnType) {\r\n        retArr.push('void');\r\n      } else {\r\n        const type = typeMap[returnType];\r\n        if (!type) {\r\n          throw new Error(`unknown type ${returnType}`);\r\n        }\r\n        retArr.push(type);\r\n      }\r\n    }\r\n    retArr.push(' ');\r\n    retArr.push(this.name);\r\n    retArr.push('(');\r\n\r\n    if (!this.isRootKernel) {\r\n      // Arguments handling\r\n      for (let i = 0; i < this.argumentNames.length; ++i) {\r\n        const argumentName = this.argumentNames[i];\r\n\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\r\n        // The type is too loose ended, here we descide to solidify a type, lets go with float\r\n        if (!argumentType) {\r\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\r\n        }\r\n        if (argumentType === 'LiteralInteger') {\r\n          this.argumentTypes[i] = argumentType = 'Number';\r\n        }\r\n        const type = typeMap[argumentType];\r\n        if (!type) {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        retArr.push(type);\r\n        retArr.push(' ');\r\n        retArr.push('user_');\r\n        retArr.push(argumentName);\r\n      }\r\n    }\r\n\r\n    // Function opening\r\n    retArr.push(') {\\n');\r\n\r\n    // Body statement iteration\r\n    for (let i = 0; i < ast.body.body.length; ++i) {\r\n      this.astGeneric(ast.body.body[i], retArr);\r\n      retArr.push('\\n');\r\n    }\r\n\r\n    // Function closing\r\n    retArr.push('}\\n');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to *return* statement\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astReturnStatement(ast, retArr) {\r\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\r\n    this.pushState('skip-literal-correction');\r\n    const type = this.getType(ast.argument);\r\n    this.popState('skip-literal-correction');\r\n\r\n    const result = [];\r\n\r\n    if (!this.returnType) {\r\n      if (type === 'LiteralInteger' || type === 'Integer') {\r\n        this.returnType = 'Number';\r\n      } else {\r\n        this.returnType = type;\r\n      }\r\n    }\r\n\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Float':\r\n        switch (type) {\r\n          case 'Integer':\r\n            result.push('float(');\r\n            this.astGeneric(ast.argument, result);\r\n            result.push(')');\r\n            break;\r\n          case 'LiteralInteger':\r\n            this.castLiteralToFloat(ast.argument, result);\r\n\r\n            // Running astGeneric forces the LiteralInteger to pick a type, and here, if we are returning a float, yet\r\n            // the LiteralInteger has picked to be an integer because of constraints on it we cast it to float.\r\n            if (this.getType(ast) === 'Integer') {\r\n              result.unshift('float(');\r\n              result.push(')');\r\n            }\r\n            break;\r\n          default:\r\n            this.astGeneric(ast.argument, result);\r\n        }\r\n        break;\r\n      case 'Integer':\r\n        switch (type) {\r\n          case 'Float':\r\n          case 'Number':\r\n            this.castValueToInteger(ast.argument, result);\r\n            break;\r\n          case 'LiteralInteger':\r\n            this.castLiteralToInteger(ast.argument, result);\r\n            break;\r\n          default:\r\n            this.astGeneric(ast.argument, result);\r\n        }\r\n        break;\r\n      case 'Array(4)':\r\n      case 'Array(3)':\r\n      case 'Array(2)':\r\n      case 'Input':\r\n        this.astGeneric(ast.argument, result);\r\n        break;\r\n      default:\r\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\r\n    }\r\n\r\n    if (this.isRootKernel) {\r\n      retArr.push(`kernelResult = ${ result.join('') };`);\r\n      retArr.push('return;');\r\n    } else if (this.isSubKernel) {\r\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\r\n      retArr.push(`return subKernelResult_${ this.name };`);\r\n    } else {\r\n      retArr.push(`return ${ result.join('') };`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *literal value*\r\n   *\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   *\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLiteral(ast, retArr) {\r\n    // Reject non numeric literals\r\n    if (isNaN(ast.value)) {\r\n      throw this.astErrorOutput(\r\n        'Non-numeric literal not supported : ' + ast.value,\r\n        ast\r\n      );\r\n    }\r\n\r\n    const key = `${ast.start},${ast.end}`;\r\n    if (Number.isInteger(ast.value)) {\r\n      if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n        this.literalTypes[key] = 'Integer';\r\n        retArr.push(`${ast.value}`);\r\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\r\n        this.literalTypes[key] = 'Number';\r\n        retArr.push(`${ast.value}.0`);\r\n      } else {\r\n        this.literalTypes[key] = 'Number';\r\n        retArr.push(`${ast.value}.0`);\r\n      }\r\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n      this.literalTypes[key] = 'Integer';\r\n      retArr.push(Math.round(ast.value));\r\n    } else {\r\n      this.literalTypes[key] = 'Number';\r\n      retArr.push(`${ast.value}`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *binary* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBinaryExpression(ast, retArr) {\r\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\r\n      return retArr;\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\r\n      retArr.push('div_with_int_check(');\r\n      this.pushState('building-float');\r\n      switch (this.getType(ast.left)) {\r\n        case 'Integer':\r\n          this.castValueToFloat(ast.left, retArr);\r\n          break;\r\n        case 'LiteralInteger':\r\n          this.castLiteralToFloat(ast.left, retArr);\r\n          break;\r\n        default:\r\n          this.astGeneric(ast.left, retArr);\r\n      }\r\n      retArr.push(', ');\r\n      switch (this.getType(ast.right)) {\r\n        case 'Integer':\r\n          this.castValueToFloat(ast.right, retArr);\r\n          break;\r\n        case 'LiteralInteger':\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          break;\r\n        default:\r\n          this.astGeneric(ast.right, retArr);\r\n      }\r\n      this.popState('building-float');\r\n      retArr.push(')');\r\n      return retArr;\r\n    }\r\n\r\n    retArr.push('(');\r\n    const leftType = this.getType(ast.left) || 'Number';\r\n    const rightType = this.getType(ast.right) || 'Number';\r\n    if (!leftType || !rightType) {\r\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\r\n    }\r\n    const key = leftType + ' & ' + rightType;\r\n    switch (key) {\r\n      case 'Integer & Integer':\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n      case 'Number & Float':\r\n      case 'Float & Number':\r\n      case 'Float & Float':\r\n      case 'Number & Number':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n      case 'LiteralInteger & LiteralInteger':\r\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n          this.pushState('building-integer');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.astGeneric(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.castLiteralToFloat(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n\r\n      case 'Integer & Float':\r\n      case 'Integer & Number':\r\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\r\n          // if right value is actually a float, don't loose that information, cast left to right rather than the usual right to left\r\n          if (!Number.isInteger(ast.right.value)) {\r\n            this.pushState('building-float');\r\n            this.castValueToFloat(ast.left, retArr);\r\n            retArr.push(operatorMap[ast.operator] || ast.operator);\r\n            this.astGeneric(ast.right, retArr);\r\n            this.popState('building-float');\r\n            break;\r\n          }\r\n        }\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.pushState('casting-to-integer');\r\n        if (ast.right.type === 'Literal') {\r\n          const literalResult = [];\r\n          this.astGeneric(ast.right, literalResult);\r\n          const literalType = this.getType(ast.right);\r\n          if (literalType === 'Integer') {\r\n            retArr.push(literalResult.join(''));\r\n          } else {\r\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\r\n          }\r\n        } else {\r\n          retArr.push('int(');\r\n          this.astGeneric(ast.right, retArr);\r\n          retArr.push(')');\r\n        }\r\n        this.popState('casting-to-integer');\r\n        this.popState('building-integer');\r\n        break;\r\n      case 'Integer & LiteralInteger':\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castLiteralToInteger(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n\r\n      case 'Number & Integer':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castValueToFloat(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n      case 'Float & LiteralInteger':\r\n      case 'Number & LiteralInteger':\r\n        if (this.isState('in-for-loop-test')) {\r\n          this.pushState('building-integer');\r\n          retArr.push('int(');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(')');\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToInteger(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n      case 'LiteralInteger & Float':\r\n      case 'LiteralInteger & Number':\r\n        if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\r\n          this.pushState('building-integer');\r\n          this.castLiteralToInteger(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castValueToInteger(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.pushState('casting-to-float');\r\n          this.astGeneric(ast.right, retArr);\r\n          this.popState('casting-to-float');\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n      case 'LiteralInteger & Integer':\r\n        this.pushState('building-integer');\r\n        this.castLiteralToInteger(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n\r\n      case 'Boolean & Boolean':\r\n        this.pushState('building-boolean');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-boolean');\r\n        break;\r\n\r\n      case 'Float & Integer':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castValueToFloat(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n\r\n      default:\r\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\r\n    }\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertOperator(ast, retArr) {\r\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\r\n    if (bitwiseResult) {\r\n      return bitwiseResult;\r\n    }\r\n    const upconvertableOperators = {\r\n      '%': 'mod',\r\n      '**': 'pow',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    switch (this.getType(ast.left)) {\r\n      case 'Integer':\r\n        this.castValueToFloat(ast.left, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToFloat(ast.left, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.left, retArr);\r\n    }\r\n    retArr.push(',');\r\n    switch (this.getType(ast.right)) {\r\n      case 'Integer':\r\n        this.castValueToFloat(ast.right, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToFloat(ast.right, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.right, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\r\n    const upconvertableOperators = {\r\n      '&': 'bitwiseAnd',\r\n      '|': 'bitwiseOr',\r\n      '^': 'bitwiseXOR',\r\n      '<<': 'bitwiseZeroFillLeftShift',\r\n      '>>': 'bitwiseSignedRightShift',\r\n      '>>>': 'bitwiseZeroFillRightShift',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    const leftType = this.getType(ast.left);\r\n    switch (leftType) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.left, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.left, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.left, retArr);\r\n    }\r\n    retArr.push(',');\r\n    const rightType = this.getType(ast.right);\r\n    switch (rightType) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.right, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.right, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.right, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\r\n    const upconvertableOperators = {\r\n      '~': 'bitwiseNot',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    switch (this.getType(ast.argument)) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.argument, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.argument, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.argument, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castLiteralToInteger(ast, retArr) {\r\n    this.pushState('casting-to-integer');\r\n    this.astGeneric(ast, retArr);\r\n    this.popState('casting-to-integer');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castLiteralToFloat(ast, retArr) {\r\n    this.pushState('casting-to-float');\r\n    this.astGeneric(ast, retArr);\r\n    this.popState('casting-to-float');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castValueToInteger(ast, retArr) {\r\n    this.pushState('casting-to-integer');\r\n    retArr.push('int(');\r\n    this.astGeneric(ast, retArr);\r\n    retArr.push(')');\r\n    this.popState('casting-to-integer');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castValueToFloat(ast, retArr) {\r\n    this.pushState('casting-to-float');\r\n    retArr.push('float(');\r\n    this.astGeneric(ast, retArr);\r\n    retArr.push(')');\r\n    this.popState('casting-to-float');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\r\n    }\r\n\r\n    const type = this.getType(idtNode);\r\n\r\n    if (idtNode.name === 'Infinity') {\r\n      // https://stackoverflow.com/a/47543127/1324039\r\n      retArr.push('3.402823466e+38');\r\n    } else if (type === 'Boolean') {\r\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\r\n        retArr.push(`bool(user_${idtNode.name})`);\r\n      } else {\r\n        retArr.push(`user_${idtNode.name}`);\r\n      }\r\n    } else {\r\n      retArr.push(`user_${idtNode.name}`);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *for-loop* expression\r\n   * @param {Object} forNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astForStatement(forNode, retArr) {\r\n    if (forNode.type !== 'ForStatement') {\r\n      throw this.astErrorOutput('Invalid for statement', forNode);\r\n    }\r\n\r\n    const initArr = [];\r\n    const testArr = [];\r\n    const updateArr = [];\r\n    const bodyArr = [];\r\n    let isSafe = null;\r\n\r\n    if (forNode.init) {\r\n      this.pushState('in-for-loop-init');\r\n      this.astGeneric(forNode.init, initArr);\r\n      const { declarations } = forNode.init;\r\n      for (let i = 0; i < declarations.length; i++) {\r\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\r\n          isSafe = false;\r\n        }\r\n      }\r\n      if (isSafe) {\r\n        for (let i = 0; i < initArr.length; i++) {\r\n          if (initArr[i].includes && initArr[i].includes(',')) {\r\n            isSafe = false;\r\n          }\r\n        }\r\n      }\r\n      this.popState('in-for-loop-init');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.test) {\r\n      this.pushState('in-for-loop-test');\r\n      this.astGeneric(forNode.test, testArr);\r\n      this.popState('in-for-loop-test');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.update) {\r\n      this.astGeneric(forNode.update, updateArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.body) {\r\n      this.pushState('loop-body');\r\n      this.astGeneric(forNode.body, bodyArr);\r\n      this.popState('loop-body');\r\n    }\r\n\r\n    // have all parts, now make them safe\r\n    if (isSafe === null) {\r\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\r\n    }\r\n\r\n    if (isSafe) {\r\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push('}\\n');\r\n    } else {\r\n      const iVariableName = this.getInternalVariableName('safeI');\r\n      if (initArr.length > 0) {\r\n        retArr.push(initArr.join(''), ';\\n');\r\n      }\r\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n      if (testArr.length > 0) {\r\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\r\n      }\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push(`\\n${updateArr.join('')};`);\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *while* loop\r\n   * @param {Object} whileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astWhileStatement(whileNode, retArr) {\r\n    if (whileNode.type !== 'WhileStatement') {\r\n      throw this.astErrorOutput('Invalid while statement', whileNode);\r\n    }\r\n\r\n    const iVariableName = this.getInternalVariableName('safeI');\r\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n    retArr.push('if (!');\r\n    this.astGeneric(whileNode.test, retArr);\r\n    retArr.push(') break;\\n');\r\n    this.astGeneric(whileNode.body, retArr);\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *do while* loop\r\n   * @param {Object} doWhileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astDoWhileStatement(doWhileNode, retArr) {\r\n    if (doWhileNode.type !== 'DoWhileStatement') {\r\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\r\n    }\r\n\r\n    const iVariableName = this.getInternalVariableName('safeI');\r\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n    this.astGeneric(doWhileNode.body, retArr);\r\n    retArr.push('if (!');\r\n    this.astGeneric(doWhileNode.test, retArr);\r\n    retArr.push(') break;\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\r\n   * @param {Object} assNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astAssignmentExpression(assNode, retArr) {\r\n    // TODO: casting needs implemented here\r\n    if (assNode.operator === '%=') {\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push('=');\r\n      retArr.push('mod(');\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(',');\r\n      this.astGeneric(assNode.right, retArr);\r\n      retArr.push(')');\r\n    } else if (assNode.operator === '**=') {\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push('=');\r\n      retArr.push('pow(');\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(',');\r\n      this.astGeneric(assNode.right, retArr);\r\n      retArr.push(')');\r\n    } else {\r\n      const leftType = this.getType(assNode.left);\r\n      const rightType = this.getType(assNode.right);\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(assNode.operator);\r\n      if (leftType !== 'Integer' && rightType === 'Integer') {\r\n        retArr.push('float(');\r\n        this.astGeneric(assNode.right, retArr);\r\n        retArr.push(')');\r\n      } else {\r\n        this.astGeneric(assNode.right, retArr);\r\n      }\r\n      return retArr;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Block* statement\r\n   * @param {Object} bNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBlockStatement(bNode, retArr) {\r\n    if (this.isState('loop-body')) {\r\n      this.pushState('block-body'); // this prevents recursive removal of braces\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      this.popState('block-body');\r\n    } else {\r\n      retArr.push('{\\n');\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\r\n      this.varWarn();\r\n    }\r\n    const declarations = varDecNode.declarations;\r\n    if (!declarations || !declarations[0] || !declarations[0].init) {\r\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\r\n    }\r\n    const result = [];\r\n    let lastType = null;\r\n    const inForLoopInit = this.isState('in-for-loop-init');\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      const init = declaration.init;\r\n      const info = this.getDeclaration(declaration.id);\r\n      const valueType = info.valueType;\r\n      const actualType = this.getType(declaration.init);\r\n      let dependencies = info.dependencies;\r\n      let type = inForLoopInit ? 'Integer' : actualType;\r\n      if (type === 'LiteralInteger') {\r\n        // We had the choice to go either float or int, choosing float\r\n        type = 'Number';\r\n      }\r\n      const markupType = typeMap[type];\r\n      if (!markupType) {\r\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\r\n      }\r\n      const declarationResult = [];\r\n      if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\r\n        // Since we are assigning to a float, ensure valueType is reset to that\r\n        info.valueType = 'Number';\r\n        if (i === 0 || lastType === null) {\r\n          declarationResult.push('float ');\r\n        } else if (type !== lastType) {\r\n          throw new Error('Unhandled declaration');\r\n        } else {\r\n          declarationResult.push(',');\r\n        }\r\n        lastType = type;\r\n        declarationResult.push(`user_${declaration.id.name}=`);\r\n        declarationResult.push('float(');\r\n        this.astGeneric(init, declarationResult);\r\n        declarationResult.push(')');\r\n      } else {\r\n        // Since we are assigning to a float, ensure valueType is reset to that\r\n        info.valueType = type;\r\n        if (i === 0 || lastType === null) {\r\n          declarationResult.push(`${markupType} `);\r\n        } else if (type !== lastType) {\r\n          result.push(';');\r\n          declarationResult.push(`${markupType} `);\r\n        } else {\r\n          declarationResult.push(',');\r\n        }\r\n        lastType = type;\r\n        declarationResult.push(`user_${declaration.id.name}=`);\r\n        if (actualType === 'Number' && type === 'Integer') {\r\n          if (init.left && init.left.type === 'Literal') {\r\n            this.astGeneric(init, declarationResult);\r\n          } else {\r\n            declarationResult.push('int(');\r\n            this.astGeneric(init, declarationResult);\r\n            declarationResult.push(')');\r\n          }\r\n        } else {\r\n          this.astGeneric(init, declarationResult);\r\n        }\r\n      }\r\n      result.push(declarationResult.join(''));\r\n    }\r\n\r\n    retArr.push(result.join(''));\r\n    if (!inForLoopInit) {\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *If* Statement\r\n   * @param {Object} ifNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIfStatement(ifNode, retArr) {\r\n    retArr.push('if (');\r\n    this.astGeneric(ifNode.test, retArr);\r\n    retArr.push(')');\r\n    if (ifNode.consequent.type === 'BlockStatement') {\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n    } else {\r\n      retArr.push(' {\\n');\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n      retArr.push('\\n}\\n');\r\n    }\r\n\r\n    if (ifNode.alternate) {\r\n      retArr.push('else ');\r\n      if (ifNode.alternate.type === 'BlockStatement') {\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n      } else {\r\n        retArr.push(' {\\n');\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n        retArr.push('\\n}\\n');\r\n      }\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  astSwitchStatement(ast, retArr) {\r\n    if (ast.type !== 'SwitchStatement') {\r\n      throw this.astErrorOutput('Invalid switch statement', ast);\r\n    }\r\n    const { discriminant, cases } = ast;\r\n    const type = this.getType(discriminant);\r\n    const varName = `switchDiscriminant${ast.start}_${ast.end}`;\r\n    switch (type) {\r\n      case 'Float':\r\n      case 'Number':\r\n        retArr.push(`float ${varName} = `);\r\n        this.astGeneric(discriminant, retArr);\r\n        retArr.push(';\\n');\r\n        break;\r\n      case 'Integer':\r\n        retArr.push(`int ${varName} = `);\r\n        this.astGeneric(discriminant, retArr);\r\n        retArr.push(';\\n');\r\n        break;\r\n    }\r\n    // switch with just a default:\r\n    if (cases.length === 1 && !cases[0].test) {\r\n      this.astGeneric(cases[0].consequent, retArr);\r\n      return retArr;\r\n    }\r\n\r\n    // regular switches:\r\n    let fallingThrough = false;\r\n    let defaultResult = [];\r\n    let movingDefaultToEnd = false;\r\n    let pastFirstIf = false;\r\n    for (let i = 0; i < cases.length; i++) {\r\n      // default\r\n      if (!cases[i].test) {\r\n        if (cases.length > i + 1) {\r\n          movingDefaultToEnd = true;\r\n          this.astGeneric(cases[i].consequent, defaultResult);\r\n          continue;\r\n        } else {\r\n          retArr.push(' else {\\n');\r\n        }\r\n      } else {\r\n        // all others\r\n        if (i === 0 || !pastFirstIf) {\r\n          pastFirstIf = true;\r\n          retArr.push(`if (${varName} == `);\r\n        } else {\r\n          if (fallingThrough) {\r\n            retArr.push(`${varName} == `);\r\n            fallingThrough = false;\r\n          } else {\r\n            retArr.push(` else if (${varName} == `);\r\n          }\r\n        }\r\n        if (type === 'Integer') {\r\n          const testType = this.getType(cases[i].test);\r\n          switch (testType) {\r\n            case 'Number':\r\n            case 'Float':\r\n              this.castValueToInteger(cases[i].test, retArr);\r\n              break;\r\n            case 'LiteralInteger':\r\n              this.castLiteralToInteger(cases[i].test, retArr);\r\n              break;\r\n          }\r\n        } else if (type === 'Float') {\r\n          const testType = this.getType(cases[i].test);\r\n          switch (testType) {\r\n            case 'LiteralInteger':\r\n              this.castLiteralToFloat(cases[i].test, retArr);\r\n              break;\r\n            case 'Integer':\r\n              this.castValueToFloat(cases[i].test, retArr);\r\n              break;\r\n          }\r\n        } else {\r\n          throw new Error('unhanlded');\r\n        }\r\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\r\n          fallingThrough = true;\r\n          retArr.push(' || ');\r\n          continue;\r\n        }\r\n        retArr.push(`) {\\n`);\r\n      }\r\n      this.astGeneric(cases[i].consequent, retArr);\r\n      retArr.push('\\n}');\r\n    }\r\n    if (movingDefaultToEnd) {\r\n      retArr.push(' else {');\r\n      retArr.push(defaultResult.join(''));\r\n      retArr.push('}');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *This* expression\r\n   * @param {Object} tNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astThisExpression(tNode, retArr) {\r\n    retArr.push('this');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Member* Expression\r\n   * @param {Object} mNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astMemberExpression(mNode, retArr) {\r\n    const {\r\n      property,\r\n      name,\r\n      signature,\r\n      origin,\r\n      type,\r\n      xProperty,\r\n      yProperty,\r\n      zProperty\r\n    } = this.getMemberExpressionDetails(mNode);\r\n    switch (signature) {\r\n      case 'value.thread.value':\r\n      case 'this.thread.value':\r\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\r\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\r\n        }\r\n        retArr.push(`threadId.${name}`);\r\n        return retArr;\r\n      case 'this.output.value':\r\n        if (this.dynamicOutput) {\r\n          switch (name) {\r\n            case 'x':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.x)');\r\n              } else {\r\n                retArr.push('uOutputDim.x');\r\n              }\r\n              break;\r\n            case 'y':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.y)');\r\n              } else {\r\n                retArr.push('uOutputDim.y');\r\n              }\r\n              break;\r\n            case 'z':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.z)');\r\n              } else {\r\n                retArr.push('uOutputDim.z');\r\n              }\r\n              break;\r\n            default:\r\n              throw this.astErrorOutput('Unexpected expression', mNode);\r\n          }\r\n        } else {\r\n          switch (name) {\r\n            case 'x':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[0]);\r\n              } else {\r\n                retArr.push(this.output[0], '.0');\r\n              }\r\n              break;\r\n            case 'y':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[1]);\r\n              } else {\r\n                retArr.push(this.output[1], '.0');\r\n              }\r\n              break;\r\n            case 'z':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[2]);\r\n              } else {\r\n                retArr.push(this.output[2], '.0');\r\n              }\r\n              break;\r\n            default:\r\n              throw this.astErrorOutput('Unexpected expression', mNode);\r\n          }\r\n        }\r\n        return retArr;\r\n      case 'value':\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n      case 'value[]':\r\n      case 'value[][]':\r\n      case 'value[][][]':\r\n      case 'value[][][][]':\r\n      case 'value.value':\r\n        if (origin === 'Math') {\r\n          retArr.push(Math[name]);\r\n          return retArr;\r\n        }\r\n        switch (property) {\r\n          case 'r':\r\n            retArr.push(`user_${ name }.r`);\r\n            return retArr;\r\n          case 'g':\r\n            retArr.push(`user_${ name }.g`);\r\n            return retArr;\r\n          case 'b':\r\n            retArr.push(`user_${ name }.b`);\r\n            return retArr;\r\n          case 'a':\r\n            retArr.push(`user_${ name }.a`);\r\n            return retArr;\r\n        }\r\n        break;\r\n      case 'this.constants.value':\r\n        if (typeof xProperty === 'undefined') {\r\n          switch (type) {\r\n            case 'Array(2)':\r\n            case 'Array(3)':\r\n            case 'Array(4)':\r\n              retArr.push(`constants_${ name }`);\r\n              return retArr;\r\n          }\r\n        }\r\n        case 'this.constants.value[]':\r\n        case 'this.constants.value[][]':\r\n        case 'this.constants.value[][][]':\r\n        case 'this.constants.value[][][][]':\r\n          break;\r\n        case 'fn()[]':\r\n          this.astCallExpression(mNode.object, retArr);\r\n          retArr.push('[');\r\n          retArr.push(this.memberExpressionPropertyMarkup(property));\r\n          retArr.push(']');\r\n          return retArr;\r\n        case '[][]':\r\n          this.astArrayExpression(mNode.object, retArr);\r\n          retArr.push('[');\r\n          retArr.push(this.memberExpressionPropertyMarkup(property));\r\n          retArr.push(']');\r\n          return retArr;\r\n        default:\r\n          throw this.astErrorOutput('Unexpected expression', mNode);\r\n    }\r\n\r\n    if (mNode.computed === false) {\r\n      // handle simple types\r\n      switch (type) {\r\n        case 'Number':\r\n        case 'Integer':\r\n        case 'Float':\r\n        case 'Boolean':\r\n          retArr.push(`${origin}_${name}`);\r\n          return retArr;\r\n      }\r\n    }\r\n\r\n    // handle more complex types\r\n    // argument may have come from a parent\r\n    const markupName = `${origin}_${name}`;\r\n\r\n    switch (type) {\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        // Get from local vec4\r\n        this.astGeneric(mNode.object, retArr);\r\n        retArr.push('[');\r\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\r\n        retArr.push(']');\r\n        break;\r\n      case 'HTMLImageArray':\r\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(1)':\r\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(2)':\r\n      case 'Array2D(2)':\r\n      case 'Array3D(2)':\r\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(2)':\r\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(3)':\r\n      case 'Array2D(3)':\r\n      case 'Array3D(3)':\r\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(3)':\r\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(4)':\r\n      case 'Array2D(4)':\r\n      case 'Array3D(4)':\r\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(4)':\r\n      case 'HTMLImage':\r\n      case 'HTMLVideo':\r\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'NumberTexture':\r\n      case 'Array':\r\n      case 'Array2D':\r\n      case 'Array3D':\r\n      case 'Array4D':\r\n      case 'Input':\r\n      case 'Number':\r\n      case 'Float':\r\n      case 'Integer':\r\n        if (this.precision === 'single') {\r\n          // bitRatio is always 4 here, javascript doesn't yet have 8 or 16 bit support\r\n          // TODO: make 8 or 16 bit work anyway!\r\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n          retArr.push(')');\r\n        } else {\r\n          const bitRatio = (origin === 'user' ?\r\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\r\n            this.constantBitRatios[name]\r\n          );\r\n          switch (bitRatio) {\r\n            case 1:\r\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            case 2:\r\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            case 4:\r\n            case 0:\r\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            default:\r\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\r\n          }\r\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n          retArr.push(')');\r\n        }\r\n        break;\r\n      case 'MemoryOptimizedNumberTexture':\r\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled member expression \"${ type }\"`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *call* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns  {Array} the append retArr\r\n   */\r\n  astCallExpression(ast, retArr) {\r\n    if (!ast.callee) {\r\n      throw this.astErrorOutput('Unknown CallExpression', ast);\r\n    }\r\n\r\n    let functionName = null;\r\n    const isMathFunction = this.isAstMathFunction(ast);\r\n\r\n    // Its a math operator or this.something(), remove the prefix\r\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\r\n      functionName = ast.callee.property.name;\r\n    }\r\n    // Issue #212, BABEL!\r\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\r\n      functionName = ast.callee.expressions[1].property.name;\r\n    } else {\r\n      functionName = ast.callee.name;\r\n    }\r\n\r\n    if (!functionName) {\r\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\r\n    }\r\n\r\n    // if this if grows to more than one, lets use a switch\r\n    if (functionName === 'atan2') {\r\n      functionName = 'atan';\r\n    }\r\n\r\n    // Register the function into the called registry\r\n    if (this.calledFunctions.indexOf(functionName) < 0) {\r\n      this.calledFunctions.push(functionName);\r\n    }\r\n\r\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\r\n          retArr.push(plugin.functionReplace);\r\n          return retArr;\r\n        }\r\n      }\r\n    }\r\n\r\n    // track the function was called\r\n    if (this.onFunctionCall) {\r\n      this.onFunctionCall(this.name, functionName, ast.arguments);\r\n    }\r\n\r\n    // Call the function\r\n    retArr.push(functionName);\r\n\r\n    // Open arguments space\r\n    retArr.push('(');\r\n\r\n    // Add the arguments\r\n    if (isMathFunction) {\r\n      for (let i = 0; i < ast.arguments.length; ++i) {\r\n        const argument = ast.arguments[i];\r\n        const argumentType = this.getType(argument);\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n\r\n        switch (argumentType) {\r\n          case 'Integer':\r\n            this.castValueToFloat(argument, retArr);\r\n            break;\r\n          default:\r\n            this.astGeneric(argument, retArr);\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\r\n      for (let i = 0; i < ast.arguments.length; ++i) {\r\n        const argument = ast.arguments[i];\r\n        let targetType = targetTypes[i];\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        const argumentType = this.getType(argument);\r\n        if (!targetType) {\r\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\r\n          targetType = argumentType;\r\n        }\r\n        switch (argumentType) {\r\n          case 'Number':\r\n          case 'Float':\r\n            if (targetType === 'Integer') {\r\n              retArr.push('int(');\r\n              this.astGeneric(argument, retArr);\r\n              retArr.push(')');\r\n              continue;\r\n            } else if (targetType === 'Number' || targetType === 'Float') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'LiteralInteger') {\r\n              this.castLiteralToFloat(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'Integer':\r\n            if (targetType === 'Number' || targetType === 'Float') {\r\n              retArr.push('float(');\r\n              this.astGeneric(argument, retArr);\r\n              retArr.push(')');\r\n              continue;\r\n            } else if (targetType === 'Integer') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'LiteralInteger':\r\n            if (targetType === 'Integer') {\r\n              this.castLiteralToInteger(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'Number' || targetType === 'Float') {\r\n              this.castLiteralToFloat(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'LiteralInteger') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            if (targetType === argumentType) {\r\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\r\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\r\n              retArr.push(`user_${argument.name}`);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'HTMLImage':\r\n          case 'HTMLImageArray':\r\n          case 'HTMLVideo':\r\n          case 'ArrayTexture(1)':\r\n          case 'ArrayTexture(2)':\r\n          case 'ArrayTexture(3)':\r\n          case 'ArrayTexture(4)':\r\n          case 'Array':\r\n          case 'Input':\r\n            if (targetType === argumentType) {\r\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\r\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\r\n              retArr.push(`user_${argument.name},user_${argument.name}Size,user_${argument.name}Dim`);\r\n              continue;\r\n            }\r\n            break;\r\n        }\r\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\r\n      }\r\n    }\r\n    // Close arguments space\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Array* Expression\r\n   * @param {Object} arrNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astArrayExpression(arrNode, retArr) {\r\n    const arrLen = arrNode.elements.length;\r\n\r\n    retArr.push('vec' + arrLen + '(');\r\n    for (let i = 0; i < arrLen; ++i) {\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      const subNode = arrNode.elements[i];\r\n      this.astGeneric(subNode, retArr)\r\n    }\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  memberExpressionXYZ(x, y, z, retArr) {\r\n    if (z) {\r\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\r\n    } else {\r\n      retArr.push('0, ');\r\n    }\r\n    if (y) {\r\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\r\n    } else {\r\n      retArr.push('0, ');\r\n    }\r\n    retArr.push(this.memberExpressionPropertyMarkup(x));\r\n    return retArr;\r\n  }\r\n\r\n  memberExpressionPropertyMarkup(property) {\r\n    if (!property) {\r\n      throw new Error('Property not set');\r\n    }\r\n    const type = this.getType(property);\r\n    const result = [];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(property, result);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(property, result);\r\n        break;\r\n      default:\r\n        this.astGeneric(property, result);\r\n    }\r\n    return result.join('');\r\n  }\r\n}\r\n\r\nconst typeMap = {\r\n  'Array': 'sampler2D',\r\n  'Array(2)': 'vec2',\r\n  'Array(3)': 'vec3',\r\n  'Array(4)': 'vec4',\r\n  'Array2D': 'sampler2D',\r\n  'Array3D': 'sampler2D',\r\n  'Boolean': 'bool',\r\n  'Float': 'float',\r\n  'Input': 'sampler2D',\r\n  'Integer': 'int',\r\n  'Number': 'float',\r\n  'LiteralInteger': 'float',\r\n  'NumberTexture': 'sampler2D',\r\n  'MemoryOptimizedNumberTexture': 'sampler2D',\r\n  'ArrayTexture(1)': 'sampler2D',\r\n  'ArrayTexture(2)': 'sampler2D',\r\n  'ArrayTexture(3)': 'sampler2D',\r\n  'ArrayTexture(4)': 'sampler2D',\r\n  'HTMLVideo': 'sampler2D',\r\n  'HTMLImage': 'sampler2D',\r\n  'HTMLImageArray': 'sampler2DArray',\r\n};\r\n\r\nconst operatorMap = {\r\n  '===': '==',\r\n  '!==': '!='\r\n};\r\n","const source = `\r\n\r\nuniform highp float triangle_noise_seed;\r\nhighp float triangle_noise_shift = 0.000001;\r\n\r\n//https://www.shadertoy.com/view/4t2SDh\r\n//note: uniformly distributed, normalized rand, [0;1[\r\nfloat nrand( vec2 n )\r\n{\r\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\r\n}\r\n//note: remaps v to [0;1] in interval [a;b]\r\nfloat remap( float a, float b, float v )\r\n{\r\n  return clamp( (v-a) / (b-a), 0.0, 1.0 );\r\n}\r\n\r\nfloat n4rand( vec2 n )\r\n{\r\n  float t = fract( triangle_noise_seed + triangle_noise_shift );\r\n  float nrnd0 = nrand( n + 0.07*t );\r\n  float nrnd1 = nrand( n + 0.11*t );\r\n  float nrnd2 = nrand( n + 0.13*t );\r\n  float nrnd3 = nrand( n + 0.17*t );\r\n  float result = (nrnd0+nrnd1+nrnd2+nrnd3) / 4.0;\r\n  triangle_noise_shift = result + 0.000001;\r\n  return result;\r\n}`;\r\n\r\nconst name = 'triangle-noise-noise';\r\n\r\nconst functionMatch = 'Math.random()';\r\n\r\nconst functionReplace = 'n4rand(vTexCoord)';\r\n\r\nconst functionReturnType = 'Number';\r\n\r\nconst onBeforeRun = (kernel) => {\r\n  kernel.setUniform1f('triangle_noise_seed', Math.random());\r\n};\r\n\r\n/**\r\n * @type IPlugin\r\n */\r\nexport default {\r\n  name,\r\n  onBeforeRun,\r\n  functionMatch,\r\n  functionReplace,\r\n  functionReturnType,\r\n  source\r\n};\r\n","// language=GLSL\r\nexport const fragmentShader = `__HEADER__;\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nconst int LOOP_MAX = __LOOP_MAX__;\r\n\r\n__PLUGINS__;\r\n__CONSTANTS__;\r\n\r\nvarying vec2 vTexCoord;\r\n\r\nvec4 round(vec4 x) {\r\n  return floor(x + 0.5);\r\n}\r\n\r\nfloat round(float x) {\r\n  return floor(x + 0.5);\r\n}\r\n\r\nconst int BIT_COUNT = 32;\r\nint modi(int x, int y) {\r\n  return x - y * (x / y);\r\n}\r\n\r\nint bitwiseOr(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseXOR(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseAnd(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 && b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseNot(int a) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (modi(a, 2) == 0) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    n = n * 2;\r\n  }\r\n  return result;\r\n}\r\nint bitwiseZeroFillLeftShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n *= 2;\r\n  }\r\n\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nint bitwiseSignedRightShift(int num, int shifts) {\r\n  return int(floor(float(num) / pow(2.0, float(shifts))));\r\n}\r\n\r\nint bitwiseZeroFillRightShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n /= 2;\r\n  }\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nvec2 integerMod(vec2 x, float y) {\r\n  vec2 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec3 integerMod(vec3 x, float y) {\r\n  vec3 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec4 integerMod(vec4 x, vec4 y) {\r\n  vec4 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nfloat integerMod(float x, float y) {\r\n  float res = floor(mod(x, y));\r\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\r\n}\r\n\r\nint integerMod(int x, int y) {\r\n  return x - (y * int(x / y));\r\n}\r\n\r\n__DIVIDE_WITH_INTEGER_CHECK__;\r\n\r\n// Here be dragons!\r\n// DO NOT OPTIMIZE THIS CODE\r\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\r\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\r\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\r\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\r\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\r\nfloat decode32(vec4 texel) {\r\n  __DECODE32_ENDIANNESS__;\r\n  texel *= 255.0;\r\n  vec2 gte128;\r\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\r\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\r\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\r\n  float res = exp2(round(exponent));\r\n  texel.b = texel.b - 128.0 * gte128.x;\r\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\r\n  res *= gte128.y * -2.0 + 1.0;\r\n  return res;\r\n}\r\n\r\nfloat decode16(vec4 texel, int index) {\r\n  int channel = integerMod(index, 2);\r\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\r\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\r\n  return 0.0;\r\n}\r\n\r\nfloat decode8(vec4 texel, int index) {\r\n  int channel = integerMod(index, 4);\r\n  if (channel == 0) return texel.r * 255.0;\r\n  if (channel == 1) return texel.g * 255.0;\r\n  if (channel == 2) return texel.b * 255.0;\r\n  if (channel == 3) return texel.a * 255.0;\r\n  return 0.0;\r\n}\r\n\r\nvec4 legacyEncode32(float f) {\r\n  float F = abs(f);\r\n  float sign = f < 0.0 ? 1.0 : 0.0;\r\n  float exponent = floor(log2(F));\r\n  float mantissa = (exp2(-exponent) * F);\r\n  // exponent += floor(log2(mantissa));\r\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\r\n  texel.rg = integerMod(texel.rg, 256.0);\r\n  texel.b = integerMod(texel.b, 128.0);\r\n  texel.a = exponent*0.5 + 63.5;\r\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\r\n  texel = floor(texel);\r\n  texel *= 0.003921569; // 1/255\r\n  __ENCODE32_ENDIANNESS__;\r\n  return texel;\r\n}\r\n\r\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\r\nvec4 encode32(float value) {\r\n  if (value == 0.0) return vec4(0, 0, 0, 0);\r\n\r\n  float exponent;\r\n  float mantissa;\r\n  vec4  result;\r\n  float sgn;\r\n\r\n  sgn = step(0.0, -value);\r\n  value = abs(value);\r\n\r\n  exponent = floor(log2(value));\r\n\r\n  mantissa = value*pow(2.0, -exponent)-1.0;\r\n  exponent = exponent+127.0;\r\n  result   = vec4(0,0,0,0);\r\n\r\n  result.a = floor(exponent/2.0);\r\n  exponent = exponent - result.a*2.0;\r\n  result.a = result.a + 128.0*sgn;\r\n\r\n  result.b = floor(mantissa * 128.0);\r\n  mantissa = mantissa - result.b / 128.0;\r\n  result.b = result.b + exponent*128.0;\r\n\r\n  result.g = floor(mantissa*32768.0);\r\n  mantissa = mantissa - result.g/32768.0;\r\n\r\n  result.r = floor(mantissa*8388608.0);\r\n  return result/255.0;\r\n}\r\n// Dragons end here\r\n\r\nint index;\r\nivec3 threadId;\r\n\r\nivec3 indexTo3D(int idx, ivec3 texDim) {\r\n  int z = int(idx / (texDim.x * texDim.y));\r\n  idx -= z * int(texDim.x * texDim.y);\r\n  int y = int(idx / texDim.x);\r\n  int x = int(integerMod(idx, texDim.x));\r\n  return ivec3(x, y, z);\r\n}\r\n\r\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  return decode32(texel);\r\n}\r\n\r\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x * 2;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\r\n  return decode16(texel, index);\r\n}\r\n\r\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x * 4;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\r\n  return decode8(texel, index);\r\n}\r\n\r\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 4);\r\n  index = index / 4;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  if (channel == 0) return texel.r;\r\n  if (channel == 1) return texel.g;\r\n  if (channel == 2) return texel.b;\r\n  if (channel == 3) return texel.a;\r\n  return 0.0;\r\n}\r\n\r\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture2D(tex, st / vec2(texSize));\r\n}\r\n\r\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return result[0];\r\n}\r\n\r\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec2(result[0], result[1]);\r\n}\r\n\r\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int channel = integerMod(index, 2);\r\n  index = index / 2;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  if (channel == 0) return vec2(texel.r, texel.g);\r\n  if (channel == 1) return vec2(texel.b, texel.a);\r\n  return vec2(0.0, 0.0);\r\n}\r\n\r\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec3(result[0], result[1], result[2]);\r\n}\r\n\r\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\r\n  int vectorIndex = fieldIndex / 4;\r\n  int vectorOffset = fieldIndex - vectorIndex * 4;\r\n  int readY = vectorIndex / texSize.x;\r\n  int readX = vectorIndex - readY * texSize.x;\r\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\r\n\r\n  if (vectorOffset == 0) {\r\n    return tex1.xyz;\r\n  } else if (vectorOffset == 1) {\r\n    return tex1.yzw;\r\n  } else {\r\n    readX++;\r\n    if (readX >= texSize.x) {\r\n      readX = 0;\r\n      readY++;\r\n    }\r\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\r\n    if (vectorOffset == 2) {\r\n      return vec3(tex1.z, tex1.w, tex2.x);\r\n    } else {\r\n      return vec3(tex1.w, tex2.x, tex2.y);\r\n    }\r\n  }\r\n}\r\n\r\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  return getImage2D(tex, texSize, texDim, z, y, x);\r\n}\r\n\r\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  return vec4(texel.r, texel.g, texel.b, texel.a);\r\n}\r\n\r\nvec4 actualColor;\r\nvoid color(float r, float g, float b, float a) {\r\n  actualColor = vec4(r,g,b,a);\r\n}\r\n\r\nvoid color(float r, float g, float b) {\r\n  color(r,g,b,1.0);\r\n}\r\n\r\nvoid color(sampler2D image) {\r\n  actualColor = texture2D(image, vTexCoord);\r\n}\r\n\r\n__INJECTED_NATIVE__;\r\n__MAIN_CONSTANTS__;\r\n__MAIN_ARGUMENTS__;\r\n__KERNEL__;\r\n\r\nvoid main(void) {\r\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\r\n  __MAIN_RESULT__;\r\n}`;\r\n","// language=GLSL\r\nexport const vertexShader = `__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nattribute vec2 aPos;\r\nattribute vec2 aTexCoord;\r\n\r\nvarying vec2 vTexCoord;\r\nuniform vec2 ratio;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\r\n  vTexCoord = aTexCoord;\r\n}`;\r\n","/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {IGLWiretapOptions} [options]\n * @returns {GLWiretapProxy}\n */\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { // need arguments from this, fyi\n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); // flush out errors\n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\n/**\n *\n * @param extension\n * @param {IGLExtensionWiretapOptions} options\n * @returns {*}\n */\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  // wrapped in object, so track-able\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n","import { glWiretap } from 'gl-wiretap';\r\nimport { utils } from '../../utils';\r\n\r\nfunction toStringWithoutUtils(fn) {\r\n  return fn.toString()\r\n    .replace('=>', '')\r\n    .replace(/^function /, '')\r\n    .replace(/utils[.]/g, '/*utils.*/');\r\n}\r\n\r\n/**\r\n *\r\n * @param {Kernel} Kernel\r\n * @param {KernelVariable[]} args\r\n * @param {Kernel} originKernel\r\n * @param {string} [setupContextString]\r\n * @param {string} [destroyContextString]\r\n * @returns {string}\r\n */\r\nexport function glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\r\n  args = args ? Array.from(args).map(arg => {\r\n    switch (typeof arg) {\r\n      case 'boolean':\r\n        return new Boolean(arg);\r\n      case 'number':\r\n        return new Number(arg);\r\n      default:\r\n        return arg;\r\n    }\r\n  }) : null;\r\n  const uploadedValues = [];\r\n  const postResult = [];\r\n  const context = glWiretap(originKernel.context, {\r\n    useTrackablePrimitives: true,\r\n    onReadPixels: (targetName) => {\r\n      if (kernel.subKernels) {\r\n        if (!subKernelsResultVariableSetup) {\r\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\r\n          subKernelsResultVariableSetup = true;\r\n        } else {\r\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\r\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\r\n        }\r\n        if (subKernelsResultIndex === kernel.subKernels.length) {\r\n          postResult.push('    return result;');\r\n        }\r\n        return;\r\n      }\r\n      if (targetName) {\r\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\r\n      } else {\r\n        postResult.push(`    return null;`);\r\n      }\r\n    },\r\n    onUnrecognizedArgumentLookup: (argument) => {\r\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\r\n      if (argumentName) {\r\n        return argumentName;\r\n      }\r\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\r\n      if (constantName) {\r\n        return constantName;\r\n      }\r\n      return null;\r\n    }\r\n  });\r\n  let subKernelsResultVariableSetup = false;\r\n  let subKernelsResultIndex = 0;\r\n  const {\r\n    source,\r\n    canvas,\r\n    output,\r\n    pipeline,\r\n    graphical,\r\n    loopMaxIterations,\r\n    constants,\r\n    optimizeFloatMemory,\r\n    precision,\r\n    fixIntegerDivisionAccuracy,\r\n    functions,\r\n    nativeFunctions,\r\n    subKernels,\r\n    immutable,\r\n    argumentTypes,\r\n    constantTypes,\r\n    kernelArguments,\r\n    kernelConstants,\r\n  } = originKernel;\r\n  const kernel = new Kernel(source, {\r\n    canvas,\r\n    context,\r\n    checkContext: false,\r\n    output,\r\n    pipeline,\r\n    graphical,\r\n    loopMaxIterations,\r\n    constants,\r\n    optimizeFloatMemory,\r\n    precision,\r\n    fixIntegerDivisionAccuracy,\r\n    functions,\r\n    nativeFunctions,\r\n    subKernels,\r\n    immutable,\r\n    argumentTypes,\r\n    constantTypes,\r\n  });\r\n  let result = [];\r\n  context.setIndent(2);\r\n  kernel.build.apply(kernel, args);\r\n  result.push(context.toString());\r\n  context.reset();\r\n\r\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\r\n    switch (kernelArgument.type) {\r\n      // primitives\r\n      case 'Integer':\r\n      case 'Boolean':\r\n      case 'Number':\r\n      case 'Float':\r\n        // non-primitives\r\n      case 'Array':\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n      case 'HTMLImage':\r\n      case 'HTMLVideo':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\r\n        break;\r\n      case 'HTMLImageArray':\r\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\r\n          const arg = args[i];\r\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\r\n        }\r\n        break;\r\n      case 'Input':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\r\n        break;\r\n      case 'MemoryOptimizedNumberTexture':\r\n      case 'NumberTexture':\r\n      case 'Array1D(2)':\r\n      case 'Array1D(3)':\r\n      case 'Array1D(4)':\r\n      case 'Array2D(2)':\r\n      case 'Array2D(3)':\r\n      case 'Array2D(4)':\r\n      case 'Array3D(2)':\r\n      case 'Array3D(3)':\r\n      case 'Array3D(4)':\r\n      case 'ArrayTexture(1)':\r\n      case 'ArrayTexture(2)':\r\n      case 'ArrayTexture(3)':\r\n      case 'ArrayTexture(4)':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\r\n    }\r\n  });\r\n  result.push('/** start of injected functions **/');\r\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\r\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\r\n    result.push(\r\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\r\n    );\r\n  }\r\n  result.push('/** end of injected functions **/');\r\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\r\n  context.setIndent(4);\r\n  kernel.run.apply(kernel, args);\r\n  if (kernel.renderKernels) {\r\n    kernel.renderKernels();\r\n  } else if (kernel.renderOutput) {\r\n    kernel.renderOutput();\r\n  }\r\n  result.push('    /** start setup uploads for kernel values **/');\r\n  kernel.kernelArguments.forEach(kernelArgument => {\r\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\r\n  });\r\n  result.push('    /** end setup uploads for kernel values **/');\r\n  result.push(context.toString());\r\n  if (kernel.renderOutput === kernel.renderTexture) {\r\n    context.reset();\r\n    const results = kernel.renderKernels();\r\n    const textureName = context.getContextVariableName(kernel.outputTexture);\r\n    result.push(`    return {\r\n      result: {\r\n        texture: ${ textureName },\r\n        type: '${ results.result.type }',\r\n        toArray: ${ getToArrayString(results.result, textureName) }\r\n      },`);\r\n    const { subKernels, subKernelOutputTextures } = kernel;\r\n    for (let i = 0; i < subKernels.length; i++) {\r\n      const texture = subKernelOutputTextures[i];\r\n      const subKernel = subKernels[i];\r\n      const subKernelResult = results[subKernel.property];\r\n      const subKernelTextureName = context.getContextVariableName(texture);\r\n      result.push(`\r\n      ${subKernel.property}: {\r\n        texture: ${ subKernelTextureName },\r\n        type: '${ subKernelResult.type }',\r\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\r\n      },`);\r\n    }\r\n    result.push(`    };`);\r\n  }\r\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\r\n  result.push(postResult.join('\\n'));\r\n  result.push('  };');\r\n  if (kernel.graphical) {\r\n    result.push(getGetPixelsString(kernel));\r\n    result.push(`  innerKernel.getPixels = getPixels;`);\r\n  }\r\n  result.push('  return innerKernel;');\r\n\r\n  let constantsUpload = [];\r\n  kernelConstants.forEach((kernelConstant) => {\r\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\r\n  });\r\n  return `function kernel(settings) {\r\n  const { context, constants } = settings;\r\n  ${constantsUpload.join('')}\r\n  ${setupContextString ? setupContextString : ''}\r\n${result.join('\\n')}\r\n}`;\r\n}\r\n\r\nfunction getRenderString(targetName, kernel) {\r\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\r\n  if (kernel.output[2]) {\r\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\r\n  }\r\n  if (kernel.output[1]) {\r\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\r\n  }\r\n\r\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\r\n}\r\n\r\nfunction getGetPixelsString(kernel) {\r\n  const getPixels = kernel.getPixels.toString();\r\n  const useFunctionKeyword = !/^function/.test(getPixels);\r\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\r\n    findDependency: (object, name) => {\r\n      if (object === 'utils') {\r\n        return `const ${name} = ${utils[name].toString()};`;\r\n      }\r\n      return null;\r\n    },\r\n    thisLookup: (property) => {\r\n      if (property === 'context') {\r\n        return null;\r\n      }\r\n      if (kernel.hasOwnProperty(property)) {\r\n        return JSON.stringify(kernel[property]);\r\n      }\r\n      throw new Error(`unhandled thisLookup ${ property }`);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getToArrayString(kernelResult, textureName) {\r\n  const toArray = kernelResult.toArray.toString();\r\n  const useFunctionKeyword = !/^function/.test(toArray);\r\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\r\n    findDependency: (object, name) => {\r\n      if (object === 'utils') {\r\n        return `const ${name} = ${utils[name].toString()};`;\r\n      } else if (object === 'this') {\r\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\r\n      } else {\r\n        throw new Error('unhandled fromObject');\r\n      }\r\n    },\r\n    thisLookup: (property) => {\r\n      if (property === 'texture') {\r\n        return textureName;\r\n      }\r\n      if (kernelResult.hasOwnProperty(property)) {\r\n        return JSON.stringify(kernelResult[property]);\r\n      }\r\n      throw new Error(`unhandled thisLookup ${ property }`);\r\n    }\r\n  });\r\n  return `() => {\r\n  ${flattenedFunctions}\r\n  return toArray();\r\n  }`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {KernelVariable} argument\r\n * @param {KernelValue[]} kernelValues\r\n * @param {KernelVariable[]} values\r\n * @param context\r\n * @param {KernelVariable[]} uploadedValues\r\n * @return {string|null}\r\n */\r\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\r\n  if (argument === null) return null;\r\n  switch (typeof argument) {\r\n    case 'boolean':\r\n    case 'number':\r\n      return null;\r\n  }\r\n  if (\r\n    typeof HTMLImageElement !== 'undefined' &&\r\n    argument instanceof HTMLImageElement\r\n  ) {\r\n    for (let i = 0; i < kernelValues.length; i++) {\r\n      const kernelValue = kernelValues[i];\r\n      if (kernelValue.type !== 'HTMLImageArray') continue;\r\n      if (kernelValue.uploadValue !== argument) continue;\r\n      // TODO: if we send two of the same image, the parser could get confused, and short circuit to the first, handle that here\r\n      const variableIndex = values[i].indexOf(argument);\r\n      if (variableIndex === -1) continue;\r\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\r\n      context.insertVariable(variableName, argument);\r\n      return variableName;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  for (let i = 0; i < kernelValues.length; i++) {\r\n    const kernelValue = kernelValues[i];\r\n    if (argument !== kernelValue.uploadValue) continue;\r\n    const variable = `uploadValue_${kernelValue.name}`;\r\n    context.insertVariable(variable, kernelValue);\r\n    return variable;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * @class KernelValue\r\n */\r\nexport class KernelValue {\r\n  /**\r\n   *\r\n   * @param {KernelVariable} value\r\n   * @param {IKernelValueSettings} settings\r\n   */\r\n  constructor(value, settings) {\r\n    const {\r\n      name,\r\n      kernel,\r\n      context,\r\n      checkContext,\r\n      onRequestContextHandle,\r\n      onUpdateValueMismatch,\r\n      origin,\r\n      strictIntegers,\r\n      type,\r\n      tactic,\r\n    } = settings;\r\n    if (!name) {\r\n      throw new Error('name not set');\r\n    }\r\n    if (!type) {\r\n      throw new Error('type not set');\r\n    }\r\n    if (!origin) {\r\n      throw new Error('origin not set');\r\n    }\r\n    if (!tactic) {\r\n      throw new Error('tactic not set');\r\n    }\r\n    if (origin !== 'user' && origin !== 'constants') {\r\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\r\n    }\r\n    if (!onRequestContextHandle) {\r\n      throw new Error('onRequestContextHandle is not set');\r\n    }\r\n    this.name = name;\r\n    this.origin = origin;\r\n    this.tactic = tactic;\r\n    this.id = `${this.origin}_${name}`;\r\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\r\n    this.kernel = kernel;\r\n    this.strictIntegers = strictIntegers;\r\n    // handle textures\r\n    this.type = value.type || type;\r\n    this.size = value.size || null;\r\n    this.index = null;\r\n    this.context = context;\r\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\r\n    this.contextHandle = null;\r\n    this.onRequestContextHandle = onRequestContextHandle;\r\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\r\n    this.forceUploadEachRun = null;\r\n  }\r\n\r\n  getSource() {\r\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  updateValue(value) {\r\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\r\n  }\r\n}\r\n","import { Input } from '../../../input';\r\nimport { KernelValue } from '../../kernel-value';\r\nimport { utils } from '../../../utils';\r\n\r\nexport class WebGLKernelValue extends KernelValue {\r\n  /**\r\n   * @param {KernelVariable} value\r\n   * @param {IWebGLKernelValueSettings} settings\r\n   */\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.dimensionsId = null;\r\n    this.sizeId = null;\r\n    this.initialValueConstructor = value.constructor;\r\n    this.onRequestTexture = settings.onRequestTexture;\r\n    this.onRequestIndex = settings.onRequestIndex;\r\n    this.uploadValue = null;\r\n    this.textureSize = null;\r\n    this.bitRatio = null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  checkSize(width, height) {\r\n    if (!this.kernel.validate) return;\r\n    const { maxTextureSize } = this.kernel.constructor.features;\r\n    if (width > maxTextureSize || height > maxTextureSize) {\r\n      if (width > height) {\r\n        throw new Error(`Argument width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\r\n      } else {\r\n        throw new Error(`Argument height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\r\n      }\r\n    }\r\n  }\r\n\r\n  requestTexture() {\r\n    this.texture = this.onRequestTexture();\r\n    this.setupTexture();\r\n  }\r\n\r\n  setupTexture() {\r\n    this.contextHandle = this.onRequestContextHandle();\r\n    this.index = this.onRequestIndex();\r\n    this.dimensionsId = this.id + 'Dim';\r\n    this.sizeId = this.id + 'Size';\r\n  }\r\n\r\n  getTransferArrayType(value) {\r\n    if (Array.isArray(value[0])) {\r\n      return this.getTransferArrayType(value[0]);\r\n    }\r\n    switch (value.constructor) {\r\n      case Array:\r\n      case Int32Array:\r\n      case Int16Array:\r\n      case Int8Array:\r\n        return Float32Array;\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Uint16Array:\r\n      case Uint32Array:\r\n      case Float32Array:\r\n      case Float64Array:\r\n        return value.constructor;\r\n    }\r\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\r\n    return value.constructor;\r\n  }\r\n  /**\r\n   * @desc Adds kernel parameters to the Value Texture,\r\n   * binding it to the context, etc.\r\n   *\r\n   * @param {Array|Float32Array|Uint16Array} value - The actual Value supplied to the kernel\r\n   * @param {Number} length - the expected total length of the output array\r\n   * @param {Object} [Type]\r\n   * @returns {Float32Array|Uint16Array|Uint8Array} flattened array to transfer\r\n   */\r\n  formatArrayTransfer(value, length, Type) {\r\n    if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\r\n      // not already flat\r\n      const valuesFlat = new Float32Array(length);\r\n      utils.flattenTo(value, valuesFlat);\r\n      return valuesFlat;\r\n    } else {\r\n      switch (value.constructor) {\r\n        case Uint8ClampedArray:\r\n        case Uint8Array:\r\n        case Int8Array:\r\n        case Uint16Array:\r\n        case Int16Array:\r\n        case Float32Array:\r\n        case Int32Array: {\r\n          const valuesFlat = new(Type || value.constructor)(length);\r\n          utils.flattenTo(value, valuesFlat);\r\n          return valuesFlat;\r\n        }\r\n        default: {\r\n          const valuesFlat = new Float32Array(length);\r\n          utils.flattenTo(value, valuesFlat);\r\n          return valuesFlat;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\r\n   * @param value\r\n   * @returns {number}\r\n   */\r\n  getBitRatio(value) {\r\n    if (Array.isArray(value[0])) {\r\n      return this.getBitRatio(value[0]);\r\n    } else if (value.constructor === Input) {\r\n      return this.getBitRatio(value.value);\r\n    }\r\n    switch (value.constructor) {\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Int8Array:\r\n        return 1;\r\n      case Uint16Array:\r\n      case Int16Array:\r\n        return 2;\r\n      case Float32Array:\r\n      case Int32Array:\r\n      default:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Used for when we want a string output of our kernel, so we can still input values to the kernel\r\n   */\r\n  getStringValueHandler() {\r\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\r\n  }\r\n\r\n  getVariablePrecisionString() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'lowp';\r\n      case 'performance':\r\n        return 'highp';\r\n      case 'balanced':\r\n      default:\r\n        return 'mediump';\r\n    }\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueBoolean extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const bool ${this.id} = ${value};\\n`;\r\n    }\r\n    return `uniform bool ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueFloat extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      if (Number.isInteger(value)) {\r\n        return `const float ${this.id} = ${value}.0;\\n`;\r\n      }\r\n      return `const float ${this.id} = ${value};\\n`;\r\n    }\r\n    return `uniform float ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueInteger extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\r\n    }\r\n    return `uniform int ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueHTMLImage extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const { width, height } = value;\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, 1];\r\n    this.requestTexture();\r\n    this.textureSize = [width, height];\r\n    this.uploadValue = value;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputImage) {\r\n    if (inputImage.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    const { width, height } = value;\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, 1];\r\n    this.textureSize = [width, height];\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\r\n","import { WebGLKernelValueDynamicHTMLImage } from './dynamic-html-image';\r\n\r\nexport class WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleInput extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    if (input.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueUnsignedInput extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = this.getBitRatio(value);\r\n    const [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    this.TranserArrayType = this.getTransferArrayType(value.value);\r\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\r\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\r\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    if (input.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.preUploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedInput } from './unsigned-input';\r\n\r\nexport class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    const Type = this.getTransferArrayType(value.value);\r\n    this.preUploadValue = new Type(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const [width, height] = value.size;\r\n    this.checkSize(width, height);\r\n    this.setupTexture();\r\n    this.dimensions = value.dimensions;\r\n    this.textureSize = value.size;\r\n    this.uploadValue = value.texture;\r\n    this.forceUploadEachRun = true;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    if (inputTexture.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    if (this.checkContext && inputTexture.context !== this.context) {\r\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from './memory-optimized-number-texture';\r\n\r\nexport class WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\r\n    this.dimensions = inputTexture.dimensions;\r\n    this.textureSize = inputTexture.size;\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(inputTexture);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueNumberTexture extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const [width, height] = value.size;\r\n    this.checkSize(width, height);\r\n    this.setupTexture();\r\n    const { size: textureSize, dimensions } = value;\r\n    this.bitRatio = this.getBitRatio(value);\r\n    this.dimensions = dimensions;\r\n    this.textureSize = textureSize;\r\n    this.uploadValue = value.texture;\r\n    this.forceUploadEachRun = true;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    if (inputTexture.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    if (this.checkContext && inputTexture.context !== this.context) {\r\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueNumberTexture } from './number-texture';\r\n\r\nexport class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = value.dimensions;\r\n    this.checkSize(value.size[0], value.size[1]);\r\n    this.textureSize = value.size;\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray1DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten2dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray1DI } from './single-array1d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray2DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten3dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray2DI } from './single-array2d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray3DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten4dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray3DI } from './single-array3d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray2 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\r\n    }\r\n    return `uniform vec2 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(2)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray3 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\r\n    }\r\n    return `uniform vec3 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(3)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray4 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\r\n    }\r\n    return `uniform vec4 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(4)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueUnsignedArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = this.getBitRatio(value);\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    this.TranserArrayType = this.getTransferArrayType(value);\r\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\r\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\r\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.preUploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedArray } from './unsigned-array';\r\n\r\nexport class WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    const Type = this.getTransferArrayType(value);\r\n    this.preUploadValue = new Type(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueBoolean } from './kernel-value/boolean';\r\nimport { WebGLKernelValueFloat } from './kernel-value/float';\r\nimport { WebGLKernelValueInteger } from './kernel-value/integer';\r\n\r\nimport { WebGLKernelValueHTMLImage } from './kernel-value/html-image';\r\nimport { WebGLKernelValueDynamicHTMLImage } from './kernel-value/dynamic-html-image';\r\n\r\nimport { WebGLKernelValueHTMLVideo } from './kernel-value/html-video';\r\nimport { WebGLKernelValueDynamicHTMLVideo } from './kernel-value/dynamic-html-video';\r\n\r\nimport { WebGLKernelValueSingleInput } from './kernel-value/single-input';\r\nimport { WebGLKernelValueDynamicSingleInput } from './kernel-value/dynamic-single-input';\r\n\r\nimport { WebGLKernelValueUnsignedInput } from './kernel-value/unsigned-input';\r\nimport { WebGLKernelValueDynamicUnsignedInput } from './kernel-value/dynamic-unsigned-input';\r\n\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from './kernel-value/memory-optimized-number-texture';\r\nimport { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } from './kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nimport { WebGLKernelValueNumberTexture } from './kernel-value/number-texture';\r\nimport { WebGLKernelValueDynamicNumberTexture } from './kernel-value/dynamic-number-texture';\r\n\r\nimport { WebGLKernelValueSingleArray } from './kernel-value/single-array';\r\nimport { WebGLKernelValueDynamicSingleArray } from './kernel-value/dynamic-single-array';\r\n\r\nimport { WebGLKernelValueSingleArray1DI } from './kernel-value/single-array1d-i';\r\nimport { WebGLKernelValueDynamicSingleArray1DI } from './kernel-value/dynamic-single-array1d-i';\r\n\r\nimport { WebGLKernelValueSingleArray2DI } from './kernel-value/single-array2d-i';\r\nimport { WebGLKernelValueDynamicSingleArray2DI } from './kernel-value/dynamic-single-array2d-i';\r\n\r\nimport { WebGLKernelValueSingleArray3DI } from './kernel-value/single-array3d-i';\r\nimport { WebGLKernelValueDynamicSingleArray3DI } from './kernel-value/dynamic-single-array3d-i';\r\n\r\nimport { WebGLKernelValueSingleArray2 } from './kernel-value/single-array2';\r\nimport { WebGLKernelValueSingleArray3 } from './kernel-value/single-array3';\r\nimport { WebGLKernelValueSingleArray4 } from './kernel-value/single-array4';\r\n\r\nimport { WebGLKernelValueUnsignedArray } from './kernel-value/unsigned-array';\r\nimport { WebGLKernelValueDynamicUnsignedArray } from './kernel-value/dynamic-unsigned-array';\r\n\r\nexport const kernelValueMaps = {\r\n  unsigned: {\r\n    dynamic: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Array': WebGLKernelValueDynamicUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGLKernelValueDynamicUnsignedInput,\r\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Array': WebGLKernelValueUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGLKernelValueUnsignedInput,\r\n      'NumberTexture': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\r\n    }\r\n  },\r\n  single: {\r\n    dynamic: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Array': WebGLKernelValueDynamicSingleArray,\r\n      'Array(2)': WebGLKernelValueSingleArray2,\r\n      'Array(3)': WebGLKernelValueSingleArray3,\r\n      'Array(4)': WebGLKernelValueSingleArray4,\r\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Input': WebGLKernelValueDynamicSingleInput,\r\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Array': WebGLKernelValueSingleArray,\r\n      'Array(2)': WebGLKernelValueSingleArray2,\r\n      'Array(3)': WebGLKernelValueSingleArray3,\r\n      'Array(4)': WebGLKernelValueSingleArray4,\r\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\r\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\r\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\r\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\r\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\r\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\r\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\r\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\r\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\r\n      'Input': WebGLKernelValueSingleInput,\r\n      'NumberTexture': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\r\n    }\r\n  },\r\n};\r\n\r\nexport function lookupKernelValueType(type, dynamic, precision, value) {\r\n  if (!type) {\r\n    throw new Error('type missing');\r\n  }\r\n  if (!dynamic) {\r\n    throw new Error('dynamic missing');\r\n  }\r\n  if (!precision) {\r\n    throw new Error('precision missing');\r\n  }\r\n  if (value.type) {\r\n    type = value.type;\r\n  }\r\n  const types = kernelValueMaps[precision][dynamic];\r\n  if (types[type] === false) {\r\n    return null;\r\n  } else if (types[type] === undefined) {\r\n    throw new Error(`Could not find a KernelValue for ${ type }`);\r\n  }\r\n  return types[type];\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray } from './single-array';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleInput } from './single-input';\r\n\r\nexport class WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { GLKernel } from '../gl/kernel';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { WebGLFunctionNode } from './function-node';\r\nimport { utils } from '../../utils';\r\nimport triangleNoise from '../../plugins/triangle-noise';\r\nimport { fragmentShader } from './fragment-shader';\r\nimport { vertexShader } from './vertex-shader';\r\nimport { glKernelString } from '../gl/kernel-string';\r\nimport { lookupKernelValueType } from './kernel-value-maps';\r\n\r\nlet isSupported = null;\r\nlet testCanvas = null;\r\nlet testContext = null;\r\nlet testExtensions = null;\r\nlet features = null;\r\n\r\nconst plugins = [triangleNoise];\r\nconst canvases = [];\r\nconst maxTexSizes = {};\r\n\r\n/**\r\n * @desc Kernel Implementation for WebGL.\r\n *\r\n * This builds the shaders and runs them on the GPU, then outputs the result\r\n * back as float (enabled by default) and Texture.\r\n *\r\n * @prop {Object} textureCache - webGl Texture cache\r\n * @prop {Object} programUniformLocationCache - Location of program variables in memory\r\n * @prop {Object} framebuffer - Webgl frameBuffer\r\n * @prop {Object} buffer - WebGL buffer\r\n * @prop {Object} program - The webGl Program\r\n * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\r\n * @prop {Boolean} pipeline - Set output type to FAST mode (GPU to GPU via Textures), instead of float\r\n * @prop {String} endianness - Endian information like Little-endian, Big-endian.\r\n * @prop {Array} argumentTypes - Types of parameters sent to the Kernel\r\n * @prop {String} compiledFragmentShader - Compiled fragment shader string\r\n * @prop {String} compiledVertexShader - Compiled Vertical shader string\r\n * @extends GLKernel\r\n */\r\nexport class WebGLKernel extends GLKernel {\r\n  static get isSupported() {\r\n    if (isSupported !== null) {\r\n      return isSupported;\r\n    }\r\n    this.setupFeatureChecks();\r\n    isSupported = this.isContextMatch(testContext);\r\n    return isSupported;\r\n  }\r\n\r\n  static setupFeatureChecks() {\r\n    if (typeof document !== 'undefined') {\r\n      testCanvas = document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      testCanvas = new OffscreenCanvas(0, 0);\r\n    }\r\n    if (!testCanvas) return;\r\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\r\n    if (!testContext || !testContext.getExtension) return;\r\n    testExtensions = {\r\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\r\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\r\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\r\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\r\n    };\r\n    features = this.getFeatures();\r\n  }\r\n\r\n  static isContextMatch(context) {\r\n    if (typeof WebGLRenderingContext !== 'undefined') {\r\n      return context instanceof WebGLRenderingContext;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getFeatures() {\r\n    const isDrawBuffers = this.getIsDrawBuffers();\r\n    return Object.freeze({\r\n      isFloatRead: this.getIsFloatRead(),\r\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\r\n      isTextureFloat: this.getIsTextureFloat(),\r\n      isDrawBuffers,\r\n      kernelMap: isDrawBuffers,\r\n      channelCount: this.getChannelCount(),\r\n    });\r\n  }\r\n\r\n  static getIsTextureFloat() {\r\n    return Boolean(testExtensions.OES_texture_float);\r\n  }\r\n\r\n  static getIsDrawBuffers() {\r\n    return Boolean(testExtensions.WEBGL_draw_buffers);\r\n  }\r\n\r\n  static getChannelCount() {\r\n    return testExtensions.WEBGL_draw_buffers ?\r\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\r\n      1;\r\n  }\r\n\r\n  static lookupKernelValueType(type, dynamic, precision, value) {\r\n    return lookupKernelValueType(type, dynamic, precision, value);\r\n  }\r\n\r\n  static get testCanvas() {\r\n    return testCanvas;\r\n  }\r\n\r\n  static get testContext() {\r\n    return testContext;\r\n  }\r\n\r\n  static get features() {\r\n    return features;\r\n  }\r\n\r\n  static get fragmentShader() {\r\n    return fragmentShader;\r\n  }\r\n\r\n  static get vertexShader() {\r\n    return vertexShader;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} source\r\n   * @param {IKernelSettings} settings\r\n   */\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.program = null;\r\n    this.pipeline = settings.pipeline;\r\n    this.endianness = utils.systemEndianness();\r\n    this.extensions = {};\r\n    this.subKernelOutputTextures = null;\r\n    this.kernelArguments = null;\r\n    this.argumentTextureCount = 0;\r\n    this.constantTextureCount = 0;\r\n    this.compiledFragmentShader = null;\r\n    this.compiledVertexShader = null;\r\n    this.fragShader = null;\r\n    this.vertShader = null;\r\n    this.drawBuffersMap = null;\r\n    this.outputTexture = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Int32Array|null}\r\n     */\r\n    this.maxTexSize = null;\r\n    this.switchingKernels = false;\r\n    this.onRequestSwitchKernel = null;\r\n\r\n    this.mergeSettings(source.settings || settings);\r\n\r\n    /**\r\n     * The thread dimensions, x, y and z\r\n     * @type {Array|null}\r\n     */\r\n    this.threadDim = null;\r\n    this.framebuffer = null;\r\n    this.buffer = null;\r\n    this.textureCache = {};\r\n    this.programUniformLocationCache = {};\r\n    this.uniform1fCache = {};\r\n    this.uniform1iCache = {};\r\n    this.uniform2fCache = {};\r\n    this.uniform2fvCache = {};\r\n    this.uniform2ivCache = {};\r\n    this.uniform3fvCache = {};\r\n    this.uniform3ivCache = {};\r\n    this.uniform4fvCache = {};\r\n    this.uniform4ivCache = {};\r\n  }\r\n\r\n  initCanvas() {\r\n    if (typeof document !== 'undefined') {\r\n      const canvas = document.createElement('canvas');\r\n      // Default width and height, to fix webgl issue in safari\r\n      canvas.width = 2;\r\n      canvas.height = 2;\r\n      return canvas;\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      return new OffscreenCanvas(0, 0);\r\n    }\r\n  }\r\n\r\n  initContext() {\r\n    const settings = {\r\n      alpha: false,\r\n      depth: false,\r\n      antialias: false\r\n    };\r\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\r\n  }\r\n\r\n  initPlugins(settings) {\r\n    // default plugins\r\n    const pluginsToUse = [];\r\n    const { source } = this;\r\n    if (typeof source === 'string') {\r\n      for (let i = 0; i < plugins.length; i++) {\r\n        const plugin = plugins[i];\r\n        if (source.match(plugin.functionMatch)) {\r\n          pluginsToUse.push(plugin);\r\n        }\r\n      }\r\n    } else if (typeof source === 'object') {\r\n      // `source` is from object, json\r\n      if (settings.pluginNames) { //TODO: in context of JSON support, pluginNames may not exist here\r\n        for (let i = 0; i < plugins.length; i++) {\r\n          const plugin = plugins[i];\r\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\r\n          if (usePlugin) {\r\n            pluginsToUse.push(plugin);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return pluginsToUse;\r\n  }\r\n\r\n  initExtensions() {\r\n    this.extensions = {\r\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\r\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\r\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\r\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\r\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.validate) {\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      return;\r\n    }\r\n\r\n    const { features } = this.constructor;\r\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\r\n      throw new Error('Float textures are not supported');\r\n    } else if (this.precision === 'single' && !features.isFloatRead) {\r\n      throw new Error('Single precision not supported');\r\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\r\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\r\n      throw new Error('could not instantiate draw buffers extension');\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy === null) {\r\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\r\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\r\n      this.fixIntegerDivisionAccuracy = false;\r\n    }\r\n\r\n    this.checkOutput();\r\n\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      if (argType === 'Array') {\r\n        this.output = utils.getDimensions(argType);\r\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\r\n        this.output = args[0].output;\r\n      } else {\r\n        throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n\r\n      if (this.precision === 'precision') {\r\n        this.precision = 'unsigned';\r\n        console.warn('Cannot use graphical mode and single precision at the same time');\r\n      }\r\n\r\n      this.texSize = utils.clone(this.output);\r\n      return;\r\n    } else if (this.precision === null && features.isTextureFloat) {\r\n      this.precision = 'single';\r\n    }\r\n\r\n    this.texSize = utils.getKernelTextureSize({\r\n      optimizeFloatMemory: this.optimizeFloatMemory,\r\n      precision: this.precision,\r\n    }, this.output);\r\n\r\n    this.checkTextureSize();\r\n  }\r\n\r\n  updateMaxTexSize() {\r\n    const { texSize, canvas } = this;\r\n    if (this.maxTexSize === null) {\r\n      let canvasIndex = canvases.indexOf(canvas);\r\n      if (canvasIndex === -1) {\r\n        canvasIndex = canvases.length;\r\n        canvases.push(canvas);\r\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\r\n      }\r\n      this.maxTexSize = maxTexSizes[canvasIndex];\r\n    }\r\n    if (this.maxTexSize[0] < texSize[0]) {\r\n      this.maxTexSize[0] = texSize[0];\r\n    }\r\n    if (this.maxTexSize[1] < texSize[1]) {\r\n      this.maxTexSize[1] = texSize[1];\r\n    }\r\n  }\r\n\r\n  // TODO: move channel checks to new place\r\n  _oldtranslateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n\r\n    // need this line to automatically get returnType\r\n    const translatedSource = functionBuilder.getPrototypeString('kernel');\r\n\r\n    if (!this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    let requiredChannels = 0;\r\n    const returnTypes = functionBuilder.getReturnTypes();\r\n    for (let i = 0; i < returnTypes.length; i++) {\r\n      switch (returnTypes[i]) {\r\n        case 'Float':\r\n        case 'Number':\r\n        case 'Integer':\r\n          requiredChannels++;\r\n          break;\r\n        case 'Array(2)':\r\n          requiredChannels += 2;\r\n          break;\r\n        case 'Array(3)':\r\n          requiredChannels += 3;\r\n          break;\r\n        case 'Array(4)':\r\n          requiredChannels += 4;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (features && requiredChannels > features.channelCount) {\r\n      throw new Error('Too many channels!');\r\n    }\r\n\r\n    return this.translatedSource = translatedSource;\r\n  }\r\n\r\n  setupArguments(args) {\r\n    this.kernelArguments = [];\r\n    this.argumentTextureCount = 0;\r\n    const needsArgumentTypes = this.argumentTypes === null;\r\n    // TODO: remove\r\n    if (needsArgumentTypes) {\r\n      this.argumentTypes = [];\r\n    }\r\n    this.argumentSizes = [];\r\n    this.argumentBitRatios = [];\r\n    // TODO: end remove\r\n\r\n    if (args.length < this.argumentNames.length) {\r\n      throw new Error('not enough arguments for kernel');\r\n    } else if (args.length > this.argumentNames.length) {\r\n      throw new Error('too many arguments for kernel');\r\n    }\r\n\r\n    const { context: gl } = this;\r\n    let textureIndexes = 0;\r\n    for (let index = 0; index < args.length; index++) {\r\n      const value = args[index];\r\n      const name = this.argumentNames[index];\r\n      let type;\r\n      if (needsArgumentTypes) {\r\n        type = utils.getVariableType(value, this.strictIntegers);\r\n        this.argumentTypes.push(type);\r\n      } else {\r\n        type = this.argumentTypes[index];\r\n      }\r\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\r\n      if (KernelValue === null) {\r\n        return this.requestFallback(args);\r\n      }\r\n      const kernelArgument = new KernelValue(value, {\r\n        name,\r\n        type,\r\n        tactic: this.tactic,\r\n        origin: 'user',\r\n        context: gl,\r\n        checkContext: this.checkContext,\r\n        kernel: this,\r\n        strictIntegers: this.strictIntegers,\r\n        onRequestTexture: () => {\r\n          return this.context.createTexture();\r\n        },\r\n        onRequestIndex: () => {\r\n          return textureIndexes++;\r\n        },\r\n        onUpdateValueMismatch: () => {\r\n          this.switchingKernels = true;\r\n        },\r\n        onRequestContextHandle: () => {\r\n          return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\r\n        }\r\n      });\r\n      this.kernelArguments.push(kernelArgument);\r\n      this.argumentSizes.push(kernelArgument.textureSize);\r\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\r\n    }\r\n  }\r\n\r\n  setupConstants(args) {\r\n    const { context: gl } = this;\r\n    this.kernelConstants = [];\r\n    this.forceUploadKernelConstants = [];\r\n    let needsConstantTypes = this.constantTypes === null;\r\n    if (needsConstantTypes) {\r\n      this.constantTypes = {};\r\n    }\r\n    this.constantBitRatios = {};\r\n    let textureIndexes = 0;\r\n    for (const name in this.constants) {\r\n      const value = this.constants[name];\r\n      let type;\r\n      if (needsConstantTypes) {\r\n        type = utils.getVariableType(value, this.strictIntegers);\r\n        this.constantTypes[name] = type;\r\n      } else {\r\n        type = this.constantTypes[name];\r\n      }\r\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\r\n      if (KernelValue === null) {\r\n        return this.requestFallback(args);\r\n      }\r\n      const kernelValue = new KernelValue(value, {\r\n        name,\r\n        type,\r\n        tactic: this.tactic,\r\n        origin: 'constants',\r\n        context: this.context,\r\n        checkContext: this.checkContext,\r\n        kernel: this,\r\n        strictIntegers: this.strictIntegers,\r\n        onRequestTexture: () => {\r\n          return this.context.createTexture();\r\n        },\r\n        onRequestIndex: () => {\r\n          return textureIndexes++;\r\n        },\r\n        onRequestContextHandle: () => {\r\n          return gl.TEXTURE0 + this.constantTextureCount++;\r\n        }\r\n      });\r\n      this.constantBitRatios[name] = kernelValue.bitRatio;\r\n      this.kernelConstants.push(kernelValue);\r\n      if (kernelValue.forceUploadEachRun) {\r\n        this.forceUploadKernelConstants.push(kernelValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  build() {\r\n    this.initExtensions();\r\n    this.validateSettings(arguments);\r\n    this.setupConstants(arguments);\r\n    if (this.fallbackRequested) return;\r\n    this.setupArguments(arguments);\r\n    if (this.fallbackRequested) return;\r\n    this.updateMaxTexSize();\r\n    this.translateSource();\r\n    const failureResult = this.pickRenderStrategy(arguments);\r\n    if (failureResult) {\r\n      return failureResult;\r\n    }\r\n    const { texSize, context: gl, canvas } = this;\r\n    gl.enable(gl.SCISSOR_TEST);\r\n    if (this.pipeline && this.precision === 'single') {\r\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      canvas.width = this.maxTexSize[0];\r\n      canvas.height = this.maxTexSize[1];\r\n    } else {\r\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      canvas.width = this.maxTexSize[0];\r\n      canvas.height = this.maxTexSize[1];\r\n    }\r\n    const threadDim = this.threadDim = Array.from(this.output);\r\n    while (threadDim.length < 3) {\r\n      threadDim.push(1);\r\n    }\r\n\r\n    const compiledVertexShader = this.getVertexShader(arguments);\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertShader, compiledVertexShader);\r\n    gl.compileShader(vertShader);\r\n    this.vertShader = vertShader;\r\n\r\n    const compiledFragmentShader = this.getFragmentShader(arguments);\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragShader, compiledFragmentShader);\r\n    gl.compileShader(fragShader);\r\n    this.fragShader = fragShader;\r\n\r\n    if (this.debug) {\r\n      console.log('GLSL Shader Output:');\r\n      console.log(compiledFragmentShader);\r\n    }\r\n\r\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\r\n    }\r\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\r\n    }\r\n\r\n    const program = this.program = gl.createProgram();\r\n    gl.attachShader(program, vertShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    this.framebuffer = gl.createFramebuffer();\r\n    this.framebuffer.width = texSize[0];\r\n    this.framebuffer.height = texSize[1];\r\n\r\n    const vertices = new Float32Array([-1, -1,\r\n      1, -1, -1, 1,\r\n      1, 1\r\n    ]);\r\n    const texCoords = new Float32Array([\r\n      0, 0,\r\n      1, 0,\r\n      0, 1,\r\n      1, 1\r\n    ]);\r\n\r\n    const texCoordOffset = vertices.byteLength;\r\n\r\n    let buffer = this.buffer;\r\n    if (!buffer) {\r\n      buffer = this.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\r\n    } else {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    }\r\n\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\r\n\r\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\r\n    gl.enableVertexAttribArray(aPosLoc);\r\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\r\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\r\n    gl.enableVertexAttribArray(aTexCoordLoc);\r\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n\r\n    let i = 0;\r\n    gl.useProgram(this.program);\r\n    for (let p in this.constants) {\r\n      this.kernelConstants[i++].updateValue(this.constants[p]);\r\n    }\r\n\r\n    if (!this.immutable) {\r\n      this._setupOutputTexture();\r\n      if (\r\n        this.subKernels !== null &&\r\n        this.subKernels.length > 0\r\n      ) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n    }\r\n  }\r\n\r\n  translateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0) {\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const subKernel = this.subKernels[i];\r\n        if (!subKernel.returnType) {\r\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  run() {\r\n    const { kernelArguments, forceUploadKernelConstants } = this;\r\n    const texSize = this.texSize;\r\n    const gl = this.context;\r\n\r\n    gl.useProgram(this.program);\r\n    gl.scissor(0, 0, texSize[0], texSize[1]);\r\n\r\n    if (this.dynamicOutput) {\r\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\r\n      this.setUniform2iv('uTexSize', texSize);\r\n    }\r\n\r\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\r\n\r\n    this.switchingKernels = false;\r\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\r\n      const constant = forceUploadKernelConstants[i];\r\n      constant.updateValue(this.constants[constant.name]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      kernelArguments[i].updateValue(arguments[i]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n\r\n    if (this.plugins) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.onBeforeRun) {\r\n          plugin.onBeforeRun(this);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.pipeline) {\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        if (!this.outputTexture || this.immutable) {\r\n          this._setupOutputTexture();\r\n        }\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        return new this.TextureConstructor({\r\n          texture: this.outputTexture,\r\n          size: texSize,\r\n          dimensions: this.threadDim,\r\n          output: this.output,\r\n          context: this.context,\r\n        });\r\n      }\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n      return;\r\n    }\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    if (this.immutable) {\r\n      this._setupOutputTexture();\r\n    }\r\n\r\n    if (this.subKernels !== null) {\r\n      if (this.immutable) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n      this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\r\n    }\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  }\r\n\r\n  /**\r\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\r\n   * @returns {Object} Output Texture Cache\r\n   */\r\n  getOutputTexture() {\r\n    return this.outputTexture;\r\n  }\r\n\r\n  /**\r\n   * @desc Setup and replace output texture\r\n   */\r\n  _setupOutputTexture() {\r\n    const gl = this.context;\r\n    const texSize = this.texSize;\r\n    const texture = this.outputTexture = this.context.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    // if (this.precision === 'single') {\r\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n    // } else {\r\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    // }\r\n    if (this.precision === 'single') {\r\n      if (this.pipeline) {\r\n        // TODO: investigate if webgl1 can handle gl.RED usage in gl.texImage2D, otherwise, simplify the below\r\n        switch (this.returnType) {\r\n          case 'Number':\r\n          case 'Float':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            } else {\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          case 'Array(3)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          case 'Array(4)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          default:\r\n            if (!this.graphical) {\r\n              throw new Error('Unhandled return type');\r\n            }\r\n        }\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      }\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n  }\r\n\r\n  /**\r\n   * @desc Setup and replace sub-output textures\r\n   */\r\n  _setupSubOutputTextures() {\r\n    const gl = this.context;\r\n    const texSize = this.texSize;\r\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\r\n    this.subKernelOutputTextures = [];\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const texture = this.context.createTexture();\r\n      this.subKernelOutputTextures.push(texture);\r\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\r\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      if (this.precision === 'single') {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n      }\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\r\n   * @param {String} name - Name of the subkernel, argument, or kernel.\r\n   * @returns {Object} Texture cache\r\n   */\r\n  getTextureCache(name) {\r\n    if (this.textureCache.hasOwnProperty(name)) {\r\n      return this.textureCache[name];\r\n    }\r\n    return this.textureCache[name] = this.context.createTexture();\r\n  }\r\n\r\n  /**\r\n   * @desc removes a texture from the kernel's cache\r\n   * @param {String} name - Name of texture\r\n   */\r\n  detachTextureCache(name) {\r\n    delete this.textureCache[name];\r\n  }\r\n\r\n  setUniform1f(name, value) {\r\n    if (this.uniform1fCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform1fCache[name];\r\n      if (value === cache) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform1fCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform1f(loc, value);\r\n  }\r\n\r\n  setUniform1i(name, value) {\r\n    if (this.uniform1iCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform1iCache[name];\r\n      if (value === cache) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform1iCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform1i(loc, value);\r\n  }\r\n\r\n  setUniform2f(name, value1, value2) {\r\n    if (this.uniform2fCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2fCache[name];\r\n      if (\r\n        value1 === cache[0] &&\r\n        value2 === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2fCache[name] = [value1, value2];\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2f(loc, value1, value2);\r\n  }\r\n\r\n  setUniform2fv(name, value) {\r\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2fv(loc, value);\r\n  }\r\n\r\n  setUniform2iv(name, value) {\r\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2iv(loc, value);\r\n  }\r\n\r\n  setUniform3fv(name, value) {\r\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3fv(loc, value);\r\n  }\r\n\r\n  setUniform3iv(name, value) {\r\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3iv(loc, value);\r\n  }\r\n\r\n  setUniform3fv(name, value) {\r\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3fv(loc, value);\r\n  }\r\n\r\n  setUniform4iv(name, value) {\r\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform4ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2] &&\r\n        value[3] === cache[3]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform4ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform4iv(loc, value);\r\n  }\r\n\r\n  setUniform4fv(name, value) {\r\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform4fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2] &&\r\n        value[3] === cache[3]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform4fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform4fv(loc, value);\r\n  }\r\n\r\n  /**\r\n   * @desc Return WebGlUniformLocation for various variables\r\n   * related to webGl program, such as user-defined variables,\r\n   * as well as, dimension sizes, etc.\r\n   */\r\n  getUniformLocation(name) {\r\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\r\n      return this.programUniformLocationCache[name];\r\n    }\r\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\r\n  }\r\n\r\n  /**\r\n   * @desc Generate Shader artifacts for the kernel program.\r\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\r\n   */\r\n  _getFragShaderArtifactMap(args) {\r\n    return {\r\n      HEADER: this._getHeaderString(),\r\n      LOOP_MAX: this._getLoopMaxString(),\r\n      PLUGINS: this._getPluginsString(),\r\n      CONSTANTS: this._getConstantsString(),\r\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\r\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\r\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\r\n      INJECTED_NATIVE: this._getInjectedNative(),\r\n      MAIN_CONSTANTS: this._getMainConstantsString(),\r\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\r\n      KERNEL: this.getKernelString(),\r\n      MAIN_RESULT: this.getMainResultString(),\r\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\r\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\r\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\r\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Generate Shader artifacts for the kernel program.\r\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\r\n   */\r\n  _getVertShaderArtifactMap(args) {\r\n    return {\r\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\r\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\r\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\r\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Get the header string for the program.\r\n   * This returns an empty string if no sub-kernels are defined.\r\n   *\r\n   * @returns {String} result\r\n   */\r\n  _getHeaderString() {\r\n    return (\r\n      this.subKernels !== null ?\r\n      '#extension GL_EXT_draw_buffers : require\\n' :\r\n      ''\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc Get the maximum loop size String.\r\n   * @returns {String} result\r\n   */\r\n  _getLoopMaxString() {\r\n    return (\r\n      this.loopMaxIterations ?\r\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\r\n      ' 1000;\\n'\r\n    );\r\n  }\r\n\r\n  _getPluginsString() {\r\n    if (!this.plugins) return '\\n';\r\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\r\n   * @returns {String} result\r\n   */\r\n  _getConstantsString() {\r\n    const result = [];\r\n    const { threadDim, texSize } = this;\r\n    if (this.dynamicOutput) {\r\n      result.push(\r\n        'uniform ivec3 uOutputDim',\r\n        'uniform ivec2 uTexSize'\r\n      );\r\n    } else {\r\n      result.push(\r\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\r\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\r\n      );\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  /**\r\n   * @desc Get texture coordinate string for the program\r\n   * @returns {String} result\r\n   */\r\n  _getTextureCoordinate() {\r\n    const subKernels = this.subKernels;\r\n    if (subKernels === null || subKernels.length < 1) {\r\n      return 'varying vec2 vTexCoord;\\n';\r\n    } else {\r\n      return 'out vec2 vTexCoord;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Get Decode32 endianness string for little-endian and big-endian\r\n   * @returns {String} result\r\n   */\r\n  _getDecode32EndiannessString() {\r\n    return (\r\n      this.endianness === 'LE' ?\r\n      '' :\r\n      '  texel.rgba = texel.abgr;\\n'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc Get Encode32 endianness string for little-endian and big-endian\r\n   * @returns {String} result\r\n   */\r\n  _getEncode32EndiannessString() {\r\n    return (\r\n      this.endianness === 'LE' ?\r\n      '' :\r\n      '  texel.rgba = texel.abgr;\\n'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\r\n   * @returns {String} result\r\n   */\r\n  _getDivideWithIntegerCheckString() {\r\n    return this.fixIntegerDivisionAccuracy ?\r\n      `float div_with_int_check(float x, float y) {\r\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\r\n    return float(int(x)/int(y));\r\n  }\r\n  return x / y;\r\n}` :\r\n      '';\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {String} result\r\n   */\r\n  _getMainArgumentsString(args) {\r\n    const results = [];\r\n    const { argumentNames } = this;\r\n    for (let i = 0; i < argumentNames.length; i++) {\r\n      results.push(this.kernelArguments[i].getSource(args[i]));\r\n    }\r\n    return results.join('');\r\n  }\r\n\r\n  _getInjectedNative() {\r\n    return this.injectedNative || '';\r\n  }\r\n\r\n  _getMainConstantsString() {\r\n    const result = [];\r\n    const { constants } = this;\r\n    if (constants) {\r\n      let i = 0;\r\n      for (const name in constants) {\r\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  /**\r\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\r\n   * @returns {String} result\r\n   */\r\n  getKernelString() {\r\n    let kernelResultDeclaration;\r\n    switch (this.returnType) {\r\n      case 'Array(2)':\r\n        kernelResultDeclaration = 'vec2 kernelResult';\r\n        break;\r\n      case 'Array(3)':\r\n        kernelResultDeclaration = 'vec3 kernelResult';\r\n        break;\r\n      case 'Array(4)':\r\n        kernelResultDeclaration = 'vec4 kernelResult';\r\n        break;\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Number':\r\n      case 'Integer':\r\n        kernelResultDeclaration = 'float kernelResult';\r\n        break;\r\n      default:\r\n        if (this.graphical) {\r\n          kernelResultDeclaration = 'float kernelResult';\r\n        } else {\r\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\r\n        }\r\n    }\r\n\r\n    const result = [];\r\n    const subKernels = this.subKernels;\r\n    if (subKernels !== null) {\r\n      result.push(\r\n        kernelResultDeclaration\r\n      );\r\n      switch (this.returnType) {\r\n        case 'Number':\r\n        case 'Float':\r\n        case 'Integer':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            const subKernel = subKernels[i];\r\n            result.push(\r\n              subKernel.returnType === 'Integer' ?\r\n              `int subKernelResult_${ subKernel.name } = 0` :\r\n              `float subKernelResult_${ subKernel.name } = 0.0`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(2)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec2 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(3)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec3 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(4)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec4 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n      }\r\n    } else {\r\n      result.push(\r\n        kernelResultDeclaration\r\n      );\r\n    }\r\n\r\n    return utils.linesToString(result) + this.translatedSource;\r\n  }\r\n\r\n  getMainResultGraphical() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragColor = actualColor',\r\n    ]);\r\n  }\r\n\r\n  getMainResultPackedPixels() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return this.getMainResultKernelPackedPixels() +\r\n          this.getMainResultSubKernelPackedPixels();\r\n      default:\r\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultKernelPackedPixels() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultSubKernelPackedPixels() {\r\n    const result = [];\r\n    if (!this.subKernels) return '';\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\r\n        );\r\n      }\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultMemoryOptimizedFloats() {\r\n    const result = [\r\n      '  index *= 4',\r\n    ];\r\n\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        const channels = ['r', 'g', 'b', 'a'];\r\n        for (let i = 0; i < channels.length; i++) {\r\n          const channel = channels[i];\r\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\r\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\r\n          if (i + 1 < channels.length) {\r\n            result.push('  index += 1');\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\r\n    }\r\n\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\r\n    result.push(\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  gl_FragData[0].${channel} = kernelResult`,\r\n    );\r\n  }\r\n\r\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getMainResultKernelNumberTexture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelNumberTexture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray2Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult[0]',\r\n      '  gl_FragData[0][1] = kernelResult[1]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray2Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray3Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult[0]',\r\n      '  gl_FragData[0][1] = kernelResult[1]',\r\n      '  gl_FragData[0][2] = kernelResult[2]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray3Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray4Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray4Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Float':\r\n      case 'Integer':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          const subKernel = this.subKernels[i];\r\n          if (subKernel.returnType === 'Integer') {\r\n            result.push(\r\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\r\n            );\r\n          } else {\r\n            result.push(\r\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\r\n            );\r\n          }\r\n        }\r\n        break;\r\n      case 'Array(2)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n          );\r\n        }\r\n        break;\r\n      case 'Array(3)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n          );\r\n        }\r\n        break;\r\n      case 'Array(4)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\r\n          );\r\n        }\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {String} src - Shader string\r\n   * @param {Object} map - Variables/Constants associated with shader\r\n   */\r\n  replaceArtifacts(src, map) {\r\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\r\n      if (map.hasOwnProperty(artifact)) {\r\n        return map[artifact];\r\n      }\r\n      throw `unhandled artifact ${artifact}`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @desc Get the fragment shader String.\r\n   * If the String hasn't been compiled yet,\r\n   * then this method compiles it as well\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {string} Fragment Shader string\r\n   */\r\n  getFragmentShader(args) {\r\n    if (this.compiledFragmentShader !== null) {\r\n      return this.compiledFragmentShader;\r\n    }\r\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\r\n  }\r\n\r\n  /**\r\n   * @desc Get the vertical shader String\r\n   * @param {Array|IArguments} args - The actual parameters sent to the Kernel\r\n   * @returns {string} Vertical Shader string\r\n   */\r\n  getVertexShader(args) {\r\n    if (this.compiledVertexShader !== null) {\r\n      return this.compiledVertexShader;\r\n    }\r\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\r\n   */\r\n  toString() {\r\n    const setupContextString = utils.linesToString([\r\n      `const gl = context`,\r\n    ]);\r\n    return glKernelString(this.constructor, arguments, this, setupContextString);\r\n  }\r\n\r\n  destroy(removeCanvasReferences) {\r\n    if (this.outputTexture) {\r\n      this.context.deleteTexture(this.outputTexture);\r\n    }\r\n    if (this.buffer) {\r\n      this.context.deleteBuffer(this.buffer);\r\n    }\r\n    if (this.framebuffer) {\r\n      this.context.deleteFramebuffer(this.framebuffer);\r\n    }\r\n    if (this.vertShader) {\r\n      this.context.deleteShader(this.vertShader);\r\n    }\r\n    if (this.fragShader) {\r\n      this.context.deleteShader(this.fragShader);\r\n    }\r\n    if (this.program) {\r\n      this.context.deleteProgram(this.program);\r\n    }\r\n\r\n    const keys = Object.keys(this.textureCache);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const name = keys[i];\r\n      this.context.deleteTexture(this.textureCache[name]);\r\n    }\r\n\r\n    if (this.subKernelOutputTextures) {\r\n      for (let i = 0; i < this.subKernelOutputTextures.length; i++) {\r\n        this.context.deleteTexture(this.subKernelOutputTextures[i]);\r\n      }\r\n    }\r\n    if (removeCanvasReferences) {\r\n      const idx = canvases.indexOf(this.canvas);\r\n      if (idx >= 0) {\r\n        canvases[idx] = null;\r\n        maxTexSizes[idx] = null;\r\n      }\r\n    }\r\n    this.destroyExtensions();\r\n    delete this.context;\r\n    delete this.canvas;\r\n  }\r\n\r\n  destroyExtensions() {\r\n    this.extensions.OES_texture_float = null;\r\n    this.extensions.OES_texture_float_linear = null;\r\n    this.extensions.OES_element_index_uint = null;\r\n    this.extensions.WEBGL_draw_buffers = null;\r\n  }\r\n\r\n  static destroyContext(context) {\r\n    const extension = context.getExtension('WEBGL_lose_context');\r\n    if (extension) {\r\n      extension.loseContext();\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\r\n    return json;\r\n  }\r\n}\r\n","import { WebGLFunctionNode } from '../web-gl/function-node';\r\n\r\n/**\r\n * @class WebGL2FunctionNode\r\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective webGL code.\r\n * @extends WebGLFunctionNode\r\n * @returns the converted webGL function string\r\n */\r\nexport class WebGL2FunctionNode extends WebGLFunctionNode {\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput(\r\n        'IdentifierExpression - not an Identifier',\r\n        idtNode\r\n      );\r\n    }\r\n\r\n    const type = this.getType(idtNode);\r\n\r\n    if (idtNode.name === 'Infinity') {\r\n      retArr.push('intBitsToFloat(2139095039)');\r\n    } else if (type === 'Boolean') {\r\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\r\n        retArr.push(`bool(user_${idtNode.name})`);\r\n      } else {\r\n        retArr.push(`user_${idtNode.name}`);\r\n      }\r\n    } else {\r\n      retArr.push(`user_${idtNode.name}`);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n}\r\n","// language=GLSL\r\nexport const fragmentShader = `#version 300 es\r\n__HEADER__;\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\r\n\r\nconst int LOOP_MAX = __LOOP_MAX__;\r\n\r\n__PLUGINS__;\r\n__CONSTANTS__;\r\n\r\nin vec2 vTexCoord;\r\n\r\nconst int BIT_COUNT = 32;\r\nint modi(int x, int y) {\r\n  return x - y * (x / y);\r\n}\r\n\r\nint bitwiseOr(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseXOR(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseAnd(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 && b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseNot(int a) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (modi(a, 2) == 0) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    n = n * 2;\r\n  }\r\n  return result;\r\n}\r\nint bitwiseZeroFillLeftShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n *= 2;\r\n  }\r\n\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nint bitwiseSignedRightShift(int num, int shifts) {\r\n  return int(floor(float(num) / pow(2.0, float(shifts))));\r\n}\r\n\r\nint bitwiseZeroFillRightShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n /= 2;\r\n  }\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nvec2 integerMod(vec2 x, float y) {\r\n  vec2 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec3 integerMod(vec3 x, float y) {\r\n  vec3 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec4 integerMod(vec4 x, vec4 y) {\r\n  vec4 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nfloat integerMod(float x, float y) {\r\n  float res = floor(mod(x, y));\r\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\r\n}\r\n\r\nint integerMod(int x, int y) {\r\n  return x - (y * int(x/y));\r\n}\r\n\r\n__DIVIDE_WITH_INTEGER_CHECK__;\r\n\r\n// Here be dragons!\r\n// DO NOT OPTIMIZE THIS CODE\r\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\r\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\r\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\r\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\r\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\r\nfloat decode32(vec4 texel) {\r\n  __DECODE32_ENDIANNESS__;\r\n  texel *= 255.0;\r\n  vec2 gte128;\r\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\r\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\r\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\r\n  float res = exp2(round(exponent));\r\n  texel.b = texel.b - 128.0 * gte128.x;\r\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\r\n  res *= gte128.y * -2.0 + 1.0;\r\n  return res;\r\n}\r\n\r\nfloat decode16(vec4 texel, int index) {\r\n  int channel = integerMod(index, 2);\r\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\r\n}\r\n\r\nfloat decode8(vec4 texel, int index) {\r\n  int channel = integerMod(index, 4);\r\n  return texel[channel] * 255.0;\r\n}\r\n\r\nvec4 legacyEncode32(float f) {\r\n  float F = abs(f);\r\n  float sign = f < 0.0 ? 1.0 : 0.0;\r\n  float exponent = floor(log2(F));\r\n  float mantissa = (exp2(-exponent) * F);\r\n  // exponent += floor(log2(mantissa));\r\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\r\n  texel.rg = integerMod(texel.rg, 256.0);\r\n  texel.b = integerMod(texel.b, 128.0);\r\n  texel.a = exponent*0.5 + 63.5;\r\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\r\n  texel = floor(texel);\r\n  texel *= 0.003921569; // 1/255\r\n  __ENCODE32_ENDIANNESS__;\r\n  return texel;\r\n}\r\n\r\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\r\nvec4 encode32(float value) {\r\n  if (value == 0.0) return vec4(0, 0, 0, 0);\r\n\r\n  float exponent;\r\n  float mantissa;\r\n  vec4  result;\r\n  float sgn;\r\n\r\n  sgn = step(0.0, -value);\r\n  value = abs(value);\r\n\r\n  exponent = floor(log2(value));\r\n\r\n  mantissa = value*pow(2.0, -exponent)-1.0;\r\n  exponent = exponent+127.0;\r\n  result   = vec4(0,0,0,0);\r\n\r\n  result.a = floor(exponent/2.0);\r\n  exponent = exponent - result.a*2.0;\r\n  result.a = result.a + 128.0*sgn;\r\n\r\n  result.b = floor(mantissa * 128.0);\r\n  mantissa = mantissa - result.b / 128.0;\r\n  result.b = result.b + exponent*128.0;\r\n\r\n  result.g = floor(mantissa*32768.0);\r\n  mantissa = mantissa - result.g/32768.0;\r\n\r\n  result.r = floor(mantissa*8388608.0);\r\n  return result/255.0;\r\n}\r\n// Dragons end here\r\n\r\nint index;\r\nivec3 threadId;\r\n\r\nivec3 indexTo3D(int idx, ivec3 texDim) {\r\n  int z = int(idx / (texDim.x * texDim.y));\r\n  idx -= z * int(texDim.x * texDim.y);\r\n  int y = int(idx / texDim.x);\r\n  int x = int(integerMod(idx, texDim.x));\r\n  return ivec3(x, y, z);\r\n}\r\n\r\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return decode32(texel);\r\n}\r\n\r\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int w = texSize.x * 2;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\r\n  return decode16(texel, index);\r\n}\r\n\r\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int w = texSize.x * 4;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\r\n  return decode8(texel, index);\r\n}\r\n\r\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int channel = integerMod(index, 4);\r\n  index = index / 4;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  index = index / 4;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return texel[channel];\r\n}\r\n\r\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture(tex, st / vec2(texSize));\r\n}\r\n\r\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture(tex, vec3(st / vec2(texSize), z));\r\n}\r\n\r\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return result[0];\r\n}\r\n\r\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec2(result[0], result[1]);\r\n}\r\n\r\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  index = index / 2;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  if (channel == 0) return vec2(texel.r, texel.g);\r\n  if (channel == 1) return vec2(texel.b, texel.a);\r\n  return vec2(0.0, 0.0);\r\n}\r\n\r\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec3(result[0], result[1], result[2]);\r\n}\r\n\r\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\r\n  int vectorIndex = fieldIndex / 4;\r\n  int vectorOffset = fieldIndex - vectorIndex * 4;\r\n  int readY = vectorIndex / texSize.x;\r\n  int readX = vectorIndex - readY * texSize.x;\r\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\r\n\r\n  if (vectorOffset == 0) {\r\n    return tex1.xyz;\r\n  } else if (vectorOffset == 1) {\r\n    return tex1.yzw;\r\n  } else {\r\n    readX++;\r\n    if (readX >= texSize.x) {\r\n      readX = 0;\r\n      readY++;\r\n    }\r\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\r\n    if (vectorOffset == 2) {\r\n      return vec3(tex1.z, tex1.w, tex2.x);\r\n    } else {\r\n      return vec3(tex1.w, tex2.x, tex2.y);\r\n    }\r\n  }\r\n}\r\n\r\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  return getImage2D(tex, texSize, texDim, z, y, x);\r\n}\r\n\r\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return vec4(texel.r, texel.g, texel.b, texel.a);\r\n}\r\n\r\nvec4 actualColor;\r\nvoid color(float r, float g, float b, float a) {\r\n  actualColor = vec4(r,g,b,a);\r\n}\r\n\r\nvoid color(float r, float g, float b) {\r\n  color(r,g,b,1.0);\r\n}\r\n\r\n__INJECTED_NATIVE__;\r\n__MAIN_CONSTANTS__;\r\n__MAIN_ARGUMENTS__;\r\n__KERNEL__;\r\n\r\nvoid main(void) {\r\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\r\n  __MAIN_RESULT__;\r\n}`;\r\n","// language=GLSL\r\nexport const vertexShader = `#version 300 es\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nin vec2 aPos;\r\nin vec2 aTexCoord;\r\n\r\nout vec2 vTexCoord;\r\nuniform vec2 ratio;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\r\n  vTexCoord = aTexCoord;\r\n}`;\r\n","import { WebGLKernelValueBoolean } from '../../web-gl/kernel-value/boolean';\r\n\r\nexport class WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\r\n","import { WebGLKernelValueFloat } from '../../web-gl/kernel-value/float';\r\n\r\nexport class WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\r\n","import { WebGLKernelValueInteger } from '../../web-gl/kernel-value/integer';\r\n\r\nexport class WebGL2KernelValueInteger extends WebGLKernelValueInteger {\r\n  getSource(value) {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    if (this.origin === 'constants') {\r\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\r\n    }\r\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueHTMLImage } from '../../web-gl/kernel-value/html-image';\r\n\r\nexport class WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicHTMLImage } from '../../web-gl/kernel-value/dynamic-html-image';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from '../../web-gl/kernel-value/index';\r\n\r\nexport class WebGL2KernelValueHTMLImageArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.checkSize(value[0].width, value[0].height);\r\n    this.requestTexture();\r\n    this.dimensions = [value[0].width, value[0].height, value.length];\r\n    this.textureSize = [value[0].width, value[0].height];\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(images) {\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    // Upload the images into the texture.\r\n    gl.texImage3D(\r\n      gl.TEXTURE_2D_ARRAY,\r\n      0,\r\n      gl.RGBA,\r\n      images[0].width,\r\n      images[0].height,\r\n      images.length,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      null\r\n    );\r\n    for (let i = 0; i < images.length; i++) {\r\n      const xOffset = 0;\r\n      const yOffset = 0;\r\n      const imageDepth = 1;\r\n      gl.texSubImage3D(\r\n        gl.TEXTURE_2D_ARRAY,\r\n        0,\r\n        xOffset,\r\n        yOffset,\r\n        i,\r\n        images[i].width,\r\n        images[i].height,\r\n        imageDepth,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        this.uploadValue = images[i]\r\n      );\r\n    }\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { WebGL2KernelValueHTMLImageArray } from './html-image-array';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(images) {\r\n    const { width, height } = images[0];\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, images.length];\r\n    this.textureSize = [width, height];\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(images);\r\n  }\r\n}\r\n","import { WebGL2KernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\r\n","import { WebGL2KernelValueDynamicHTMLImage } from './dynamic-html-image';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleInput } from '../../web-gl/kernel-value/single-input';\r\n\r\nexport class WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } from '../../web-gl/kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nexport class WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueNumberTexture } from '../../web-gl/kernel-value/number-texture';\r\n\r\nexport class WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\r\n  getSource() {\r\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${id}`,\r\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicNumberTexture } from '../../web-gl/kernel-value/dynamic-number-texture';\r\n\r\nexport class WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray } from '../../web-gl/kernel-value/single-array';\r\n\r\nexport class WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray1DI } from '../../web-gl/kernel-value/single-array1d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray1DI } from '../../web-gl2/kernel-value/single-array1d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray2DI } from '../../web-gl/kernel-value/single-array2d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray2DI } from '../../web-gl2/kernel-value/single-array2d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray3DI } from '../../web-gl/kernel-value/single-array3d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray3DI } from '../../web-gl2/kernel-value/single-array3d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueSingleArray2 } from '../../web-gl/kernel-value/single-array2';\r\n\r\nexport class WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\r\n","import { WebGLKernelValueSingleArray3 } from '../../web-gl/kernel-value/single-array3';\r\n\r\nexport class WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\r\n","import { WebGLKernelValueSingleArray4 } from '../../web-gl/kernel-value/single-array4';\r\n\r\nexport class WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\r\n","import { WebGL2KernelValueBoolean } from './kernel-value/boolean';\r\nimport { WebGL2KernelValueFloat } from './kernel-value/float';\r\nimport { WebGL2KernelValueInteger } from './kernel-value/integer';\r\n\r\nimport { WebGL2KernelValueHTMLImage } from './kernel-value/html-image';\r\nimport { WebGL2KernelValueDynamicHTMLImage } from './kernel-value/dynamic-html-image';\r\n\r\nimport { WebGL2KernelValueHTMLImageArray } from './kernel-value/html-image-array';\r\nimport { WebGL2KernelValueDynamicHTMLImageArray } from './kernel-value/dynamic-html-image-array';\r\n\r\nimport { WebGL2KernelValueHTMLVideo } from './kernel-value/html-video';\r\nimport { WebGL2KernelValueDynamicHTMLVideo } from './kernel-value/dynamic-html-video';\r\n\r\nimport { WebGL2KernelValueSingleInput } from './kernel-value/single-input';\r\nimport { WebGL2KernelValueDynamicSingleInput } from './kernel-value/dynamic-single-input';\r\n\r\nimport { WebGL2KernelValueUnsignedInput } from './kernel-value/unsigned-input';\r\nimport { WebGL2KernelValueDynamicUnsignedInput } from './kernel-value/dynamic-unsigned-input';\r\n\r\nimport { WebGL2KernelValueMemoryOptimizedNumberTexture } from './kernel-value/memory-optimized-number-texture';\r\nimport { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } from './kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nimport { WebGL2KernelValueNumberTexture } from './kernel-value/number-texture';\r\nimport { WebGL2KernelValueDynamicNumberTexture } from './kernel-value/dynamic-number-texture';\r\n\r\nimport { WebGL2KernelValueSingleArray } from './kernel-value/single-array';\r\nimport { WebGL2KernelValueDynamicSingleArray } from './kernel-value/dynamic-single-array';\r\n\r\nimport { WebGL2KernelValueSingleArray1DI } from './kernel-value/single-array1d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray1DI } from './kernel-value/dynamic-single-array1d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray2DI } from './kernel-value/single-array2d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray2DI } from './kernel-value/dynamic-single-array2d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray3DI } from './kernel-value/single-array3d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray3DI } from './kernel-value/dynamic-single-array3d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray2 } from './kernel-value/single-array2';\r\nimport { WebGL2KernelValueSingleArray3 } from './kernel-value/single-array3';\r\nimport { WebGL2KernelValueSingleArray4 } from './kernel-value/single-array4';\r\n\r\nimport { WebGL2KernelValueUnsignedArray } from './kernel-value/unsigned-array';\r\nimport { WebGL2KernelValueDynamicUnsignedArray } from './kernel-value/dynamic-unsigned-array';\r\n\r\nexport const kernelValueMaps = {\r\n  unsigned: {\r\n    dynamic: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\r\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Array': WebGL2KernelValueUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGL2KernelValueUnsignedInput,\r\n      'NumberTexture': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\r\n    }\r\n  },\r\n  single: {\r\n    dynamic: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Array': WebGL2KernelValueDynamicSingleArray,\r\n      'Array(2)': WebGL2KernelValueSingleArray2,\r\n      'Array(3)': WebGL2KernelValueSingleArray3,\r\n      'Array(4)': WebGL2KernelValueSingleArray4,\r\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Input': WebGL2KernelValueDynamicSingleInput,\r\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Array': WebGL2KernelValueSingleArray,\r\n      'Array(2)': WebGL2KernelValueSingleArray2,\r\n      'Array(3)': WebGL2KernelValueSingleArray3,\r\n      'Array(4)': WebGL2KernelValueSingleArray4,\r\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\r\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\r\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\r\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\r\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\r\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\r\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\r\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\r\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\r\n      'Input': WebGL2KernelValueSingleInput,\r\n      'NumberTexture': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\r\n    }\r\n  },\r\n};\r\n\r\nexport function lookupKernelValueType(type, dynamic, precision, value) {\r\n  if (!type) {\r\n    throw new Error('type missing');\r\n  }\r\n  if (!dynamic) {\r\n    throw new Error('dynamic missing');\r\n  }\r\n  if (!precision) {\r\n    throw new Error('precision missing');\r\n  }\r\n  if (value.type) {\r\n    type = value.type;\r\n  }\r\n  const types = kernelValueMaps[precision][dynamic];\r\n  if (types[type] === false) {\r\n    return null;\r\n  } else if (types[type] === undefined) {\r\n    throw new Error(`Could not find a KernelValue for ${ type }`);\r\n  }\r\n  return types[type];\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicUnsignedArray } from '../../web-gl/kernel-value/dynamic-unsigned-array';\r\n\r\nexport class WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicUnsignedInput } from '../../web-gl/kernel-value/dynamic-unsigned-input';\r\n\r\nexport class WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedArray } from '../../web-gl/kernel-value/unsigned-array';\r\n\r\nexport class WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedInput } from '../../web-gl/kernel-value/unsigned-input';\r\n\r\nexport class WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray } from '../../web-gl2/kernel-value/single-array';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleInput } from '../../web-gl2/kernel-value/single-input';\r\n\r\nexport class WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from '../../web-gl/kernel-value/memory-optimized-number-texture';\r\n\r\nexport class WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${id}`,\r\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { WebGLKernel } from '../web-gl/kernel';\r\nimport { WebGL2FunctionNode } from './function-node';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { utils } from '../../utils';\r\nimport { fragmentShader } from './fragment-shader';\r\nimport { vertexShader } from './vertex-shader';\r\nimport { lookupKernelValueType } from './kernel-value-maps';\r\n\r\nlet isSupported = null;\r\nlet testCanvas = null;\r\nlet testContext = null;\r\nlet testExtensions = null;\r\n\r\n/**\r\n *\r\n * @type {IKernelFeatures}\r\n */\r\nlet features = null;\r\n\r\n/**\r\n * @extends WebGLKernel\r\n */\r\nexport class WebGL2Kernel extends WebGLKernel {\r\n  static get isSupported() {\r\n    if (isSupported !== null) {\r\n      return isSupported;\r\n    }\r\n    this.setupFeatureChecks();\r\n    isSupported = this.isContextMatch(testContext);\r\n    return isSupported;\r\n  }\r\n\r\n  static setupFeatureChecks() {\r\n    if (typeof document !== 'undefined') {\r\n      testCanvas = document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      testCanvas = new OffscreenCanvas(0, 0);\r\n    }\r\n    if (!testCanvas) return;\r\n    testContext = testCanvas.getContext('webgl2');\r\n    if (!testContext || !testContext.getExtension) return;\r\n    testExtensions = {\r\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\r\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\r\n    };\r\n    features = this.getFeatures();\r\n  }\r\n\r\n  static isContextMatch(context) {\r\n    // from global\r\n    if (typeof WebGL2RenderingContext !== 'undefined') {\r\n      return context instanceof WebGL2RenderingContext;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getFeatures() {\r\n    return Object.freeze({\r\n      isFloatRead: this.getIsFloatRead(),\r\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\r\n      kernelMap: true,\r\n      isTextureFloat: true,\r\n      channelCount: this.getChannelCount(),\r\n      maxTextureSize: this.getMaxTextureSize(),\r\n    });\r\n  }\r\n\r\n  static getIsTextureFloat() {\r\n    return true;\r\n  }\r\n\r\n  static getIsIntegerDivisionAccurate() {\r\n    return super.getIsIntegerDivisionAccurate();\r\n  }\r\n\r\n  static getChannelCount() {\r\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\r\n  }\r\n\r\n  static getMaxTextureSize() {\r\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\r\n  }\r\n\r\n  static lookupKernelValueType(type, dynamic, precision, value) {\r\n    return lookupKernelValueType(type, dynamic, precision, value);\r\n  }\r\n\r\n  static get testCanvas() {\r\n    return testCanvas;\r\n  }\r\n\r\n  static get testContext() {\r\n    return testContext;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {{isFloatRead: Boolean, isIntegerDivisionAccurate: Boolean, kernelMap: Boolean, isTextureFloat: Boolean}}\r\n   */\r\n  static get features() {\r\n    return features;\r\n  }\r\n\r\n  static get fragmentShader() {\r\n    return fragmentShader;\r\n  }\r\n  static get vertexShader() {\r\n    return vertexShader;\r\n  }\r\n\r\n  initContext() {\r\n    const settings = {\r\n      alpha: false,\r\n      depth: false,\r\n      antialias: false\r\n    };\r\n    const context = this.canvas.getContext('webgl2', settings);\r\n    return context;\r\n  }\r\n\r\n  initExtensions() {\r\n    this.extensions = {\r\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\r\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.validate) {\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      return;\r\n    }\r\n\r\n    const features = this.constructor.features;\r\n    if (this.precision === 'single' && !features.isFloatRead) {\r\n      throw new Error('Float texture outputs are not supported');\r\n    } else if (!this.graphical && this.precision === null) {\r\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy === null) {\r\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\r\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\r\n      this.fixIntegerDivisionAccuracy = false;\r\n    }\r\n\r\n    this.checkOutput();\r\n\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      switch (argType) {\r\n        case 'Array':\r\n          this.output = utils.getDimensions(argType);\r\n          break;\r\n        case 'NumberTexture':\r\n        case 'MemoryOptimizedNumberTexture':\r\n        case 'ArrayTexture(1)':\r\n        case 'ArrayTexture(2)':\r\n        case 'ArrayTexture(3)':\r\n        case 'ArrayTexture(4)':\r\n          this.output = args[0].output;\r\n          break;\r\n        default:\r\n          throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n\r\n      if (this.precision === 'single') {\r\n        console.warn('Cannot use graphical mode and single precision at the same time');\r\n        this.precision = 'unsigned';\r\n      }\r\n\r\n      this.texSize = utils.clone(this.output);\r\n      return;\r\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\r\n      this.precision = 'single';\r\n    }\r\n\r\n    this.texSize = utils.getKernelTextureSize({\r\n      optimizeFloatMemory: this.optimizeFloatMemory,\r\n      precision: this.precision,\r\n    }, this.output);\r\n\r\n    this.checkTextureSize();\r\n  }\r\n\r\n  translateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0) {\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const subKernel = this.subKernels[i];\r\n        if (!subKernel.returnType) {\r\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  run() {\r\n    const { kernelArguments, texSize, forceUploadKernelConstants } = this;\r\n    const gl = this.context;\r\n\r\n    gl.useProgram(this.program);\r\n    gl.scissor(0, 0, texSize[0], texSize[1]);\r\n\r\n    if (this.dynamicOutput) {\r\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\r\n      this.setUniform2iv('uTexSize', texSize);\r\n    }\r\n\r\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\r\n\r\n    this.switchingKernels = false;\r\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\r\n      const constant = forceUploadKernelConstants[i];\r\n      constant.updateValue(this.constants[constant.name]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      kernelArguments[i].updateValue(arguments[i]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n\r\n    if (this.plugins) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.onBeforeRun) {\r\n          plugin.onBeforeRun(this);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.pipeline) {\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        if (!this.outputTexture || this.immutable) {\r\n          this._setupOutputTexture();\r\n        }\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        return new this.TextureConstructor({\r\n          texture: this.outputTexture,\r\n          size: texSize,\r\n          dimensions: this.threadDim,\r\n          output: this.output,\r\n          context: this.context\r\n        });\r\n      }\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n      return;\r\n    }\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    if (this.immutable) {\r\n      this._setupOutputTexture();\r\n    }\r\n\r\n    if (this.subKernels !== null) {\r\n      if (this.immutable) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n      gl.drawBuffers(this.drawBuffersMap);\r\n    }\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  }\r\n\r\n  drawBuffers() {\r\n    this.context.drawBuffers(this.drawBuffersMap);\r\n  }\r\n\r\n  getOutputTexture() {\r\n    return this.outputTexture;\r\n  }\r\n\r\n  _setupOutputTexture() {\r\n    const { texSize } = this;\r\n    const gl = this.context;\r\n    const texture = this.outputTexture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    if (this.precision === 'single') {\r\n      if (this.pipeline) {\r\n        switch (this.returnType) {\r\n          case 'Number':\r\n          case 'Float':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n            } else {\r\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R32F, texSize[0], texSize[1]);\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32F, texSize[0], texSize[1]);\r\n            break;\r\n          case 'Array(3)': // there is _no_ 3 channel format which is guaranteed to be color-renderable\r\n          case 'Array(4)':\r\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n            break;\r\n          default:\r\n            throw new Error('Unhandled return type');\r\n        }\r\n      } else {\r\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n      }\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n  }\r\n\r\n  _setupSubOutputTextures() {\r\n    const { texSize } = this;\r\n    const gl = this.context;\r\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\r\n    this.subKernelOutputTextures = [];\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const texture = this.context.createTexture();\r\n      this.subKernelOutputTextures.push(texture);\r\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\r\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      // TODO: upgrade this\r\n      if (this.precision === 'single') {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n      }\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @desc Get the header string for the program.\r\n   * This returns an empty string if no sub-kernels are defined.\r\n   *\r\n   * @returns {String} result\r\n   */\r\n  _getHeaderString() {\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * @desc Get texture coordinate string for the program\r\n   * @returns {String} result\r\n   */\r\n  _getTextureCoordinate() {\r\n    const subKernels = this.subKernels;\r\n    if (subKernels === null || subKernels.length < 1) {\r\n      switch (this.tactic) {\r\n        case 'speed':\r\n          return 'in lowp vec2 vTexCoord;\\n';\r\n        case 'performance':\r\n          return 'in highp vec2 vTexCoord;\\n';\r\n        case 'balanced':\r\n        default:\r\n          return 'in mediump vec2 vTexCoord;\\n';\r\n      }\r\n    } else {\r\n      switch (this.tactic) {\r\n        case 'speed':\r\n          return 'out lowp vec2 vTexCoord;\\n';\r\n        case 'performance':\r\n          return 'out highp vec2 vTexCoord;\\n';\r\n        case 'balanced':\r\n        default:\r\n          return 'out mediump vec2 vTexCoord;\\n';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {String} result\r\n   */\r\n  _getMainArgumentsString(args) {\r\n    const result = [];\r\n    const argumentNames = this.argumentNames;\r\n    for (let i = 0; i < argumentNames.length; i++) {\r\n      result.push(this.kernelArguments[i].getSource(args[i]));\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  /**\r\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\r\n   * @returns {String} result\r\n   */\r\n  getKernelString() {\r\n    let kernelResultDeclaration;\r\n    switch (this.returnType) {\r\n      case 'Array(2)':\r\n        kernelResultDeclaration = 'vec2 kernelResult';\r\n        break;\r\n      case 'Array(3)':\r\n        kernelResultDeclaration = 'vec3 kernelResult';\r\n        break;\r\n      case 'Array(4)':\r\n        kernelResultDeclaration = 'vec4 kernelResult';\r\n        break;\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Number':\r\n      case 'Integer':\r\n        kernelResultDeclaration = 'float kernelResult';\r\n        break;\r\n      default:\r\n        if (this.graphical) {\r\n          kernelResultDeclaration = 'float kernelResult';\r\n        } else {\r\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\r\n        }\r\n    }\r\n\r\n    const result = [];\r\n    const subKernels = this.subKernels;\r\n    if (subKernels !== null) {\r\n      result.push(\r\n        kernelResultDeclaration,\r\n        'layout(location = 0) out vec4 data0'\r\n      );\r\n      for (let i = 0; i < subKernels.length; i++) {\r\n        const subKernel = subKernels[i];\r\n        result.push(\r\n          subKernel.returnType === 'Integer' ?\r\n          `int subKernelResult_${ subKernel.name } = 0` :\r\n          `float subKernelResult_${ subKernel.name } = 0.0`,\r\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\r\n        );\r\n      }\r\n    } else {\r\n      result.push(\r\n        'out vec4 data0',\r\n        kernelResultDeclaration\r\n      );\r\n    }\r\n\r\n    return utils.linesToString(result) + this.translatedSource;\r\n  }\r\n\r\n  getMainResultGraphical() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0 = actualColor',\r\n    ]);\r\n  }\r\n\r\n  getMainResultPackedPixels() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return this.getMainResultKernelPackedPixels() +\r\n          this.getMainResultSubKernelPackedPixels();\r\n      default:\r\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultKernelPackedPixels() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultSubKernelPackedPixels() {\r\n    const result = [];\r\n    if (!this.subKernels) return '';\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\r\n        );\r\n      }\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultMemoryOptimizedFloats() {\r\n    const result = [\r\n      '  index *= 4',\r\n    ];\r\n\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        const channels = ['r', 'g', 'b', 'a'];\r\n        for (let i = 0; i < channels.length; i++) {\r\n          const channel = channels[i];\r\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\r\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\r\n          if (i + 1 < channels.length) {\r\n            result.push('  index += 1');\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\r\n    }\r\n\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\r\n    result.push(\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  data0.${channel} = kernelResult`,\r\n    );\r\n  }\r\n\r\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getMainResultKernelNumberTexture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelNumberTexture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray2Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult[0]',\r\n      '  data0[1] = kernelResult[1]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray2Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      result.push(\r\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\r\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray3Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult[0]',\r\n      '  data0[1] = kernelResult[1]',\r\n      '  data0[2] = kernelResult[2]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray3Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      result.push(\r\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\r\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\r\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray4Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0 = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray4Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroyExtensions() {\r\n    this.extensions.EXT_color_buffer_float = null;\r\n    this.extensions.OES_texture_float_linear = null;\r\n  }\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\r\n    return json;\r\n  }\r\n}\r\n","import { utils } from './utils';\r\n\r\n/**\r\n * Makes kernels easier for mortals (including me)\r\n * @param kernel\r\n * @returns {function()}\r\n */\r\nexport function kernelRunShortcut(kernel) {\r\n  let run = function() {\r\n    kernel.build.apply(kernel, arguments);\r\n    if (kernel.renderKernels) {\r\n      run = function() {\r\n        kernel.run.apply(kernel, arguments);\r\n        if (kernel.switchingKernels) {\r\n          kernel.switchingKernels = false;\r\n          return kernel.onRequestSwitchKernel(arguments, kernel);\r\n        }\r\n        return kernel.renderKernels();\r\n      };\r\n    } else if (kernel.renderOutput) {\r\n      run = function() {\r\n        kernel.run.apply(kernel, arguments);\r\n        if (kernel.switchingKernels) {\r\n          kernel.switchingKernels = false;\r\n          return kernel.onRequestSwitchKernel(arguments, kernel);\r\n        }\r\n        return kernel.renderOutput();\r\n      };\r\n    } else {\r\n      run = function() {\r\n        return kernel.run.apply(kernel, arguments);\r\n      };\r\n    }\r\n    return run.apply(kernel, arguments);\r\n  };\r\n  const shortcut = function() {\r\n    return run.apply(kernel, arguments);\r\n  };\r\n  /**\r\n   * Run kernel in async mode\r\n   * @returns {Promise<KernelOutput>}\r\n   */\r\n  shortcut.exec = function() {\r\n    return new Promise((accept, reject) => {\r\n      try {\r\n        accept(run.apply(this, arguments));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  };\r\n  shortcut.replaceKernel = function(replacementKernel) {\r\n    kernel = replacementKernel;\r\n    bindKernelToShortcut(kernel, shortcut);\r\n    shortcut.kernel = kernel;\r\n  };\r\n\r\n  bindKernelToShortcut(kernel, shortcut);\r\n  shortcut.kernel = kernel;\r\n  return shortcut;\r\n}\r\n\r\nfunction bindKernelToShortcut(kernel, shortcut) {\r\n  const properties = utils.allPropertiesOf(kernel);\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const property = properties[i];\r\n    if (property[0] === '_' && property[1] === '_') continue;\r\n    if (typeof kernel[property] === 'function') {\r\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\r\n        shortcut[property] = function() {\r\n          kernel[property].apply(kernel, arguments);\r\n          return shortcut;\r\n        };\r\n      } else {\r\n        if (property === 'toString') {\r\n          shortcut.toString = function() {\r\n            return kernel.toString.apply(kernel, arguments);\r\n          };\r\n        } else {\r\n          shortcut[property] = kernel[property].bind(kernel);\r\n        }\r\n      }\r\n    } else {\r\n      shortcut.__defineGetter__(property, () => {\r\n        return kernel[property];\r\n      });\r\n      shortcut.__defineSetter__(property, (value) => {\r\n        kernel[property] = value;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { gpuMock } from 'gpu-mock.js';\r\nimport { CPUKernel } from './backend/cpu/kernel';\r\nimport { WebGL2Kernel } from './backend/web-gl2/kernel';\r\nimport { WebGLKernel } from './backend/web-gl/kernel';\r\nimport { kernelRunShortcut } from './kernel-run-shortcut';\r\nimport {\r\n  functionToIFunction,\r\n  getFunctionNameFromString,\r\n  isFunction,\r\n  warnDeprecated\r\n} from './common';\r\nimport { getVariableType } from './utils';\r\n\r\n/**\r\n * @type {Kernel[]}\r\n */\r\nconst kernelOrder = [ WebGL2Kernel, WebGLKernel ];\r\n\r\n/**\r\n * @type {string[]}\r\n */\r\nconst kernelTypes = [ 'gpu', 'cpu' ];\r\n\r\nconst internalKernels = {\r\n  'webgl2': WebGL2Kernel,\r\n  'webgl': WebGLKernel,\r\n};\r\n\r\nlet validate = true;\r\n\r\n/**\r\n * The GPU.js library class which manages the GPU context for the creating kernels\r\n */\r\nexport class GPU {\r\n  static disableValidation() {\r\n    validate = false;\r\n  }\r\n\r\n  static enableValidation() {\r\n    validate = true;\r\n  }\r\n\r\n  static get isGPUSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  static get isKernelMapSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE is platform supports OffscreenCanvas\r\n   */\r\n  static get isOffscreenCanvasSupported() {\r\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports WebGL\r\n   */\r\n  static get isWebGLSupported() {\r\n    return WebGLKernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports WebGL2\r\n   */\r\n  static get isWebGL2Supported() {\r\n    return WebGL2Kernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports HeadlessGL\r\n   */\r\n  static get isHeadlessGLSupported() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @desc TRUE if platform supports Canvas\r\n   */\r\n  static get isCanvasSupported() {\r\n    return typeof HTMLCanvasElement !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports HTMLImageArray}\r\n   */\r\n  static get isGPUHTMLImageArraySupported() {\r\n    return WebGL2Kernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports single precision}\r\n   * @returns {boolean}\r\n   */\r\n  static get isSinglePrecisionSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of GPU.\r\n   * @param {IGPUSettings} [settings] - Settings to set mode, and other properties\r\n   */\r\n  constructor(settings) {\r\n    settings = settings || {};\r\n    this.canvas = settings.canvas || null;\r\n    this.context = settings.context || null;\r\n    this.mode = settings.mode;\r\n    this.Kernel = null;\r\n    this.kernels = [];\r\n    this.functions = [];\r\n    this.nativeFunctions = [];\r\n    this.injectedNative = null;\r\n    if (this.mode === 'dev') return;\r\n    this.chooseKernel();\r\n    // add functions from settings\r\n    if (settings.functions) {\r\n      for (let i = 0; i < settings.functions.length; i++) {\r\n        this.addFunction(settings.functions[i]);\r\n      }\r\n    }\r\n\r\n    // add native functions from settings\r\n    if (settings.nativeFunctions) {\r\n      for (const p in settings.nativeFunctions) {\r\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\r\n      }\r\n    }\r\n  }\r\n\r\n  getValidate() {\r\n    return validate;\r\n  }\r\n\r\n  /**\r\n   * Choose kernel type and save on .Kernel property of GPU\r\n   */\r\n  chooseKernel() {\r\n    if (this.Kernel) return;\r\n\r\n    let Kernel = null;\r\n\r\n    if (this.context) {\r\n      for (let i = 0; i < kernelOrder.length; i++) {\r\n        const ExternalKernel = kernelOrder[i];\r\n        if (ExternalKernel.isContextMatch(this.context)) {\r\n          if (!ExternalKernel.isSupported) {\r\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\r\n          }\r\n          Kernel = ExternalKernel;\r\n          break;\r\n        }\r\n      }\r\n      if (Kernel === null) {\r\n        throw new Error('unknown Context');\r\n      }\r\n    } else if (this.mode) {\r\n      if (this.mode in internalKernels) {\r\n        if (!validate || internalKernels[this.mode].isSupported) {\r\n          Kernel = internalKernels[this.mode];\r\n        }\r\n      } else if (this.mode === 'gpu') {\r\n        for (let i = 0; i < kernelOrder.length; i++) {\r\n          if (kernelOrder[i].isSupported) {\r\n            Kernel = kernelOrder[i];\r\n            break;\r\n          }\r\n        }\r\n      } else if (this.mode === 'cpu') {\r\n        Kernel = CPUKernel;\r\n      }\r\n      if (!Kernel) {\r\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < kernelOrder.length; i++) {\r\n        if (kernelOrder[i].isSupported) {\r\n          Kernel = kernelOrder[i];\r\n          break;\r\n        }\r\n      }\r\n      if (!Kernel) {\r\n        Kernel = CPUKernel;\r\n      }\r\n    }\r\n\r\n    if (!this.mode) {\r\n      this.mode = Kernel.mode;\r\n    }\r\n    this.Kernel = Kernel;\r\n  }\r\n\r\n  /**\r\n   * @desc This creates a callable function object to call the kernel function with the argument parameter set\r\n   * @param {Function|String|object} source - The calling to perform the conversion\r\n   * @param {Object} [settings] - The parameter configuration object\r\n   * @return {Kernel} callable function to run\r\n   */\r\n  createKernel(source, settings) {\r\n    if (typeof source === 'undefined') {\r\n      throw new Error('Missing source parameter');\r\n    }\r\n    if (typeof source !== 'object' && !isFunction(source) && typeof source !== 'string') {\r\n      throw new Error('source parameter not a function');\r\n    }\r\n\r\n    if (this.mode === 'dev') {\r\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\r\n      this.kernels.push(devKernel);\r\n      return devKernel;\r\n    }\r\n\r\n    source = typeof source === 'function' ? source.toString() : source;\r\n    const switchableKernels = {};\r\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\r\n    // handle conversion of argumentTypes\r\n    if (settings && typeof settings.argumentTypes === 'object') {\r\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\r\n    }\r\n\r\n    function onRequestFallback(args) {\r\n      const fallbackKernel = new CPUKernel(source, {\r\n        argumentTypes: kernelRun.argumentTypes,\r\n        constantTypes: kernelRun.constantTypes,\r\n        graphical: kernelRun.graphical,\r\n        loopMaxIterations: kernelRun.loopMaxIterations,\r\n        constants: kernelRun.constants,\r\n        dynamicOutput: kernelRun.dynamicOutput,\r\n        dynamicArgument: kernelRun.dynamicArguments,\r\n        output: kernelRun.output,\r\n        precision: kernelRun.precision,\r\n        pipeline: kernelRun.pipeline,\r\n        immutable: kernelRun.immutable,\r\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\r\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\r\n        functions: kernelRun.functions,\r\n        nativeFunctions: kernelRun.nativeFunctions,\r\n        injectedNative: kernelRun.injectedNative,\r\n        subKernels: kernelRun.subKernels,\r\n        strictIntegers: kernelRun.strictIntegers,\r\n        debug: kernelRun.debug,\r\n        warnVarUsage: kernelRun.warnVarUsage,\r\n      });\r\n      fallbackKernel.build.apply(fallbackKernel, args);\r\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\r\n      kernelRun.replaceKernel(fallbackKernel);\r\n      return result;\r\n    }\r\n\r\n    function onRequestSwitchKernel(args, kernel) {\r\n      const argumentTypes = new Array(args.length);\r\n      for (let i = 0; i < args.length; i++) {\r\n        const arg = args[i];\r\n        const type = kernel.argumentTypes[i];\r\n        if (arg.type) {\r\n          argumentTypes[i] = arg.type;\r\n        } else {\r\n          switch (type) {\r\n            case 'Number':\r\n            case 'Integer':\r\n            case 'Float':\r\n            case 'ArrayTexture(1)':\r\n              argumentTypes[i] = getVariableType(arg);\r\n              break;\r\n            default:\r\n              argumentTypes[i] = type;\r\n          }\r\n        }\r\n      }\r\n      const signature = argumentTypes.join(',');\r\n      const existingKernel = switchableKernels[signature];\r\n      if (existingKernel) {\r\n        existingKernel.run.apply(existingKernel, args);\r\n        if (existingKernel.renderKernels) {\r\n          return existingKernel.renderKernels();\r\n        } else {\r\n          return existingKernel.renderOutput();\r\n        }\r\n      }\r\n\r\n      const newKernel = switchableKernels[signature] = new kernel.constructor(source, {\r\n        argumentTypes,\r\n        constantTypes: kernel.constantTypes,\r\n        graphical: kernel.graphical,\r\n        loopMaxIterations: kernel.loopMaxIterations,\r\n        constants: kernel.constants,\r\n        dynamicOutput: kernel.dynamicOutput,\r\n        dynamicArgument: kernel.dynamicArguments,\r\n        context: kernel.context,\r\n        canvas: kernel.canvas,\r\n        output: kernel.output,\r\n        precision: kernel.precision,\r\n        pipeline: kernel.pipeline,\r\n        immutable: kernel.immutable,\r\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\r\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\r\n        functions: kernel.functions,\r\n        nativeFunctions: kernel.nativeFunctions,\r\n        injectedNative: kernel.injectedNative,\r\n        subKernels: kernel.subKernels,\r\n        strictIntegers: kernel.strictIntegers,\r\n        debug: kernel.debug,\r\n        gpu: kernel.gpu,\r\n        validate,\r\n        warnVarUsage: kernel.warnVarUsage,\r\n        returnType: kernel.returnType,\r\n        onRequestFallback,\r\n        onRequestSwitchKernel,\r\n      });\r\n      newKernel.build.apply(newKernel, args);\r\n      newKernel.run.apply(newKernel, args);\r\n      kernelRun.replaceKernel(newKernel);\r\n      if (newKernel.renderKernels) {\r\n        return newKernel.renderKernels();\r\n      } else {\r\n        return newKernel.renderOutput();\r\n      }\r\n    }\r\n    const mergedSettings = Object.assign({\r\n      context: this.context,\r\n      canvas: this.canvas,\r\n      functions: this.functions,\r\n      nativeFunctions: this.nativeFunctions,\r\n      injectedNative: this.injectedNative,\r\n      gpu: this,\r\n      validate,\r\n      onRequestFallback,\r\n      onRequestSwitchKernel\r\n    }, settingsCopy);\r\n\r\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\r\n\r\n    //if canvas didn't come from this, propagate from kernel\r\n    if (!this.canvas) {\r\n      this.canvas = kernelRun.canvas;\r\n    }\r\n\r\n    //if context didn't come from this, propagate from kernel\r\n    if (!this.context) {\r\n      this.context = kernelRun.context;\r\n    }\r\n\r\n    this.kernels.push(kernelRun);\r\n\r\n    return kernelRun;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Create a super kernel which executes sub kernels\r\n   * and saves their output to be used with the next sub kernel.\r\n   * This can be useful if we want to save the output on one kernel,\r\n   * and then use it as an input to another kernel. *Machine Learning*\r\n   *\r\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\r\n   * @param {Function} rootKernel - Root kernel\r\n   *\r\n   * @returns {Function} callable kernel function\r\n   *\r\n   * @example\r\n   * const megaKernel = gpu.createKernelMap({\r\n   *   addResult: function add(a, b) {\r\n   *     return a[this.thread.x] + b[this.thread.x];\r\n   *   },\r\n   *   multiplyResult: function multiply(a, b) {\r\n   *     return a[this.thread.x] * b[this.thread.x];\r\n   *   },\r\n   *  }, function(a, b, c) {\r\n   *       return multiply(add(a, b), c);\r\n   * });\r\n   *\r\n   * megaKernel(a, b, c);\r\n   *\r\n   * Note: You can also define subKernels as an array of functions.\r\n   * > [add, multiply]\r\n   *\r\n   */\r\n  createKernelMap() {\r\n    let fn;\r\n    let settings;\r\n    if (typeof arguments[arguments.length - 2] === 'function') {\r\n      fn = arguments[arguments.length - 2];\r\n      settings = arguments[arguments.length - 1];\r\n    } else {\r\n      fn = arguments[arguments.length - 1];\r\n    }\r\n\r\n    if (this.mode !== 'dev') {\r\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\r\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\r\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\r\n    // handle conversion of argumentTypes\r\n    if (settings && typeof settings.argumentTypes === 'object') {\r\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\r\n    }\r\n\r\n    if (Array.isArray(arguments[0])) {\r\n      settingsCopy.subKernels = [];\r\n      const functions = arguments[0];\r\n      for (let i = 0; i < functions.length; i++) {\r\n        const source = functions[i].toString();\r\n        const name = getFunctionNameFromString(source);\r\n        settingsCopy.subKernels.push({\r\n          name,\r\n          source,\r\n          property: i,\r\n        });\r\n      }\r\n    } else {\r\n      settingsCopy.subKernels = [];\r\n      const functions = arguments[0];\r\n      for (let p in functions) {\r\n        if (!functions.hasOwnProperty(p)) continue;\r\n        const source = functions[p].toString();\r\n        const name = getFunctionNameFromString(source);\r\n        settingsCopy.subKernels.push({\r\n          name: name || p,\r\n          source,\r\n          property: p,\r\n        });\r\n      }\r\n    }\r\n    const kernel = this.createKernel(fn, settingsCopy);\r\n\r\n    return kernel;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Combine different kernels into one super Kernel,\r\n   * useful to perform multiple operations inside one\r\n   * kernel without the penalty of data transfer between\r\n   * cpu and gpu.\r\n   *\r\n   * The number of kernel functions sent to this method can be variable.\r\n   * You can send in one, two, etc.\r\n   *\r\n   * @param {Function} subKernels - Kernel function(s) to combine.\r\n   * @param {Function} rootKernel - Root kernel to combine kernels into\r\n   *\r\n   * @example\r\n   *   combineKernels(add, multiply, function(a,b,c){\r\n   *     return add(multiply(a,b), c)\r\n   *  })\r\n   *\r\n   * @returns {Function} Callable kernel function\r\n   *\r\n   */\r\n  combineKernels() {\r\n    const firstKernel = arguments[0];\r\n    const combinedKernel = arguments[arguments.length - 1];\r\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\r\n    const canvas = arguments[0].canvas;\r\n    const context = arguments[0].context;\r\n    const max = arguments.length - 1;\r\n    for (let i = 0; i < max; i++) {\r\n      arguments[i]\r\n        .setCanvas(canvas)\r\n        .setContext(context)\r\n        .setPipeline(true);\r\n    }\r\n\r\n    return function() {\r\n      const texture = combinedKernel.apply(this, arguments);\r\n      if (texture.toArray) {\r\n        return texture.toArray();\r\n      }\r\n      return texture;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Adds additional functions, that the kernel may call.\r\n   * @param {Function|String} source - Javascript function to convert\r\n   * @param {IFunctionSettings} [settings]\r\n   * @returns {GPU} returns itself\r\n   */\r\n  addFunction(source, settings) {\r\n    this.functions.push(functionToIFunction(source, settings));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Adds additional native functions, that the kernel may call.\r\n   * @param {String} name - native function name, used for reverse lookup\r\n   * @param {String} source - the native function implementation, as it would be defined in it's entirety\r\n   * @param {object} [settings]\r\n   * @returns {GPU} returns itself\r\n   */\r\n  addNativeFunction(name, source, settings) {\r\n    if (this.kernels.length > 0) {\r\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\r\n    }\r\n    settings = settings || {};\r\n    const { argumentTypes, argumentNames } = this.Kernel.nativeFunctionArguments(source) || {};\r\n    this.nativeFunctions.push({\r\n      name,\r\n      source,\r\n      settings,\r\n      argumentTypes,\r\n      argumentNames,\r\n      returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source),\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inject a string just before translated kernel functions\r\n   * @param {String} source\r\n   * @return {GPU}\r\n   */\r\n  injectNative(source) {\r\n    this.injectedNative = source;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Destroys all memory associated with gpu.js & the webGl if we created it\r\n   */\r\n  destroy() {\r\n    if (!this.kernels) return;\r\n    // perform on next run loop - for some reason we dont get lose context events\r\n    // if webGl is created and destroyed in the same run loop.\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.kernels.length; i++) {\r\n        this.kernels[i].destroy(true); // remove canvas if exists\r\n      }\r\n      // all kernels are associated with one context, go ahead and take care of it here\r\n      let firstKernel = this.kernels[0];\r\n      if (firstKernel) {\r\n        // if it is shortcut\r\n        if (firstKernel.kernel) {\r\n          firstKernel = firstKernel.kernel;\r\n        }\r\n        if (firstKernel.constructor.destroyContext) {\r\n          firstKernel.constructor.destroyContext(this.context);\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n}\r\n\r\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\r\n  if (!settings) {\r\n    return {};\r\n  }\r\n  const upgradedSettings = Object.assign({}, settings);\r\n\r\n  if (settings.hasOwnProperty('floatOutput')) {\r\n    warnDeprecated('setting', 'floatOutput', 'precision');\r\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\r\n  }\r\n  if (settings.hasOwnProperty('outputToTexture')) {\r\n    warnDeprecated('setting', 'outputToTexture', 'pipeline');\r\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\r\n  }\r\n  if (settings.hasOwnProperty('outputImmutable')) {\r\n    warnDeprecated('setting', 'outputImmutable', 'immutable');\r\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\r\n  }\r\n  if (settings.hasOwnProperty('floatTextures')) {\r\n    warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\r\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\r\n  }\r\n  return upgradedSettings;\r\n}\r\n","import { GPU } from './base-gpu';\r\nimport { alias } from './alias';\r\nimport { utils } from './utils';\r\nimport * as common from './common';\r\nimport { Input, input } from './input';\r\nimport { Texture } from './texture';\r\nimport { FunctionBuilder } from './backend/function-builder';\r\nimport { FunctionNode } from './backend/function-node';\r\nimport { CPUFunctionNode } from './backend/cpu/function-node';\r\nimport { CPUKernel } from './backend/cpu/kernel';\r\nimport { WebGLFunctionNode } from './backend/web-gl/function-node';\r\nimport { WebGLKernel } from './backend/web-gl/kernel';\r\nimport { WebGL2FunctionNode } from './backend/web-gl2/function-node';\r\nimport { WebGL2Kernel } from './backend/web-gl2/kernel';\r\nimport { GLKernel } from './backend/gl/kernel';\r\nimport { Kernel } from './backend/kernel';\r\n\r\n/**\r\n * Stub for HeadlessGL.\r\n */\r\nclass HeadlessGLKernel extends WebGLKernel {\r\n  static get isSupported() { return false }\r\n  static isContextMatch() { return false }\r\n  static getIsTextureFloat() { return false }\r\n  static getIsDrawBuffers() { return false }\r\n  static getChannelCount() { return 1 }\r\n  static get testCanvas() { return null }\r\n  static get testContext() { return null }\r\n  static get features() { return null }\r\n  static setupFeatureChecks() {}\r\n  static destroyContext() {}\r\n  initCanvas() { return {} }\r\n  initContext() { return null }\r\n  toString() { return '' }\r\n  initExtensions() {}\r\n  build() {}\r\n  destroyExtensions() {}\r\n  setOutput() {}\r\n\r\n  static getFeatures() {\r\n    return Object.freeze({\r\n      isFloatRead: false,\r\n      isIntegerDivisionAccurate: false,\r\n      isTextureFloat: false,\r\n      isDrawBuffers: false,\r\n      kernelMap: false,\r\n      channelCount: 1,\r\n    });\r\n  }\r\n};\r\n\r\nconst lib = GPU;\r\nlib.alias = alias;\r\nlib.CPUFunctionNode = CPUFunctionNode;\r\nlib.CPUKernel = CPUKernel;\r\nlib.FunctionBuilder = FunctionBuilder;\r\nlib.FunctionNode = FunctionNode;\r\nlib.HeadlessGLKernel = HeadlessGLKernel;\r\nlib.Input = Input;\r\nlib.input = input;\r\nlib.Texture = Texture;\r\nlib.utils = { ...common, ...utils };\r\nlib.WebGL2FunctionNode = WebGL2FunctionNode;\r\nlib.WebGL2Kernel = WebGL2Kernel;\r\nlib.WebGLFunctionNode = WebGLFunctionNode;\r\nlib.WebGLKernel = WebGLKernel;\r\nlib.GLKernel = GLKernel;\r\nlib.Kernel = Kernel;\r\n\r\nexport default lib;\r\n","import { utils } from './utils';\r\n\r\n/**\r\n * @param name\r\n * @param source\r\n * @returns {Function}\r\n */\r\nexport function alias(name, source) {\r\n  const fnString = source.toString();\r\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\r\n  ${ utils.getFunctionBodyFromString(fnString) }\r\n}`)();\r\n}\r\n"],"names":["setupArguments","args","newArguments","Array","length","i","arg","toArray","mock1D","arguments","row","Float32Array","this","output","x","thread","y","z","_fn","apply","mock2D","matrix","mock2DGraphical","mock3D","cube","apiDecorate","kernel","setOutput","setupOutput","graphical","setupGraphical","toJSON","Error","setConstants","flag","constants","setGraphical","setCanvas","canvas","setContext","context","exec","Promise","resolve","reject","e","getPixels","flip","pixels","width","height","halfHeight","bytesPerRow","temp","Uint8ClampedArray","result","slice","topOffset","bottomOffset","set","subarray","copyWithin","flipPixels","_imageData","data","color","r","g","b","a","Math","floor","index","_colorData","setWarnVarUsage","setOptimizeFloatMemory","setArgumentTypes","setDebug","setLoopMaxIterations","setPipeline","setPrecision","setImmutable","setFunctions","addSubKernel","destroy","validateSettings","createImageData","fn","settings","ARGUMENT_NAMES","FUNCTION_NAME","STRIP_COMMENTS","isFunction","funcObj","getFunctionNameFromString","funcStr","trim","functionToIFunction","source","sourceString","toString","argumentTypes","isArray","getArgumentNamesFromString","map","name","returnType","warnDeprecated","type","oldName","newName","msg","console","warn","isFunctionString","toLowerCase","fnStr","replace","indexOf","match","array","isNaN","erectMemoryOptimized2DFloat","yResults","offset","erectMemoryOptimized3DFloat","depth","zResults","getAstString","ast","lines","split","start","loc","end","line","push","substring","column","join","Input","[object Object]","value","size","Int32Array","w","h","d","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","pos","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","has","obj","propName","call","Position","col","n","SourceLocation","p","sourceFile","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","opt","tokens","token","block","text","startLoc","endLoc","comment","range","pushComment","keywordRegexp","words","Parser","input","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","parse","node","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","lastIndex","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","argument","cur","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","list","label$1","statementStart","generator","async","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","this$1","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","liberal","delegate","pp$4","message","getLineInfo","err","SyntaxError","raisedAt","pp$5","target","sources","len","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","$LONE","General_Category","Script","gc","sc","Script_Extensions","scx","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","esc","Texture","texture","dimensions","constructor","deleteTexture","getSystemEndianness","ArrayBuffer","Uint32Array","Uint8Array","_systemEndianness","getVariableType","strictIntegers","nodeName","Boolean","Number","isInteger","utils","systemEndianness","getFunctionBodyFromString","isActiveClone","clone","texelCount","optimizeFloatMemory","precision","ceil","closestSquareDimensions","sqrt","high","low","bitRatio","roundTo","pad","ret","dim","reverse","from","flatten4dArrayTo","flatten3dArrayTo","flatten2dArrayTo","part","buffer","byteOffset","props","getOwnPropertyNames","getPrototypeOf","linesToString","erectPackedFloat","erect2DPackedFloat","xStart","xEnd","erect3DPackedFloat","erectMemoryOptimizedFloat","erectFloat","xResults","erect2DFloat","erect3DFloat","erectArray2","xResultsMax","erect2DArray2","XResultsMax","erect3DArray2","erectArray3","erect2DArray3","erect3DArray3","erectArray4","erect2DArray4","erect3DArray4","flattenFunctionToString","findDependency","thisLookup","doNotDefine","flattened","functionDependencies","flatten","results","lookups","lookup","foundSource","flattenedFunctionDependencies","functionDependency","Kernel","isSupported","useLegacyEncoder","fallbackRequested","onRequestFallback","argumentNames","argumentSizes","argumentBitRatios","kernelArguments","kernelConstants","debug","loopMaxIterations","constantTypes","constantBitRatios","dynamicArguments","dynamicOutput","checkContext","gpu","functions","nativeFunctions","injectedNative","subKernels","validate","immutable","pipeline","tactic","leadingReturnStatement","followingReturnStatement","fixIntegerDivisionAccuracy","warnVarUsage","initCanvas","initContext","initPlugins","argType","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","argumentIndex","subKernel","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","threadDim","argumentsTypes","pluginNames","FunctionBuilder","FunctionNode","extraNodeOptions","kernelConstant","needsArgumentType","functionName","functionBuilder","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentTypes","lookupFunctionArgumentName","lookupFunctionArgumentBitRatio","argumentName","triggerImplyArgumentType","argumentType","triggerTrackArgumentSynonym","calleeFunctionName","trackArgumentSynonym","lookupArgumentSynonym","originFunctionName","onFunctionCall","trackFunctionCall","nodeOptions","isRootKernel","onNestedFunction","nestedFunction","traceFunctionAST","addFunctionNode","rootNodeOptions","functionNodes","fromJSON","rootNode","subKernelNodes","isSubKernel","functionMap","nativeFunctionNames","lookupChain","argumentChain","functionNodeDependencies","functionCalls","nativeFunction","functionNode","retList","functionIndex","calledFunctions","traceFunctionCalls","dependantFunctionName","splice","getPrototypes","getPrototypesFromFunctionNames","keys","functionList","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","j","getType","getJsAST","_getNativeFunction","argumentSynonym","synonymIndex","fnNode","calleeArgumentName","synonymUseIndex","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","runningContexts","contexts","identifiers","returnStatements","inLoopInit","scan","currentContext","run","newContext","origin","forceInteger","assignable","states","triggerImplyArgumentBitRatio","strictTypingChecking","literalTypes","_string","_internalVariableNames","astMemberExpressionUnroll","firstExpression","astErrorOutput","inParser","freeze","functionAST","dependencies","getDependencies","valueType","realType","isSafe","isSafeDependencies","identifier","getDeclaration","typeLookupMap","constantName","astGeneric","literalKey","isAstMathFunction","inferArgumentTypesIfNeeded","isState","rightType","lastType","isAstVariable","getVariableSignature","findIdentifierOrigin","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","getMemberExpressionDetails","signature","xProperty","yProperty","zProperty","unshift","signatureString","retArr","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","error","debugString","splitLines","lineBefore","arrNode","isChildFunction","astFunction","esNode","eNode","brNode","crNode","varDecNode","firstDeclaration","markupType","typeMap","iVarDecNode","sNode","uNode","checkAndUpconvertBitwiseUnary","logNode","variableSignature","astToFind","stack","atNode","shift","Float","Integer","Array(2)","Array(3)","Array(4)","Array2D","Array3D","HTMLImage","HTMLVideo","HTMLImageArray","NumberTexture","MemoryOptimizedNumberTexture","Array1D(2)","Array1D(3)","Array1D(4)","Array2D(2)","Array2D(3)","Array2D(4)","Array3D(2)","Array3D(3)","Array3D(4)","ArrayTexture(1)","ArrayTexture(2)","ArrayTexture(3)","ArrayTexture(4)","CPUFunctionNode","idtNode","forNode","initArr","testArr","updateArr","bodyArr","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","bNode","varWarn","ifNode","tNode","mNode","markupName","isInput","constant","targetTypes","arrLen","subNode","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","JSON","stringify","constantsToString","colorFn","propertyName","getPixelsFn","constantKeys","flattenedImageTo3DArray","_imageTo3DArray","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","CPUKernel","features","kernelMap","isIntegerDivisionAccurate","mode","combinedKernel","super","mergeSettings","translatedSources","document","createElement","OffscreenCanvas","getContext","getDimensions","checkOutput","fromKernel","getKernelResultType","setupConstants","translateSource","kernelString","getKernelString","log","Function","bind","kernelThreadString","filter","_getLoopMaxString","_processConstants","_processArguments","_graphicalKernelBody","_resultKernelBody","variableName","media","videoWidth","videoHeight","ctx","drawImage","pixelsData","getImageData","imageArray","pixel","images","imagesArray","_resultKernel1DLoop","_kernelOutput","_resultKernel2DLoop","_resultKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","_mapSubKernels","removeCanvasReference","json","GLTextureFloat","gl","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","RGBA","FLOAT","renderRawOutput","renderValues","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","UNSIGNED_BYTE","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","testContext","testCanvas","build","renderOutput","v1","v2","fix","floatTextures","isStartingVariableName","isVariableChar","char","nextChar","lastKernel","texSize","bytes","splitArray","transferValues","formatValues","TextureConstructor","translatedSource","renderStrategy","compiledFragmentShader","compiledVertexShader","maxTextureSize","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderTexture","renderKernels","renderKernelsToTextures","PackedPixelTo3DFloat","PackedPixelTo2DFloat","PackedPixelToFloat","requestFallback","renderKernelsToArrays","readFloatPixelsToFloat32Array","FloatTexture","MemoryOptimizedFloatPixelToMemoryOptimized3DFloat","MemoryOptimizedFloatPixelToMemoryOptimized2DFloat","MemoryOptimizedFloatPixelToMemoryOptimizedFloat","FloatPixelTo3DArray2","FloatPixelTo2DArray2","FloatPixelToArray2","FloatPixelTo3DArray3","FloatPixelTo2DArray3","FloatPixelToArray3","FloatPixelTo3DArray4","FloatPixelTo2DArray4","FloatPixelToArray4","FloatPixelTo3DFloat","FloatPixelTo2DFloat","FloatPixelToFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","outputTexture","subKernelOutputTextures","getKernelTextureSize","updateMaxTexSize","viewport","maxTexSize","_setupOutputTexture","_setupSubOutputTextures","PackedPixelToUint8Array","PackedTexture","FloatPixelToFloat32Array","int","float","vec2","vec3","vec4","WebGLFunctionNode","castLiteralToFloat","castValueToInteger","castLiteralToInteger","round","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","bitwiseResult","checkAndUpconvertBitwiseOperators","foundOperator","%","**","&","|","^","<<",">>",">>>","~","inForLoopInit","info","actualType","declarationResult","varName","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","LiteralInteger","===","!==","onBeforeRun","setUniform1f","random","functionReturnType","fragmentShader","vertexShader","glWiretap","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","addComment","checkThrowError","readPixelsVariableName","insertVariable","setIndent","getContextVariableName","indent","getError","contextVariables","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","argumentAsStrings","writePPM","argumentsToString","addVariable","drawBuffers","methodCallToString","trackablePrimitive","entityNames","imageCount","spaces","repeat","sourceVariable","imageVariable","getExtensionEntity","drawBuffersWEBGL","extensionEntityNames","hasLines","hasSingleQuotes","hasDoubleQuotes","instantiationString","argumentToString","module","window","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","postResult","targetName","subKernelsResultVariableSetup","subKernelsResultIndex","getRenderString","findKernelValue","forEach","kernelArgument","uploadValue","imageIndex","flattenTo","getStringValueHandler","textureName","getToArrayString","subKernelResult","subKernelTextureName","getGetPixelsString","constantsUpload","readBackValue","kernelResult","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","variableIndex","variable","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","WebGLKernelValue","dimensionsId","sizeId","initialValueConstructor","onRequestTexture","onRequestIndex","textureSize","setupTexture","getTransferArrayType","Float64Array","Type","valuesFlat","WebGLKernelValueBoolean","setUniform1i","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","checkSize","requestTexture","inputImage","activeTexture","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","WebGLKernelValueDynamicHTMLImage","setUniform3iv","setUniform2iv","updateValue","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","getMemoryOptimizedFloatTextureSize","uploadArrayLength","WebGLKernelValueUnsignedInput","getMemoryOptimizedPackedTextureSize","TranserArrayType","preUploadValue","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","inputTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueSingleArray1DI","setShape","valueDimensions","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","setUniform2fv","WebGLKernelValueSingleArray3","setUniform3fv","WebGLKernelValueSingleArray4","setUniform4fv","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","testExtensions","triangleNoise","canvases","maxTexSizes","WebGLKernel","setupFeatureChecks","isContextMatch","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","getFeatures","WebGLRenderingContext","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","getParameter","MAX_DRAW_BUFFERS_WEBGL","undefined","lookupKernelValueType","endianness","extensions","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","switchingKernels","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","alpha","antialias","pluginsToUse","some","pluginName","WEBGL_color_buffer_float","checkTextureSize","canvasIndex","getPrototypeString","requiredChannels","returnTypes","getReturnTypes","needsArgumentTypes","textureIndexes","createTexture","TEXTURE0","forceUploadKernelConstants","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","getSubKernelResultType","scissor","setUniform2f","bindRenderbuffer","RENDERBUFFER","drawArrays","TRIANGLE_STRIP","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4iv","uniform4fv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","FLOAT_TACTIC_DECLARATION","getFloatTacticDeclaration","INT_TACTIC_DECLARATION","getIntTacticDeclaration","SAMPLER_2D_TACTIC_DECLARATION","getSampler2DTacticDeclaration","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","getSampler2DArrayTacticDeclaration","getSource","kernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","_getVertShaderArtifactMap","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","idx","destroyExtensions","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","variablePrecision","getVariablePrecisionString","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","TEXTURE_2D_ARRAY","texImage3D","xOffset","yOffset","imageDepth","texSubImage3D","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","RGBA32F","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2Kernel","EXT_color_buffer_float","WebGL2RenderingContext","getMaxTextureSize","MAX_DRAW_BUFFERS","MAX_TEXTURE_SIZE","texStorage2D","R32F","RG32F","bindKernelToShortcut","shortcut","allPropertiesOf","__defineGetter__","__defineSetter__","kernelOrder","kernelTypes","internalKernels","webgl2","webgl","upgradeDeprecatedCreateKernelSettings","upgradedSettings","floatOutput","outputToTexture","outputImmutable","lib","isGPUSupported","isKernelMapSupported","isOffscreenCanvasSupported","Worker","importScripts","isWebGLSupported","isWebGL2Supported","isHeadlessGLSupported","isCanvasSupported","HTMLCanvasElement","isGPUHTMLImageArraySupported","isSinglePrecisionSupported","kernels","chooseKernel","addFunction","addNativeFunction","ExternalKernel","devKernel","gpuMock","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","mergedSettings","existingKernel","newKernel","accept","replacementKernel","kernelRunShortcut","createKernel","firstKernel","nativeFunctionArguments","nativeFunctionReturnType","setTimeout","destroyContext","alias","fnString","HeadlessGLKernel","common"],"mappings":"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KACA,QACA,0BACA,OACA,0BACA,OACA,0BACA,MACA,+BACA,QACA,0BACA,MACA,0BACA,MACA,OACA,+BACA,KACA,aACA,MACA,YACA,MACA,QACA,kBACA,iBACA,sBACA,qBACA,WACA,MACA,gBACA,UACA,kBACA,SACA,YACA,MACA,sBACA,OACA,uBACA,OACA,cACA,MACA,WACA,MACA,cACA,OACA,eACA,SACA,0BACA,MACA,YACA,QACA,OACA,0BACA,QACA,iBACA,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEFC,iBAAoB,CAClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEFC,OAAU,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJzrB,MAAM2Q,UAAUtI,KAAKrH,MAAM6C,GAAK0nB,MAAO1nB,GAAK2nB,kBAC5C3nB,GAAK6nB,GAAK7nB,GAAK2nB,iBACf3nB,GAAK8nB,GAAK9nB,GAAK+nB,k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"}