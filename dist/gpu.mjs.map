{"version":3,"file":"gpu.mjs","sources":["../node_modules/gpu-mock.js/index.js","../src/common.js","../src/input.js","../src/texture.js","../src/utils.js","../src/backend/kernel.js","../src/backend/function-builder.js","../src/backend/function-tracer.js","../src/backend/function-node.js","../src/backend/cpu/function-node.js","../src/backend/cpu/kernel-string.js","../src/backend/cpu/kernel.js","../src/backend/gl/texture/float.js","../src/backend/gl/texture/array-2-float.js","../src/backend/gl/texture/array-2-float-2d.js","../src/backend/gl/texture/array-2-float-3d.js","../src/backend/gl/texture/array-3-float.js","../src/backend/gl/texture/array-3-float-2d.js","../src/backend/gl/texture/array-3-float-3d.js","../src/backend/gl/texture/array-4-float.js","../src/backend/gl/texture/array-4-float-2d.js","../src/backend/gl/texture/array-4-float-3d.js","../src/backend/gl/texture/float-2d.js","../src/backend/gl/texture/float-3d.js","../src/backend/gl/texture/memory-optimized.js","../src/backend/gl/texture/memory-optimized-2d.js","../src/backend/gl/texture/memory-optimized-3d.js","../src/backend/gl/texture/unsigned.js","../src/backend/gl/texture/unsigned-2d.js","../src/backend/gl/texture/unsigned-3d.js","../src/backend/gl/texture/graphical.js","../src/backend/gl/kernel.js","../src/backend/web-gl/function-node.js","../src/plugins/triangle-noise.js","../src/backend/web-gl/fragment-shader.js","../src/backend/web-gl/vertex-shader.js","../node_modules/gl-wiretap/index.js","../src/backend/gl/kernel-string.js","../src/backend/kernel-value.js","../src/backend/web-gl/kernel-value/index.js","../src/backend/web-gl/kernel-value/boolean.js","../src/backend/web-gl/kernel-value/float.js","../src/backend/web-gl/kernel-value/integer.js","../src/backend/web-gl/kernel-value/html-image.js","../src/backend/web-gl/kernel-value/dynamic-html-image.js","../src/backend/web-gl/kernel-value/html-video.js","../src/backend/web-gl/kernel-value/dynamic-html-video.js","../src/backend/web-gl/kernel-value/single-input.js","../src/backend/web-gl/kernel-value/dynamic-single-input.js","../src/backend/web-gl/kernel-value/unsigned-input.js","../src/backend/web-gl/kernel-value/dynamic-unsigned-input.js","../src/backend/web-gl/kernel-value/memory-optimized-number-texture.js","../src/backend/web-gl/kernel-value/dynamic-memory-optimized-number-texture.js","../src/backend/web-gl/kernel-value/number-texture.js","../src/backend/web-gl/kernel-value/dynamic-number-texture.js","../src/backend/web-gl/kernel-value/single-array.js","../src/backend/web-gl/kernel-value/dynamic-single-array.js","../src/backend/web-gl/kernel-value/single-array1d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array1d-i.js","../src/backend/web-gl/kernel-value/single-array2d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array2d-i.js","../src/backend/web-gl/kernel-value/single-array3d-i.js","../src/backend/web-gl/kernel-value/dynamic-single-array3d-i.js","../src/backend/web-gl/kernel-value/single-array2.js","../src/backend/web-gl/kernel-value/single-array3.js","../src/backend/web-gl/kernel-value/single-array4.js","../src/backend/web-gl/kernel-value/unsigned-array.js","../src/backend/web-gl/kernel-value/dynamic-unsigned-array.js","../src/backend/web-gl/kernel-value-maps.js","../src/backend/web-gl/kernel.js","../src/backend/web-gl2/function-node.js","../src/backend/web-gl2/fragment-shader.js","../src/backend/web-gl2/vertex-shader.js","../src/backend/web-gl2/kernel-value/boolean.js","../src/backend/web-gl2/kernel-value/float.js","../src/backend/web-gl2/kernel-value/integer.js","../src/backend/web-gl2/kernel-value/html-image.js","../src/backend/web-gl2/kernel-value/dynamic-html-image.js","../src/backend/web-gl2/kernel-value/html-image-array.js","../src/backend/web-gl2/kernel-value/dynamic-html-image-array.js","../src/backend/web-gl2/kernel-value/html-video.js","../src/backend/web-gl2/kernel-value/dynamic-html-video.js","../src/backend/web-gl2/kernel-value/single-input.js","../src/backend/web-gl2/kernel-value/dynamic-single-input.js","../src/backend/web-gl2/kernel-value/unsigned-input.js","../src/backend/web-gl2/kernel-value/dynamic-unsigned-input.js","../src/backend/web-gl2/kernel-value/memory-optimized-number-texture.js","../src/backend/web-gl2/kernel-value/dynamic-memory-optimized-number-texture.js","../src/backend/web-gl2/kernel-value/number-texture.js","../src/backend/web-gl2/kernel-value/dynamic-number-texture.js","../src/backend/web-gl2/kernel-value/single-array.js","../src/backend/web-gl2/kernel-value/dynamic-single-array.js","../src/backend/web-gl2/kernel-value/single-array1d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array1d-i.js","../src/backend/web-gl2/kernel-value/single-array2d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array2d-i.js","../src/backend/web-gl2/kernel-value/single-array3d-i.js","../src/backend/web-gl2/kernel-value/dynamic-single-array3d-i.js","../src/backend/web-gl2/kernel-value/single-array2.js","../src/backend/web-gl2/kernel-value/single-array3.js","../src/backend/web-gl2/kernel-value/single-array4.js","../src/backend/web-gl2/kernel-value/unsigned-array.js","../src/backend/web-gl2/kernel-value/dynamic-unsigned-array.js","../src/backend/web-gl2/kernel-value-maps.js","../src/backend/web-gl2/kernel.js","../src/kernel-run-shortcut.js","../src/base-gpu.js","../src/backend/headless-gl/kernel.js","../src/gpu.js","../src/alias.js","../src/index.js"],"sourcesContent":["function setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    // cpu is not flipped by default\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  // these are added for api compatibility, but have no affect\n  kernel.setWarnVarUsage = () => {\n    return kernel;\n  };\n  kernel.setOptimizeFloatMemory = () => {\n    return kernel;\n  };\n  kernel.setArgumentTypes = () => {\n    return kernel;\n  };\n  kernel.setDebug = () => {\n    return kernel;\n  };\n  kernel.setLoopMaxIterations = () => {\n    return kernel;\n  };\n  kernel.setPipeline = () => {\n    return kernel;\n  };\n  kernel.setPrecision = () => {\n    return kernel;\n  };\n  kernel.setImmutable = () => {\n    return kernel;\n  };\n  kernel.setFunctions = () => {\n    return kernel;\n  };\n  kernel.addSubKernel = () => {\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  // https://stackoverflow.com/a/41973289/1324039\n  const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n  const bytesPerRow = width * 4;\n  // make a temp buffer to hold one row\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    // make copy of a row on the top half\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    // copy a row from the bottom half to the top\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    // copy the copy of the top half row to the bottom half\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n","/**\r\n * @fileoverview Branch of utils to prevent circular dependencies.\r\n */\r\n\r\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\r\nconst FUNCTION_NAME = /function ([^(]*)/;\r\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\n\r\n/**\r\n * @descReturn TRUE, on a JS function\r\n * @param {Function} funcObj - Object to validate if its a function\r\n * @returns  {Boolean} TRUE if the object is a JS function\r\n */\r\nexport function isFunction(funcObj) {\r\n  return typeof(funcObj) === 'function';\r\n};\r\n\r\n/**\r\n * @desc Return the function name from a JS function string\r\n * @param {String} funcStr - String of JS function to validate\r\n * @returns {String} Function name string (if found)\r\n */\r\nexport function getFunctionNameFromString(funcStr) {\r\n  return FUNCTION_NAME.exec(funcStr)[1].trim();\r\n};\r\n\r\n/**\r\n *\r\n * @param {String|Function} source\r\n * @param {IFunctionSettings} [settings]\r\n * @returns {IFunction}\r\n */\r\nexport function functionToIFunction(source, settings) {\r\n  settings = settings || {};\r\n  if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\r\n  const sourceString = typeof source === 'string' ? source : source.toString();\r\n\r\n  let argumentTypes = [];\r\n\r\n  if (Array.isArray(settings.argumentTypes)) {\r\n    argumentTypes = settings.argumentTypes;\r\n  } else if (typeof settings.argumentTypes === 'object') {\r\n    argumentTypes = getArgumentNamesFromString(sourceString)\r\n      .map(name => settings.argumentTypes[name]) || [];\r\n  } else {\r\n    argumentTypes = settings.argumentTypes || [];\r\n  }\r\n\r\n  return {\r\n    source: sourceString,\r\n    argumentTypes,\r\n    returnType: settings.returnType || null,\r\n  };\r\n};\r\n\r\nexport function warnDeprecated(type, oldName, newName) {\r\n  const msg = newName\r\n    ? `It has been replaced with \"${ newName }\"`\r\n    : 'It has been removed';\r\n  console.warn(`You are using a deprecated ${ type } \"${ oldName }\". ${msg}. Fixing, but please upgrade as it will soon be removed.`)\r\n};\r\n\r\n/**\r\n * @desc Return TRUE, on a valid JS function string\r\n * Note: This does just a VERY simply sanity check. And may give false positives.\r\n *\r\n * @param {String} fn - String of JS function to validate\r\n * @returns {Boolean} TRUE if the string passes basic validation\r\n */\r\nexport function isFunctionString(fn) {\r\n  if (typeof fn === 'string') {\r\n    return (fn\r\n      .slice(0, 'function'.length)\r\n      .toLowerCase() === 'function');\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * @desc Return list of argument names extracted from a javascript function\r\n * @param {String} fn - String of JS function to validate\r\n * @returns {String[]}  Array representing all the parameter names\r\n */\r\nexport function getArgumentNamesFromString(fn) {\r\n  const fnStr = fn.replace(STRIP_COMMENTS, '');\r\n  let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\r\n  if (result === null) {\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * @desc Checks if is an array or Array-like object\r\n * @param {Object} array - The argument object to check if is array\r\n * @returns {Boolean}  true if is array or Array-like object\r\n */\r\nexport function isArray(array) {\r\n  return !isNaN(array.length);\r\n};\r\n\r\nexport function erectMemoryOptimized2DFloat(array, width, height) {\r\n  const yResults = new Array(height);\r\n  for (let y = 0; y < height; y++) {\r\n    const offset = y * width;\r\n    yResults[y] = array.subarray(offset, offset + width);\r\n  }\r\n  return yResults;\r\n};\r\n\r\nexport function erectMemoryOptimized3DFloat(array, width, height, depth) {\r\n  const zResults = new Array(depth);\r\n  for (let z = 0; z < depth; z++) {\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const offset = (z * height * width) + (y * width);\r\n      yResults[y] = array.subarray(offset, offset + width);\r\n    }\r\n    zResults[z] = yResults;\r\n  }\r\n  return zResults;\r\n};\r\n\r\nexport function getAstString(source, ast) {\r\n  const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\r\n  const start = ast.loc.start;\r\n  const end = ast.loc.end;\r\n  const result = [];\r\n  if (start.line === end.line) {\r\n    result.push(lines[start.line - 1].substring(start.column, end.column));\r\n  } else {\r\n    result.push(lines[start.line - 1].slice(start.column));\r\n    for (let i = start.line; i < end.line; i++) {\r\n      result.push(lines[i]);\r\n    }\r\n    result.push(lines[end.line - 1].slice(0, end.column));\r\n  }\r\n  return result.join('\\n');\r\n};\r\n","import { erectMemoryOptimized2DFloat, erectMemoryOptimized3DFloat } from './common';\r\n\r\nexport class Input {\r\n  constructor(value, size) {\r\n    this.value = value;\r\n    if (Array.isArray(size)) {\r\n      this.size = size;\r\n    } else {\r\n      this.size = new Int32Array(3);\r\n      if (size.z) {\r\n        this.size = new Int32Array([size.x, size.y, size.z]);\r\n      } else if (size.y) {\r\n        this.size = new Int32Array([size.x, size.y]);\r\n      } else {\r\n        this.size = new Int32Array([size.x]);\r\n      }\r\n    }\r\n\r\n    const [w, h, d] = this.size;\r\n    if (d) {\r\n      if (this.value.length !== (w * h * d)) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\r\n      }\r\n    } else if (h) {\r\n      if (this.value.length !== (w * h)) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\r\n      }\r\n    } else {\r\n      if (this.value.length !== w) {\r\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  toArray() {\r\n    const [ w, h, d ] = this.size;\r\n    if (d) {\r\n      return erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\r\n    } else if (h) {\r\n      return erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\r\n    } else {\r\n      return this.value;\r\n    }\r\n  }\r\n};\r\n\r\nexport function input(value, size) {\r\n  return new Input(value, size);\r\n};\r\n","/**\r\n * @desc WebGl Texture implementation in JS\r\n * @param {ITextureSettings} settings\r\n */\r\nexport class Texture {\r\n  constructor(settings) {\r\n    const {\r\n      texture,\r\n      size,\r\n      dimensions,\r\n      output,\r\n      context,\r\n      type = 'NumberTexture',\r\n    } = settings;\r\n    if (!output) throw new Error('settings property \"output\" required.');\r\n    if (!context) throw new Error('settings property \"context\" required.');\r\n    this.texture = texture;\r\n    this.size = size;\r\n    this.dimensions = dimensions;\r\n    this.output = output;\r\n    this.context = context;\r\n    this.kernel = null;\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * @desc Converts the Texture into a JavaScript Array\r\n   * @returns {Number[]|Number[][]|Number[][][]}\r\n   */\r\n  toArray() {\r\n    throw new Error(`Not implemented on ${this.constructor.name}`);\r\n  }\r\n\r\n  /**\r\n   * @desc Deletes the Texture\r\n   */\r\n  delete() {\r\n    return this.context.deleteTexture(this.texture);\r\n  }\r\n};\r\n","import { parse } from 'acorn';\r\nimport { Texture } from './texture';\r\nimport { Input } from './input';\r\nimport {\r\n  getAstString,\r\n  erectMemoryOptimized2DFloat,\r\n  erectMemoryOptimized3DFloat,\r\n  functionToIFunction,\r\n  getArgumentNamesFromString,\r\n  getFunctionNameFromString,\r\n  isArray,\r\n  isFunction,\r\n  isFunctionString,\r\n  warnDeprecated\r\n} from './common';\r\n\r\nexport function getSystemEndianness() {\r\n  const b = new ArrayBuffer(4);\r\n  const a = new Uint32Array(b);\r\n  const c = new Uint8Array(b);\r\n  a[0] = 0xdeadbeef;\r\n  if (c[0] === 0xef) return 'LE';\r\n  if (c[0] === 0xde) return 'BE';\r\n  throw new Error('unknown endianness');\r\n};\r\n\r\nconst _systemEndianness = getSystemEndianness();\r\n\r\n/**\r\n *\r\n * @desc Gets the system endianness, and cache it\r\n * @returns {String} 'LE' or 'BE' depending on system architecture\r\n * Credit: https://gist.github.com/TooTallNate/4750953\r\n */\r\nexport function systemEndianness() {\r\n  return _systemEndianness;\r\n};\r\n\r\n/**\r\n * @desc Evaluate the argument type, to apply respective logic for it\r\n * @param {Object} value - The argument object to evaluate type\r\n * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\r\n */\r\nexport function getVariableType(value, strictIntegers) {\r\n  if (isArray(value)) {\r\n    if (value[0].nodeName === 'IMG') {\r\n      return 'HTMLImageArray';\r\n    }\r\n    return 'Array';\r\n  }\r\n\r\n  switch (value.constructor) {\r\n    case Boolean:\r\n      return 'Boolean';\r\n    case Number:\r\n      return strictIntegers && Number.isInteger(value) ? 'Integer' : 'Float';\r\n    case Texture:\r\n      return value.type;\r\n    case Input:\r\n      return 'Input';\r\n  }\r\n\r\n  switch (value.nodeName) {\r\n    case 'IMG':\r\n      return 'HTMLImage';\r\n    case 'VIDEO':\r\n      return 'HTMLVideo';\r\n  }\r\n\r\n  return value.hasOwnProperty('type') ? value.type : 'Unknown';\r\n};\r\n\r\n/**\r\n * @desc Various utility functions / snippets of code that GPU.JS uses internally.\r\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\r\n */\r\nconst utils = {\r\n  systemEndianness,\r\n  getSystemEndianness,\r\n  isFunction,\r\n  isFunctionString,\r\n  getFunctionNameFromString,\r\n\r\n  getFunctionBodyFromString(funcStr) {\r\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\r\n  },\r\n\r\n  getArgumentNamesFromString,\r\n\r\n  /**\r\n   * @desc Returns a clone\r\n   * @param {Object} obj - Object to clone\r\n   * @returns {Object|Array} Cloned object\r\n   */\r\n  clone(obj) {\r\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\r\n\r\n    const temp = obj.constructor(); // changed\r\n\r\n    for (let key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        obj.isActiveClone = null;\r\n        temp[key] = utils.clone(obj[key]);\r\n        delete obj.isActiveClone;\r\n      }\r\n    }\r\n\r\n    return temp;\r\n  },\r\n\r\n  isArray,\r\n  getVariableType,\r\n\r\n  getKernelTextureSize(settings, dimensions) {\r\n    let [w, h, d] = dimensions;\r\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\r\n\r\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\r\n      w = texelCount = Math.ceil(texelCount / 4);\r\n    }\r\n    // if given dimensions == a 2d image\r\n    if (h > 1 && w * h === texelCount) {\r\n      return new Int32Array([w, h]);\r\n    }\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {Number} length\r\n   * @returns {TextureDimensions}\r\n   */\r\n  closestSquareDimensions(length) {\r\n    const sqrt = Math.sqrt(length);\r\n    let high = Math.ceil(sqrt);\r\n    let low = Math.floor(sqrt);\r\n    while (high * low < length) {\r\n      high--;\r\n      low = Math.ceil(length / high);\r\n    }\r\n    return new Int32Array([low, Math.ceil(length / low)]);\r\n  },\r\n\r\n  /**\r\n   * A texture takes up four\r\n   * @param {OutputDimensions} dimensions\r\n   * @param {Number} bitRatio\r\n   * @returns {TextureDimensions}\r\n   */\r\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\r\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\r\n    const texelCount = totalArea / bitRatio;\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param dimensions\r\n   * @param bitRatio\r\n   * @returns {*|TextureDimensions}\r\n   */\r\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\r\n    const [w, h, d] = dimensions;\r\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\r\n    const texelCount = totalArea / (4 / bitRatio);\r\n    return utils.closestSquareDimensions(texelCount);\r\n  },\r\n\r\n  roundTo(n, d) {\r\n    return Math.floor((n + d - 1) / d) * d;\r\n  },\r\n  /**\r\n   * @desc Return the dimension of an array.\r\n   * @param {Array|String|Texture|Input} x - The array\r\n   * @param {Boolean} [pad] - To include padding in the dimension calculation\r\n   * @returns {OutputDimensions}\r\n   */\r\n  getDimensions(x, pad) {\r\n    let ret;\r\n    if (isArray(x)) {\r\n      const dim = [];\r\n      let temp = x;\r\n      while (isArray(temp)) {\r\n        dim.push(temp.length);\r\n        temp = temp[0];\r\n      }\r\n      ret = dim.reverse();\r\n    } else if (x instanceof Texture) {\r\n      ret = x.output;\r\n    } else if (x instanceof Input) {\r\n      ret = x.size;\r\n    } else {\r\n      throw new Error(`Unknown dimensions of ${x}`);\r\n    }\r\n\r\n    if (pad) {\r\n      ret = Array.from(ret);\r\n      while (ret.length < 3) {\r\n        ret.push(1);\r\n      }\r\n    }\r\n\r\n    return new Int32Array(ret);\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 2d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten2dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let y = 0; y < array.length; y++) {\r\n      target.set(array[y], offset);\r\n      offset += array[y].length;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 3d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten3dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let z = 0; z < array.length; z++) {\r\n      for (let y = 0; y < array[z].length; y++) {\r\n        target.set(array[z][y], offset);\r\n        offset += array[z][y].length;\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 4d array into a one-dimensional target array\r\n   * @param {Array|*} array\r\n   * @param {Float32Array|Float64Array} target\r\n   */\r\n  flatten4dArrayTo(array, target) {\r\n    let offset = 0;\r\n    for (let l = 0; l < array.length; l++) {\r\n      for (let z = 0; z < array[l].length; z++) {\r\n        for (let y = 0; y < array[l][z].length; y++) {\r\n          target.set(array[l][z][y], offset);\r\n          offset += array[l][z][y].length;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\r\n   * @param {Float32Array|Uint16Array|Uint8Array} array\r\n   * @param {Float32Array} target\r\n   */\r\n  flattenTo(array, target) {\r\n    if (isArray(array[0])) {\r\n      if (isArray(array[0][0])) {\r\n        if (isArray(array[0][0][0])) {\r\n          utils.flatten4dArrayTo(array, target);\r\n        } else {\r\n          utils.flatten3dArrayTo(array, target);\r\n        }\r\n      } else {\r\n        utils.flatten2dArrayTo(array, target);\r\n      }\r\n    } else {\r\n      target.set(array);\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @desc Splits an array into smaller arrays.\r\n   * Number of elements in one small chunk is given by `part`\r\n   *\r\n   * @param {Number[]} array - The array to split into chunks\r\n   * @param {Number} part - elements in one chunk\r\n   *\r\n   * @returns {Number[]} An array of smaller chunks\r\n   */\r\n  splitArray(array, part) {\r\n    const result = [];\r\n    for (let i = 0; i < array.length; i += part) {\r\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\r\n    }\r\n    return result;\r\n  },\r\n\r\n  getAstString,\r\n\r\n  allPropertiesOf(obj) {\r\n    const props = [];\r\n\r\n    do {\r\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props;\r\n  },\r\n\r\n  /**\r\n   * @param {Array} lines - An Array of strings\r\n   * @returns {String} Single combined String, separated by *\\n*\r\n   */\r\n  linesToString(lines) {\r\n    if (lines.length > 0) {\r\n      return lines.join(';\\n') + ';\\n';\r\n    } else {\r\n      return '\\n';\r\n    }\r\n  },\r\n\r\n  warnDeprecated,\r\n  functionToIFunction,\r\n\r\n  flipPixels(pixels, width, height) {\r\n    // https://stackoverflow.com/a/41973289/1324039\r\n    const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\r\n    const bytesPerRow = width * 4;\r\n    // make a temp buffer to hold one row\r\n    const temp = new Uint8ClampedArray(width * 4);\r\n    const result = pixels.slice(0);\r\n    for (let y = 0; y < halfHeight; ++y) {\r\n      const topOffset = y * bytesPerRow;\r\n      const bottomOffset = (height - y - 1) * bytesPerRow;\r\n\r\n      // make copy of a row on the top half\r\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\r\n\r\n      // copy a row from the bottom half to the top\r\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\r\n\r\n      // copy the copy of the top half row to the bottom half\r\n      result.set(temp, bottomOffset);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  erectPackedFloat: (array, width) => {\r\n    return array.subarray(0, width);\r\n  },\r\n  erect2DPackedFloat: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xStart = y * width;\r\n      const xEnd = xStart + width;\r\n      yResults[y] = array.subarray(xStart, xEnd);\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DPackedFloat: (array, width, height, depth) => {\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xStart = (z * height * width) + y * width;\r\n        const xEnd = xStart + width;\r\n        yResults[y] = array.subarray(xStart, xEnd);\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectMemoryOptimizedFloat: (array, width) => {\r\n    return array.subarray(0, width);\r\n  },\r\n  erectMemoryOptimized2DFloat,\r\n  erectMemoryOptimized3DFloat,\r\n  erectFloat: (array, width) => {\r\n    const xResults = new Float32Array(width);\r\n    let i = 0;\r\n    for (let x = 0; x < width; x++) {\r\n      xResults[x] = array[i];\r\n      i += 4;\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DFloat: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    let i = 0;\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Float32Array(width);\r\n      for (let x = 0; x < width; x++) {\r\n        xResults[x] = array[i];\r\n        i += 4;\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DFloat: (array, width, height, depth) => {\r\n    const zResults = new Array(depth);\r\n    let i = 0;\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Float32Array(width);\r\n        for (let x = 0; x < width; x++) {\r\n          xResults[x] = array[i];\r\n          i += 4;\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray2: (array, width) => {\r\n    const xResults = new Array(width);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 2);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray2: (array, width, height) => {\r\n    const yResults = new Array(height);\r\n    const XResultsMax = width * 4;\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * XResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < XResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray2: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray3: (array, width) => {\r\n    const xResults = new Array(width);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 3);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray3: (array, width, height) => {\r\n    const xResultsMax = width * 4;\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * xResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < xResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray3: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n  erectArray4: (array, width) => {\r\n    const xResults = new Array(array);\r\n    const xResultsMax = width * 4;\r\n    let i = 0;\r\n    for (let x = 0; x < xResultsMax; x += 4) {\r\n      xResults[i++] = array.subarray(x, x + 4);\r\n    }\r\n    return xResults;\r\n  },\r\n  erect2DArray4: (array, width, height) => {\r\n    const xResultsMax = width * 4;\r\n    const yResults = new Array(height);\r\n    for (let y = 0; y < height; y++) {\r\n      const xResults = new Array(width);\r\n      const offset = y * xResultsMax;\r\n      let i = 0;\r\n      for (let x = 0; x < xResultsMax; x += 4) {\r\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\r\n      }\r\n      yResults[y] = xResults;\r\n    }\r\n    return yResults;\r\n  },\r\n  erect3DArray4: (array, width, height, depth) => {\r\n    const xResultsMax = width * 4;\r\n    const zResults = new Array(depth);\r\n    for (let z = 0; z < depth; z++) {\r\n      const yResults = new Array(height);\r\n      for (let y = 0; y < height; y++) {\r\n        const xResults = new Array(width);\r\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\r\n        let i = 0;\r\n        for (let x = 0; x < xResultsMax; x += 4) {\r\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\r\n        }\r\n        yResults[y] = xResults;\r\n      }\r\n      zResults[z] = yResults;\r\n    }\r\n    return zResults;\r\n  },\r\n\r\n  /**\r\n   * @param {String} source\r\n   * @param {Object} settings\r\n   * @return {String}\r\n   */\r\n  flattenFunctionToString: (source, settings) => {\r\n    const { findDependency, thisLookup, doNotDefine } = settings;\r\n    let flattened = settings.flattened;\r\n    if (!flattened) {\r\n      flattened = settings.flattened = {};\r\n    }\r\n\r\n    const ast = parse(source);\r\n    const functionDependencies = [];\r\n\r\n    function flatten(ast) {\r\n      if (Array.isArray(ast)) {\r\n        const results = [];\r\n        for (let i = 0; i < ast.length; i++) {\r\n          results.push(flatten(ast[i]));\r\n        }\r\n        return results.join('');\r\n      }\r\n      switch (ast.type) {\r\n        case 'Program':\r\n          return flatten(ast.body);\r\n        case 'FunctionDeclaration':\r\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\r\n        case 'BlockStatement': {\r\n          const result = [];\r\n          for (let i = 0; i < ast.body.length; i++) {\r\n            result.push(flatten(ast.body[i]), ';\\n');\r\n          }\r\n          return `{\\n${result.join('')}}`;\r\n        }\r\n        case 'VariableDeclaration':\r\n          switch (ast.declarations[0].id.type) {\r\n            case 'ObjectPattern': {\r\n              const source = flatten(ast.declarations[0].init);\r\n              const properties = ast.declarations.map(declaration => declaration.id.properties.map(flatten))[0];\r\n              if (/this/.test(source)) {\r\n                const result = [];\r\n                const lookups = properties.map(thisLookup);\r\n                for (let i = 0; i < lookups.length; i++) {\r\n                  const lookup = lookups[i];\r\n                  if (lookup === null) continue;\r\n                  const property = properties[i];\r\n                  result.push(`${ast.kind} ${ property } = ${ lookup };\\n`);\r\n                }\r\n\r\n                return result.join('');\r\n              }\r\n              return `${ast.kind} { ${properties} } = ${source}`;\r\n            }\r\n            case 'ArrayPattern':\r\n              return `${ast.kind} [ ${ ast.declarations.map(declaration => flatten(declaration.id)).join(', ') } ] = ${flatten(ast.declarations[0].init)}`;\r\n          }\r\n          if (doNotDefine && doNotDefine.indexOf(ast.declarations[0].id.name) !== -1) {\r\n            return '';\r\n          }\r\n          return `${ast.kind} ${ast.declarations[0].id.name} = ${flatten(ast.declarations[0].init)}`;\r\n        case 'CallExpression': {\r\n          if (ast.callee.property.name === 'subarray') {\r\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          }\r\n          if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\r\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          }\r\n          if (ast.callee.object.type === 'ThisExpression') {\r\n            functionDependencies.push(findDependency('this', ast.callee.property.name));\r\n            return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          } else if (ast.callee.object.name) {\r\n            const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\r\n            if (foundSource === null) {\r\n              // we're not flattening it\r\n              return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n            } else {\r\n              functionDependencies.push(foundSource);\r\n              // we're flattening it\r\n              return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n            }\r\n          } else if (ast.callee.object.type === 'MemberExpression') {\r\n            return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          } else {\r\n            throw new Error('unknown ast.callee');\r\n          }\r\n        }\r\n        case 'ReturnStatement':\r\n          return `return ${flatten(ast.argument)}`;\r\n        case 'BinaryExpression':\r\n          return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\r\n        case 'UnaryExpression':\r\n          if (ast.prefix) {\r\n            return `${ast.operator} ${flatten(ast.argument)}`;\r\n          } else {\r\n            return `${flatten(ast.argument)} ${ast.operator}`;\r\n          }\r\n          case 'ExpressionStatement':\r\n            return `(${flatten(ast.expression)})`;\r\n          case 'ArrowFunctionExpression':\r\n            return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\r\n          case 'Literal':\r\n            return ast.raw;\r\n          case 'Identifier':\r\n            return ast.name;\r\n          case 'MemberExpression':\r\n            if (ast.object.type === 'ThisExpression') {\r\n              return thisLookup(ast.property.name);\r\n            }\r\n            if (ast.computed) {\r\n              return `${flatten(ast.object)}[${flatten(ast.property)}]`;\r\n            }\r\n            return flatten(ast.object) + '.' + flatten(ast.property);\r\n          case 'ThisExpression':\r\n            return 'this';\r\n          case 'NewExpression':\r\n            return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\r\n          case 'ForStatement':\r\n            return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\r\n          case 'AssignmentExpression':\r\n            return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\r\n          case 'UpdateExpression':\r\n            return `${flatten(ast.argument)}${ast.operator}`;\r\n          case 'IfStatement':\r\n            return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\r\n          case 'ThrowStatement':\r\n            return `throw ${flatten(ast.argument)}`;\r\n          case 'ObjectPattern':\r\n            return ast.properties.map(flatten).join(', ');\r\n          case 'ArrayPattern':\r\n            return ast.elements.map(flatten).join(', ');\r\n          case 'DebuggerStatement':\r\n            return 'debugger;';\r\n          case 'ConditionalExpression':\r\n            return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\r\n          case 'Property':\r\n            if (ast.kind === 'init') {\r\n              return flatten(ast.key);\r\n            }\r\n      }\r\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\r\n    }\r\n    const result = flatten(ast);\r\n    if (functionDependencies.length > 0) {\r\n      const flattenedFunctionDependencies = [];\r\n      for (let i = 0; i < functionDependencies.length; i++) {\r\n        const functionDependency = functionDependencies[i];\r\n        if (!flattened[functionDependency]) {\r\n          flattened[functionDependency] = true;\r\n        }\r\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + ';\\n');\r\n      }\r\n      return flattenedFunctionDependencies.join('') + result;\r\n    }\r\n    return result;\r\n  },\r\n};\r\n\r\nexport { utils };\r\n","import { Input } from '../input';\r\nimport {\r\n  functionToIFunction,\r\n  getArgumentNamesFromString,\r\n  isArray,\r\n  isFunctionString,\r\n  warnDeprecated\r\n} from '../common';\r\nimport { getVariableType } from '../utils';\r\n\r\nexport class Kernel {\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  static get isSupported() {\r\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  static isContextMatch(context) {\r\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {IKernelFeatures}\r\n   * Used internally to populate the kernel.feature, which is a getter for the output of this value\r\n   */\r\n  static getFeatures() {\r\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\r\n  }\r\n\r\n  static destroyContext(context) {\r\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\r\n  }\r\n\r\n  static nativeFunctionArguments() {\r\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\r\n  }\r\n\r\n  static nativeFunctionReturnType() {\r\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\r\n  }\r\n\r\n  static combineKernels() {\r\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string|object} source\r\n   * @param [settings]\r\n   */\r\n  constructor(source, settings) {\r\n    if (typeof source !== 'object') {\r\n      if (typeof source !== 'string') {\r\n        throw new Error('source not a string');\r\n      }\r\n      if (!isFunctionString(source)) {\r\n        throw new Error('source not a function string');\r\n      }\r\n    }\r\n    this.useLegacyEncoder = false;\r\n    this.fallbackRequested = false;\r\n    this.onRequestFallback = null;\r\n\r\n    /**\r\n     * Name of the arguments found from parsing source argument\r\n     * @type {String[]}\r\n     */\r\n    this.argumentNames = typeof source === 'string' ? getArgumentNamesFromString(source) : null;\r\n    this.argumentTypes = null;\r\n    this.argumentSizes = null;\r\n    this.argumentBitRatios = null;\r\n    this.kernelArguments = null;\r\n    this.kernelConstants = null;\r\n\r\n\r\n    /**\r\n     * The function source\r\n     * @type {String}\r\n     */\r\n    this.source = source;\r\n\r\n    /**\r\n     * The size of the kernel's output\r\n     * @type {Number[]}\r\n     */\r\n    this.output = null;\r\n\r\n    /**\r\n     * Debug mode\r\n     * @type {Boolean}\r\n     */\r\n    this.debug = false;\r\n\r\n    /**\r\n     * Graphical mode\r\n     * @type {Boolean}\r\n     */\r\n    this.graphical = false;\r\n\r\n    /**\r\n     * Maximum loops when using argument values to prevent infinity\r\n     * @type {Number}\r\n     */\r\n    this.loopMaxIterations = 0;\r\n\r\n    /**\r\n     * Constants used in kernel via `this.constants`\r\n     * @type {Object}\r\n     */\r\n    this.constants = null;\r\n    this.constantTypes = null;\r\n    this.constantBitRatios = null;\r\n    this.dynamicArguments = false;\r\n    this.dynamicOutput = false;\r\n\r\n    /**\r\n     *\r\n     * @type {Object}\r\n     */\r\n    this.canvas = null;\r\n\r\n    /**\r\n     *\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.context = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.checkContext = null;\r\n\r\n    /**\r\n     *\r\n     * @type {GPU}\r\n     */\r\n    this.gpu = null;\r\n\r\n    /**\r\n     *\r\n     * @type {IGPUFunction[]}\r\n     */\r\n    this.functions = null;\r\n\r\n    /**\r\n     *\r\n     * @type {IGPUNativeFunction[]}\r\n     */\r\n    this.nativeFunctions = null;\r\n\r\n    /**\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.injectedNative = null;\r\n\r\n    /**\r\n     *\r\n     * @type {ISubKernel[]}\r\n     */\r\n    this.subKernels = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.validate = true;\r\n\r\n    /**\r\n     * Enforces kernel to write to a new array or texture on run\r\n     * @type {Boolean}\r\n     */\r\n    this.immutable = false;\r\n\r\n    /**\r\n     * Enforces kernel to write to a texture on run\r\n     * @type {Boolean}\r\n     */\r\n    this.pipeline = false;\r\n\r\n    /**\r\n     * Make GPU use single precison or unsigned.  Acceptable values: 'single' or 'unsigned'\r\n     * @type {String|null}\r\n     * @enum 'single' | 'unsigned'\r\n     */\r\n    this.precision = null;\r\n\r\n    /**\r\n     *\r\n     * @type {String|null}\r\n     * @enum 'speed' | 'balanced' | 'precision'\r\n     */\r\n    this.tactic = 'balanced';\r\n\r\n    this.plugins = null;\r\n\r\n    this.returnType = null;\r\n    this.leadingReturnStatement = null;\r\n    this.followingReturnStatement = null;\r\n    this.optimizeFloatMemory = null;\r\n    this.strictIntegers = false;\r\n    this.fixIntegerDivisionAccuracy = null;\r\n    this.warnVarUsage = true;\r\n  }\r\n\r\n  mergeSettings(settings) {\r\n    for (let p in settings) {\r\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\r\n      switch (p) {\r\n        case 'output':\r\n          if (!Array.isArray(settings.output)) {\r\n            this.setOutput(settings.output); // Flatten output object\r\n            continue;\r\n          }\r\n          break;\r\n        case 'functions':\r\n          if (typeof settings.functions[0] === 'function') {\r\n            this.functions = settings.functions.map(source => functionToIFunction(source));\r\n            continue;\r\n          }\r\n          break;\r\n        case 'graphical':\r\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\r\n            this.precision = 'unsigned';\r\n          }\r\n          this[p] = settings[p];\r\n          continue;\r\n      }\r\n      this[p] = settings[p];\r\n    }\r\n\r\n    if (!this.canvas) this.canvas = this.initCanvas();\r\n    if (!this.context) this.context = this.initContext();\r\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\r\n  }\r\n  /**\r\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\r\n   * and instantiates the program.\r\n   * @abstract\r\n   */\r\n  build() {\r\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Run the kernel program, and send the output to renderOutput\r\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\r\n   * @returns {Float32Array|Float32Array[]|Float32Array[][]|void} Result The final output of the program, as float, and as Textures for reuse.\r\n   * @abstract\r\n   */\r\n  run() {\r\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Object}\r\n   */\r\n  initCanvas() {\r\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Object}\r\n   */\r\n  initContext() {\r\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @param {IFunctionSettings} settings\r\n   * @return {Object};\r\n   * @abstract\r\n   */\r\n  initPlugins(settings) {\r\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Setup the parameter types for the parameters\r\n   * supplied to the Kernel function\r\n   *\r\n   * @param {IArguments} args - The actual parameters sent to the Kernel\r\n   */\r\n  setupArguments(args) {\r\n    this.kernelArguments = [];\r\n    if (!this.argumentTypes) {\r\n      if (!this.argumentTypes) {\r\n        this.argumentTypes = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n          const argType = getVariableType(args[i], this.strictIntegers);\r\n          const type = argType === 'Integer' ? 'Number' : argType;\r\n          this.argumentTypes.push(type);\r\n          this.kernelArguments.push({\r\n            type\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.argumentTypes.length; i++) {\r\n        this.kernelArguments.push({\r\n          type: this.argumentTypes[i]\r\n        });\r\n      }\r\n    }\r\n\r\n    // setup sizes\r\n    this.argumentSizes = new Array(args.length);\r\n    this.argumentBitRatios = new Int32Array(args.length);\r\n\r\n    for (let i = 0; i < args.length; i++) {\r\n      const arg = args[i];\r\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\r\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\r\n    }\r\n\r\n    if (this.argumentNames.length !== args.length) {\r\n      throw new Error(`arguments are miss-aligned`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup constants\r\n   */\r\n  setupConstants() {\r\n    this.kernelConstants = [];\r\n    let needsConstantTypes = this.constantTypes === null;\r\n    if (needsConstantTypes) {\r\n      this.constantTypes = {};\r\n    }\r\n    this.constantBitRatios = {};\r\n    if (this.constants) {\r\n      for (let name in this.constants) {\r\n        if (needsConstantTypes) {\r\n          const type = getVariableType(this.constants[name], this.strictIntegers);\r\n          this.constantTypes[name] = type;\r\n          this.kernelConstants.push({\r\n            name,\r\n            type\r\n          });\r\n        } else {\r\n          this.kernelConstants.push({\r\n            name,\r\n            type: this.constantTypes[name]\r\n          });\r\n        }\r\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setOptimizeFloatMemory(flag) {\r\n    this.optimizeFloatMemory = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set output dimensions of the kernel function\r\n   * @param {Array|Object} output - The output array to set the kernel output size to\r\n   */\r\n  setOutput(output) {\r\n    if (output.hasOwnProperty('x')) {\r\n      if (output.hasOwnProperty('y')) {\r\n        if (output.hasOwnProperty('z')) {\r\n          this.output = [output.x, output.y, output.z];\r\n        } else {\r\n          this.output = [output.x, output.y];\r\n        }\r\n      } else {\r\n        this.output = [output.x];\r\n      }\r\n    } else {\r\n      this.output = output;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle debug mode\r\n   * @param {Boolean} flag - true to enable debug\r\n   */\r\n  setDebug(flag) {\r\n    this.debug = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle graphical output mode\r\n   * @param {Boolean} flag - true to enable graphical output\r\n   */\r\n  setGraphical(flag) {\r\n    this.graphical = flag;\r\n    this.precision = 'unsigned';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set the maximum number of loop iterations\r\n   * @param {number} max - iterations count\r\n   *\r\n   */\r\n  setLoopMaxIterations(max) {\r\n    this.loopMaxIterations = max;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Set Constants\r\n   */\r\n  setConstants(constants) {\r\n    this.constants = constants;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [IKernelValueTypes] constantTypes\r\n   * @return {Kernel}\r\n   */\r\n  setConstantTypes(constantTypes) {\r\n    this.constantTypes = constantTypes;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IFunction[]|KernelFunction[]} functions\r\n   * @return {Kernel}\r\n   */\r\n  setFunctions(functions) {\r\n    if (typeof functions[0] === 'function') {\r\n      this.functions = functions.map(source => functionToIFunction(source));\r\n    } else {\r\n      this.functions = functions;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IGPUNativeFunction} nativeFunctions\r\n   * @return {Kernel}\r\n   */\r\n  setNativeFunctions(nativeFunctions) {\r\n    this.nativeFunctions = nativeFunctions;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} injectedNative\r\n   * @return {Kernel}\r\n   */\r\n  setInjectedNative(injectedNative) {\r\n    this.injectedNative = injectedNative;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set writing to texture on/off\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setPipeline(flag) {\r\n    this.pipeline = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set precision to 'unsigned' or 'single'\r\n   * @param {String} flag 'unsigned' or 'single'\r\n   * @return {Kernel}\r\n   */\r\n  setPrecision(flag) {\r\n    this.precision = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param flag\r\n   * @return {Kernel}\r\n   * @deprecated\r\n   */\r\n  setOutputToTexture(flag) {\r\n    warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\r\n    this.pipeline = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set to immutable\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setImmutable(flag) {\r\n    this.immutable = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Bind the canvas to kernel\r\n   * @param {Object} canvas\r\n   */\r\n  setCanvas(canvas) {\r\n    this.canvas = canvas;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setStrictIntegers(flag) {\r\n    this.strictIntegers = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setDynamicOutput(flag) {\r\n    this.dynamicOutput = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setHardcodeConstants(flag) {\r\n    warnDeprecated('method', 'setHardcodeConstants');\r\n    this.setDynamicOutput(flag);\r\n    this.setDynamicArguments(flag);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param flag\r\n   * @return {Kernel}\r\n   */\r\n  setDynamicArguments(flag) {\r\n    this.dynamicArguments = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setUseLegacyEncoder(flag) {\r\n    this.useLegacyEncoder = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Boolean} flag\r\n   * @return {Kernel}\r\n   */\r\n  setWarnVarUsage(flag) {\r\n    this.warnVarUsage = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @returns {Object}\r\n   */\r\n  getCanvas() {\r\n    warnDeprecated('method', 'getCanvas');\r\n    return this.canvas;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @returns {Object}\r\n   */\r\n  getWebGl() {\r\n    warnDeprecated('method', 'getWebGl');\r\n    return this.context;\r\n  }\r\n\r\n  /**\r\n   * @desc Bind the webGL instance to kernel\r\n   * @param {WebGLRenderingContext} context - webGl instance to bind\r\n   */\r\n  setContext(context) {\r\n    this.context = context;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [IKernelValueTypes|GPUVariableType[]] argumentTypes\r\n   * @return {Kernel}\r\n   */\r\n  setArgumentTypes(argumentTypes) {\r\n    if (Array.isArray(argumentTypes)) {\r\n      this.argumentTypes = argumentTypes;\r\n    } else {\r\n      this.argumentTypes = [];\r\n      for (const p in argumentTypes) {\r\n        const argumentIndex = this.argumentNames.indexOf(p);\r\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\r\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param [Tactic] tactic\r\n   * @return {Kernel}\r\n   */\r\n  setTactic(tactic) {\r\n    this.tactic = tactic;\r\n    return this;\r\n  }\r\n\r\n  requestFallback(args) {\r\n    if (!this.onRequestFallback) {\r\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\r\n    }\r\n    this.fallbackRequested = true;\r\n    return this.onRequestFallback(args);\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings\r\n   * @abstract\r\n   */\r\n  validateSettings() {\r\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Add a sub kernel to the root kernel instance.\r\n   * This is what `createKernelMap` uses.\r\n   *\r\n   * @param {ISubKernel} subKernel - function (as a String) of the subKernel to add\r\n   */\r\n  addSubKernel(subKernel) {\r\n    if (this.subKernels === null) {\r\n      this.subKernels = [];\r\n    }\r\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\r\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\r\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\r\n    this.subKernels.push(subKernel);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Destroys all memory associated with this kernel\r\n   * @param {Boolean} [removeCanvasReferences] remove any associated canvas references\r\n   */\r\n  destroy(removeCanvasReferences) {\r\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\r\n   * @param value\r\n   * @returns {number}\r\n   */\r\n  getBitRatio(value) {\r\n    if (this.precision === 'single') {\r\n      // 8 and 16 are upconverted to float32\r\n      return 4;\r\n    } else if (Array.isArray(value[0])) {\r\n      return this.getBitRatio(value[0]);\r\n    } else if (value.constructor === Input) {\r\n      return this.getBitRatio(value.value);\r\n    }\r\n    switch (value.constructor) {\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Int8Array:\r\n        return 1;\r\n      case Uint16Array:\r\n      case Int16Array:\r\n        return 2;\r\n      case Float32Array:\r\n      case Int32Array:\r\n      default:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {number[]}\r\n   */\r\n  getPixels() {\r\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\r\n  }\r\n\r\n  checkOutput() {\r\n    if (!this.output || !isArray(this.output)) throw new Error('kernel.output not an array');\r\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\r\n    for (let i = 0; i < this.output.length; i++) {\r\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\r\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const settings = {\r\n      output: this.output,\r\n      threadDim: this.threadDim,\r\n      pipeline: this.pipeline,\r\n      argumentNames: this.argumentNames,\r\n      argumentsTypes: this.argumentTypes,\r\n      constants: this.constants,\r\n      pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\r\n      returnType: this.returnType,\r\n    };\r\n    return {\r\n      settings\r\n    };\r\n  }\r\n}\r\n","/**\r\n * @desc This handles all the raw state, converted state, etc. of a single function.\r\n * [INTERNAL] A collection of functionNodes.\r\n * @class\r\n */\r\nexport class FunctionBuilder {\r\n  /**\r\n   *\r\n   * @param {Kernel} kernel\r\n   * @param {FunctionNode} FunctionNode\r\n   * @param {object} [extraNodeOptions]\r\n   * @returns {FunctionBuilder}\r\n   * @static\r\n   */\r\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\r\n    const {\r\n      kernelArguments,\r\n      kernelConstants,\r\n      argumentNames,\r\n      argumentSizes,\r\n      argumentBitRatios,\r\n      constants,\r\n      constantBitRatios,\r\n      debug,\r\n      loopMaxIterations,\r\n      nativeFunctions,\r\n      output,\r\n      optimizeFloatMemory,\r\n      precision,\r\n      plugins,\r\n      source,\r\n      subKernels,\r\n      functions,\r\n      leadingReturnStatement,\r\n      followingReturnStatement,\r\n      dynamicArguments,\r\n      dynamicOutput,\r\n      warnVarUsage,\r\n    } = kernel;\r\n\r\n    const argumentTypes = new Array(kernelArguments.length);\r\n    const constantTypes = {};\r\n\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      argumentTypes[i] = kernelArguments[i].type;\r\n    }\r\n\r\n    for (let i = 0; i < kernelConstants.length; i++) {\r\n      const kernelConstant = kernelConstants[i]\r\n      constantTypes[kernelConstant.name] = kernelConstant.type;\r\n    }\r\n\r\n    const needsArgumentType = (functionName, index) => {\r\n      return functionBuilder.needsArgumentType(functionName, index);\r\n    };\r\n\r\n    const assignArgumentType = (functionName, index, type) => {\r\n      functionBuilder.assignArgumentType(functionName, index, type);\r\n    };\r\n\r\n    const lookupReturnType = (functionName, ast, requestingNode) => {\r\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\r\n    };\r\n\r\n    const lookupFunctionArgumentTypes = (functionName) => {\r\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\r\n    };\r\n\r\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\r\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\r\n    };\r\n\r\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\r\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\r\n    };\r\n\r\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\r\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\r\n    };\r\n\r\n    const triggerTrackArgumentSynonym = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\r\n      functionBuilder.trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex);\r\n    };\r\n\r\n    const lookupArgumentSynonym = (originFunctionName, functionName, argumentName) => {\r\n      return functionBuilder.lookupArgumentSynonym(originFunctionName, functionName, argumentName);\r\n    };\r\n\r\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\r\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\r\n    };\r\n\r\n    const onNestedFunction = (ast, returnType) => {\r\n      const argumentNames = [];\r\n      for (let i = 0; i < ast.params.length; i++) {\r\n        argumentNames.push(ast.params[i].name);\r\n      }\r\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\r\n        returnType: null,\r\n        ast,\r\n        name: ast.id.name,\r\n        argumentNames,\r\n        lookupReturnType,\r\n        lookupFunctionArgumentTypes,\r\n        lookupFunctionArgumentName,\r\n        lookupFunctionArgumentBitRatio,\r\n        needsArgumentType,\r\n        assignArgumentType,\r\n        triggerImplyArgumentType,\r\n        triggerTrackArgumentSynonym,\r\n        lookupArgumentSynonym,\r\n        onFunctionCall,\r\n        warnVarUsage,\r\n      }));\r\n      nestedFunction.traceFunctionAST(ast);\r\n      functionBuilder.addFunctionNode(nestedFunction);\r\n    };\r\n\r\n    const nodeOptions = Object.assign({\r\n      isRootKernel: false,\r\n      onNestedFunction,\r\n      lookupReturnType,\r\n      lookupFunctionArgumentTypes,\r\n      lookupFunctionArgumentName,\r\n      lookupFunctionArgumentBitRatio,\r\n      needsArgumentType,\r\n      assignArgumentType,\r\n      triggerImplyArgumentType,\r\n      triggerTrackArgumentSynonym,\r\n      lookupArgumentSynonym,\r\n      onFunctionCall,\r\n      optimizeFloatMemory,\r\n      precision,\r\n      constants,\r\n      constantTypes,\r\n      constantBitRatios,\r\n      debug,\r\n      loopMaxIterations,\r\n      output,\r\n      plugins,\r\n      dynamicArguments,\r\n      dynamicOutput,\r\n    }, extraNodeOptions || {});\r\n\r\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\r\n      isRootKernel: true,\r\n      name: 'kernel',\r\n      argumentNames,\r\n      argumentTypes,\r\n      argumentSizes,\r\n      argumentBitRatios,\r\n      leadingReturnStatement,\r\n      followingReturnStatement,\r\n    });\r\n\r\n    if (typeof source === 'object' && source.functionNodes) {\r\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\r\n    }\r\n\r\n    const rootNode = new FunctionNode(source, rootNodeOptions);\r\n\r\n    let functionNodes = null;\r\n    if (functions) {\r\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\r\n        returnType: fn.returnType,\r\n        argumentTypes: fn.argumentTypes,\r\n        output,\r\n        plugins,\r\n        constants,\r\n        constantTypes,\r\n        constantBitRatios,\r\n        optimizeFloatMemory,\r\n        precision,\r\n        lookupReturnType,\r\n        lookupFunctionArgumentTypes,\r\n        lookupFunctionArgumentName,\r\n        lookupFunctionArgumentBitRatio,\r\n        needsArgumentType,\r\n        assignArgumentType,\r\n        triggerImplyArgumentType,\r\n        triggerTrackArgumentSynonym,\r\n        lookupArgumentSynonym,\r\n        onFunctionCall,\r\n      }));\r\n    }\r\n\r\n    let subKernelNodes = null;\r\n    if (subKernels) {\r\n      subKernelNodes = subKernels.map((subKernel) => {\r\n        const { name, source } = subKernel;\r\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\r\n          name,\r\n          isSubKernel: true,\r\n          isRootKernel: false,\r\n        }));\r\n      });\r\n    }\r\n\r\n    const functionBuilder = new FunctionBuilder({\r\n      kernel,\r\n      rootNode,\r\n      functionNodes,\r\n      nativeFunctions,\r\n      subKernelNodes\r\n    });\r\n\r\n    return functionBuilder;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {IFunctionBuilderSettings} [settings]\r\n   */\r\n  constructor(settings) {\r\n    settings = settings || {};\r\n    this.kernel = settings.kernel;\r\n    this.rootNode = settings.rootNode;\r\n    this.functionNodes = settings.functionNodes || [];\r\n    this.subKernelNodes = settings.subKernelNodes || [];\r\n    this.nativeFunctions = settings.nativeFunctions || [];\r\n    this.functionMap = {};\r\n    this.nativeFunctionNames = [];\r\n    this.lookupChain = [];\r\n    this.argumentChain = [];\r\n    this.functionNodeDependencies = {};\r\n    this.functionCalls = {};\r\n\r\n    if (this.rootNode) {\r\n      this.functionMap['kernel'] = this.rootNode;\r\n    }\r\n\r\n    if (this.functionNodes) {\r\n      for (let i = 0; i < this.functionNodes.length; i++) {\r\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\r\n      }\r\n    }\r\n\r\n    if (this.subKernelNodes) {\r\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\r\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\r\n      }\r\n    }\r\n\r\n    if (this.nativeFunctions) {\r\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\r\n        const nativeFunction = this.nativeFunctions[i];\r\n        this.nativeFunctionNames.push(nativeFunction.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Add the function node directly\r\n   *\r\n   * @param {FunctionNode} functionNode - functionNode to add\r\n   *\r\n   */\r\n  addFunctionNode(functionNode) {\r\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\r\n    this.functionMap[functionNode.name] = functionNode;\r\n    if (functionNode.isRootKernel) {\r\n      this.rootNode = functionNode;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Trace all the depending functions being called, from a single function\r\n   *\r\n   * This allow for 'unneeded' functions to be automatically optimized out.\r\n   * Note that the 0-index, is the starting function trace.\r\n   *\r\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\r\n   * @param {String[]} [retList] - Returning list of function names that is traced. Including itself.\r\n   *\r\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\r\n   */\r\n  traceFunctionCalls(functionName, retList) {\r\n    functionName = functionName || 'kernel';\r\n    retList = retList || [];\r\n\r\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\r\n      if (retList.indexOf(functionName) === -1) {\r\n        retList.push(functionName);\r\n      }\r\n      return retList;\r\n    }\r\n\r\n    const functionNode = this.functionMap[functionName];\r\n    if (functionNode) {\r\n      // Check if function already exists\r\n      const functionIndex = retList.indexOf(functionName);\r\n      if (functionIndex === -1) {\r\n        retList.push(functionName);\r\n        functionNode.toString(); //ensure JS trace is done\r\n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\r\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\r\n        }\r\n      } else {\r\n        /**\r\n         * https://github.com/gpujs/gpu.js/issues/207\r\n         * if dependent function is already in the list, because a function depends on it, and because it has\r\n         * already been traced, we know that we must move the dependent function to the end of the the retList.\r\n         * */\r\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\r\n        retList.push(dependantFunctionName);\r\n      }\r\n    }\r\n\r\n    return retList;\r\n  }\r\n\r\n  /**\r\n   * @desc Return the string for a function\r\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getPrototypeString(functionName) {\r\n    return this.getPrototypes(functionName).join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Return the string for a function\r\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getPrototypes(functionName) {\r\n    if (this.rootNode) {\r\n      this.rootNode.toString();\r\n    }\r\n    if (functionName) {\r\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\r\n    }\r\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\r\n  }\r\n\r\n  /**\r\n   * @desc Get string from function names\r\n   * @param {String[]} functionList - List of function to build string\r\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getStringFromFunctionNames(functionList) {\r\n    const ret = [];\r\n    for (let i = 0; i < functionList.length; ++i) {\r\n      const node = this.functionMap[functionList[i]];\r\n      if (node) {\r\n        ret.push(this.functionMap[functionList[i]].toString());\r\n      }\r\n    }\r\n    return ret.join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Return string of all functions converted\r\n   * @param {String[]} functionList - List of function names to build the string.\r\n   * @returns {Array} Prototypes of all functions converted\r\n   */\r\n  getPrototypesFromFunctionNames(functionList) {\r\n    const ret = [];\r\n    for (let i = 0; i < functionList.length; ++i) {\r\n      const functionName = functionList[i];\r\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\r\n      if (functionIndex > -1) {\r\n        ret.push(this.nativeFunctions[functionIndex].source);\r\n        continue;\r\n      }\r\n      const node = this.functionMap[functionName];\r\n      if (node) {\r\n        ret.push(node.toString());\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\r\n      const nativeIndex = this.nativeFunctions.indexOf(name);\r\n      if (nativeIndex > -1) {\r\n        return {\r\n          name,\r\n          source: this.nativeFunctions[nativeIndex].source\r\n        };\r\n      } else if (this.functionMap[name]) {\r\n        return this.functionMap[name].toJSON();\r\n      } else {\r\n        throw new Error(`function ${ name } not found`);\r\n      }\r\n    });\r\n  }\r\n\r\n  fromJSON(jsonFunctionNodes, FunctionNode) {\r\n    this.functionMap = {};\r\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\r\n      const jsonFunctionNode = jsonFunctionNodes[i];\r\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Get string for a particular function name\r\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\r\n   * @returns {String} settings - The string, of all the various functions. Trace optimized if functionName given\r\n   */\r\n  getString(functionName) {\r\n    if (functionName) {\r\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\r\n    }\r\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\r\n  }\r\n\r\n  lookupReturnType(functionName, ast, requestingNode) {\r\n    if (ast.type !== 'CallExpression') {\r\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\r\n    }\r\n    if (this._isNativeFunction(functionName)) {\r\n      return this._lookupNativeFunctionReturnType(functionName);\r\n    } else if (this._isFunction(functionName)) {\r\n      const node = this._getFunction(functionName);\r\n      if (node.returnType) {\r\n        return node.returnType;\r\n      } else {\r\n        for (let i = 0; i < this.lookupChain.length; i++) {\r\n          // detect circlical logic\r\n          if (this.lookupChain[i].ast === ast) {\r\n            // detect if arguments have not resolved, preventing a return type\r\n            // if so, go ahead and resolve them, so we can resolve the return type\r\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\r\n              const args = ast.arguments;\r\n              for (let j = 0; j < args.length; j++) {\r\n                this.lookupChain.push({\r\n                  name: requestingNode.name,\r\n                  ast: args[i],\r\n                  requestingNode\r\n                });\r\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\r\n                this.lookupChain.pop();\r\n              }\r\n              return node.returnType = node.getType(node.getJsAST());\r\n            }\r\n\r\n            throw new Error('circlical logic detected!');\r\n          }\r\n        }\r\n        // get ready for a ride!\r\n        this.lookupChain.push({\r\n          name: requestingNode.name,\r\n          ast,\r\n          requestingNode\r\n        });\r\n        const type = node.getType(node.getJsAST());\r\n        this.lookupChain.pop();\r\n        return node.returnType = type;\r\n      }\r\n    }\r\n\r\n    // function not found, maybe native?\r\n    return null;\r\n\r\n    /**\r\n     * first iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = null\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = null\r\n     * calcErrorOutput.targets = null\r\n     * calcErrorOutput.returns = null\r\n     * calcDeltasSigmoid.error = null\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = null\r\n     *\r\n     * resolvable are:\r\n     * calcErrorOutput.output\r\n     * calcErrorOutput.targets\r\n     * calcErrorOutput.returns\r\n     *\r\n     * second iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = null\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = Number\r\n     * calcErrorOutput.targets = Array\r\n     * calcErrorOutput.returns = Number\r\n     * calcDeltasSigmoid.error = null\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = null\r\n     *\r\n     * resolvable are:\r\n     * calcDeltasSigmoid.error\r\n     * calcDeltasSigmoid.returns\r\n     * kernel.returns\r\n     *\r\n     * third iteration\r\n     * kernel.outputs = Array\r\n     * kernel.targets = Array\r\n     * kernel.returns = Number\r\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\r\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\r\n     * calcErrorOutput.output = Number\r\n     * calcErrorOutput.targets = Array\r\n     * calcErrorOutput.returns = Number\r\n     * calcDeltasSigmoid.error = Number\r\n     * calcDeltasSigmoid.output = Number\r\n     * calcDeltasSigmoid.returns = Number\r\n     *\r\n     *\r\n     */\r\n  }\r\n\r\n  _getFunction(functionName) {\r\n    if (!this._isFunction(functionName)) {\r\n      new Error(`Function ${functionName} not found`);\r\n    }\r\n    return this.functionMap[functionName];\r\n  }\r\n\r\n  _isFunction(functionName) {\r\n    return Boolean(this.functionMap[functionName]);\r\n  }\r\n\r\n  _getNativeFunction(functionName) {\r\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\r\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _isNativeFunction(functionName) {\r\n    return Boolean(this._getNativeFunction(functionName));\r\n  }\r\n\r\n  _lookupNativeFunctionReturnType(functionName) {\r\n    let nativeFunction = this._getNativeFunction(functionName);\r\n    if (nativeFunction) {\r\n      return nativeFunction.returnType;\r\n    }\r\n    throw new Error(`Native function ${ functionName } not found`);\r\n  }\r\n\r\n  lookupFunctionArgumentTypes(functionName) {\r\n    if (this._isNativeFunction(functionName)) {\r\n      return this._getNativeFunction(functionName).argumentTypes;\r\n    } else if (this._isFunction(functionName)) {\r\n      return this._getFunction(functionName).argumentTypes;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  lookupFunctionArgumentName(functionName, argumentIndex) {\r\n    return this._getFunction(functionName).argumentNames[argumentIndex];\r\n  }\r\n\r\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\r\n    if (!this._isFunction(functionName)) {\r\n      throw new Error('function not found');\r\n    }\r\n    if (this.rootNode.name === functionName) {\r\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\r\n      if (i !== -1) {\r\n        return this.rootNode.argumentBitRatios[i];\r\n      } else {\r\n        throw new Error('argument bit ratio not found');\r\n      }\r\n    } else {\r\n      const node = this._getFunction(functionName);\r\n      const argumentSynonym = node.argumentSynonym[node.synonymIndex];\r\n      if (!argumentSynonym) {\r\n        throw new Error('argument synonym not found');\r\n      }\r\n      return this.lookupFunctionArgumentBitRatio(argumentSynonym.functionName, argumentSynonym.argumentName);\r\n    }\r\n  }\r\n\r\n  needsArgumentType(functionName, i) {\r\n    if (!this._isFunction(functionName)) return false;\r\n    const fnNode = this._getFunction(functionName);\r\n    return !fnNode.argumentTypes[i];\r\n  }\r\n\r\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\r\n    if (!this._isFunction(functionName)) return;\r\n    const fnNode = this._getFunction(functionName);\r\n    if (!fnNode.argumentTypes[i]) {\r\n      fnNode.argumentTypes[i] = argumentType;\r\n    }\r\n  }\r\n\r\n  trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\r\n    if (!this._isFunction(calleeFunctionName)) return;\r\n    const node = this._getFunction(calleeFunctionName);\r\n    if (!node.argumentSynonym) {\r\n      node.argumentSynonym = {};\r\n    }\r\n    const calleeArgumentName = node.argumentNames[argumentIndex];\r\n    if (!node.argumentSynonym[calleeArgumentName]) {\r\n      node.argumentSynonym[calleeArgumentName] = {};\r\n    }\r\n    node.synonymIndex++;\r\n    node.argumentSynonym[node.synonymIndex] = {\r\n      functionName,\r\n      argumentName,\r\n      calleeArgumentName,\r\n      calleeFunctionName,\r\n    };\r\n  }\r\n\r\n  lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\r\n    if (originFunctionName === functionName) return argumentName;\r\n    if (!this._isFunction(functionName)) return null;\r\n    const node = this._getFunction(functionName);\r\n    const argumentSynonym = node.argumentSynonym[node.synonymUseIndex];\r\n    if (!argumentSynonym) return null;\r\n    if (argumentSynonym.calleeArgumentName !== argumentName) return null;\r\n    node.synonymUseIndex++;\r\n    if (originFunctionName !== functionName) {\r\n      return this.lookupArgumentSynonym(originFunctionName, argumentSynonym.functionName, argumentSynonym.argumentName);\r\n    }\r\n    return argumentSynonym.argumentName;\r\n  }\r\n\r\n  trackFunctionCall(functionName, calleeFunctionName, args) {\r\n    if (!this.functionNodeDependencies[functionName]) {\r\n      this.functionNodeDependencies[functionName] = new Set();\r\n      this.functionCalls[functionName] = [];\r\n    }\r\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\r\n    this.functionCalls[functionName].push(args);\r\n  }\r\n\r\n  getKernelResultType() {\r\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\r\n  }\r\n\r\n  getSubKernelResultType(index) {\r\n    const subKernelNode = this.subKernelNodes[index];\r\n    let called = false;\r\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\r\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\r\n      if (functionCall.ast.callee.name === subKernelNode.name) {\r\n        called = true;\r\n      }\r\n    }\r\n    if (!called) {\r\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\r\n    }\r\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\r\n  }\r\n\r\n  getReturnTypes() {\r\n    const result = {\r\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\r\n    };\r\n    const list = this.traceFunctionCalls(this.rootNode.name);\r\n    for (let i = 0; i < list.length; i++) {\r\n      const functionName = list[i];\r\n      const functionNode = this.functionMap[functionName];\r\n      result[functionName] = functionNode.getType(functionNode.ast);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","export class FunctionTracer {\r\n  constructor(ast) {\r\n    this.runningContexts = [];\r\n    this.contexts = [];\r\n    this.functionCalls = [];\r\n    this.declarations = [];\r\n    this.identifiers = [];\r\n    this.functions = [];\r\n    this.returnStatements = [];\r\n    this.inLoopInit = false;\r\n    this.scan(ast);\r\n  }\r\n\r\n  get currentContext() {\r\n    return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\r\n  }\r\n\r\n  newContext(run) {\r\n    const newContext = Object.assign({}, this.currentContext);\r\n    this.contexts.push(newContext);\r\n    this.runningContexts.push(newContext);\r\n    run();\r\n    this.runningContexts.pop();\r\n  }\r\n\r\n  /**\r\n   * Recursively scans AST for declarations and functions, and add them to their respective context\r\n   * @param ast\r\n   */\r\n  scan(ast) {\r\n    if (Array.isArray(ast)) {\r\n      for (let i = 0; i < ast.length; i++) {\r\n        this.scan(ast[i]);\r\n      }\r\n      return;\r\n    }\r\n    switch (ast.type) {\r\n      case 'Program':\r\n        this.scan(ast.body);\r\n        break;\r\n      case 'BlockStatement':\r\n        this.newContext(() => {\r\n          this.scan(ast.body);\r\n        });\r\n        break;\r\n      case 'AssignmentExpression':\r\n      case 'LogicalExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'BinaryExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'UpdateExpression':\r\n      case 'UnaryExpression':\r\n        this.scan(ast.argument);\r\n        break;\r\n      case 'VariableDeclaration':\r\n        this.scan(ast.declarations);\r\n        break;\r\n      case 'VariableDeclarator':\r\n        const { currentContext } = this;\r\n        const declaration = {\r\n          ast: ast,\r\n          context: currentContext,\r\n          name: ast.id.name,\r\n          origin: 'declaration',\r\n          forceInteger: this.inLoopInit,\r\n          assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name),\r\n        };\r\n        currentContext[ast.id.name] = declaration;\r\n        this.declarations.push(declaration);\r\n        this.scan(ast.id);\r\n        this.scan(ast.init);\r\n        break;\r\n      case 'FunctionExpression':\r\n      case 'FunctionDeclaration':\r\n        if (this.runningContexts.length === 0) {\r\n          this.scan(ast.body);\r\n        } else {\r\n          this.functions.push(ast);\r\n        }\r\n        break;\r\n      case 'IfStatement':\r\n        this.scan(ast.test);\r\n        this.scan(ast.consequent);\r\n        if (ast.alternate) this.scan(ast.alternate);\r\n        break;\r\n      case 'ForStatement':\r\n        this.newContext(() => {\r\n          this.inLoopInit = true;\r\n          this.scan(ast.init);\r\n          this.inLoopInit = false;\r\n          this.scan(ast.test);\r\n          this.scan(ast.update);\r\n          this.newContext(() => {\r\n            this.scan(ast.body);\r\n          });\r\n        });\r\n        break;\r\n      case 'DoWhileStatement':\r\n      case 'WhileStatement':\r\n        this.newContext(() => {\r\n          this.scan(ast.body);\r\n          this.scan(ast.test);\r\n        });\r\n        break;\r\n      case 'Identifier':\r\n        this.identifiers.push({\r\n          context: this.currentContext,\r\n          ast,\r\n        });\r\n        break;\r\n      case 'ReturnStatement':\r\n        this.returnStatements.push(ast);\r\n        this.scan(ast.argument);\r\n        break;\r\n      case 'MemberExpression':\r\n        this.scan(ast.object);\r\n        this.scan(ast.property);\r\n        break;\r\n      case 'ExpressionStatement':\r\n        this.scan(ast.expression);\r\n        break;\r\n      case 'CallExpression':\r\n        this.functionCalls.push({\r\n          context: this.currentContext,\r\n          ast,\r\n        });\r\n        this.scan(ast.arguments);\r\n        break;\r\n      case 'ArrayExpression':\r\n        this.scan(ast.elements);\r\n        break;\r\n      case 'ConditionalExpression':\r\n        this.scan(ast.test);\r\n        this.scan(ast.alternate);\r\n        this.scan(ast.consequent);\r\n        break;\r\n      case 'SwitchStatement':\r\n        this.scan(ast.discriminant);\r\n        this.scan(ast.cases);\r\n        break;\r\n      case 'SwitchCase':\r\n        this.scan(ast.test);\r\n        this.scan(ast.consequent);\r\n        break;\r\n      case 'ThisExpression':\r\n        this.scan(ast.left);\r\n        this.scan(ast.right);\r\n        break;\r\n      case 'Literal':\r\n      case 'DebuggerStatement':\r\n      case 'EmptyStatement':\r\n      case 'BreakStatement':\r\n      case 'ContinueStatement':\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled type \"${ast.type}\"`);\r\n    }\r\n  }\r\n}\r\n","import { parse } from 'acorn';\r\nimport { FunctionTracer } from './function-tracer';\r\nimport {\r\n  getArgumentNamesFromString,\r\n  getAstString,\r\n  getFunctionNameFromString,\r\n  isFunctionString,\r\n} from '../common';\r\n\r\n/**\r\n *\r\n * @desc Represents a single function, inside JS, webGL, or openGL.\r\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\r\n */\r\nexport class FunctionNode {\r\n  /**\r\n   *\r\n   * @param {string|object} source\r\n   * @param {IFunctionSettings} [settings]\r\n   */\r\n  constructor(source, settings) {\r\n    if (!source && !settings.ast) {\r\n      throw new Error('source parameter is missing');\r\n    }\r\n    settings = settings || {};\r\n    this.source = source;\r\n    this.ast = null;\r\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\r\n      'kernel' :\r\n      (settings.name || getFunctionNameFromString(source)) : null;\r\n    this.calledFunctions = [];\r\n    this.constants = {};\r\n    this.constantTypes = {};\r\n    this.constantBitRatios = {};\r\n    this.isRootKernel = false;\r\n    this.isSubKernel = false;\r\n    this.debug = null;\r\n    this.declarations = null;\r\n    this.functions = null;\r\n    this.identifiers = null;\r\n    this.contexts = null;\r\n    this.functionCalls = null;\r\n    this.states = [];\r\n    this.needsArgumentType = null;\r\n    this.assignArgumentType = null;\r\n    this.lookupReturnType = null;\r\n    this.lookupFunctionArgumentTypes = null;\r\n    this.lookupFunctionArgumentBitRatio = null;\r\n    this.triggerImplyArgumentType = null;\r\n    this.triggerImplyArgumentBitRatio = null;\r\n    this.onNestedFunction = null;\r\n    this.onFunctionCall = null;\r\n    this.optimizeFloatMemory = null;\r\n    this.precision = null;\r\n    this.loopMaxIterations = null;\r\n    this.argumentNames = (typeof this.source === 'string' ? getArgumentNamesFromString(this.source) : null);\r\n    this.argumentTypes = [];\r\n    this.argumentSizes = [];\r\n    this.argumentBitRatios = null;\r\n    this.returnType = null;\r\n    this.output = [];\r\n    this.plugins = null;\r\n    this.leadingReturnStatement = null;\r\n    this.followingReturnStatement = null;\r\n    this.dynamicOutput = null;\r\n    this.dynamicArguments = null;\r\n    this.strictTypingChecking = false;\r\n    this.fixIntegerDivisionAccuracy = null;\r\n    this.warnVarUsage = true;\r\n\r\n    if (settings) {\r\n      for (const p in settings) {\r\n        if (!settings.hasOwnProperty(p)) continue;\r\n        if (!this.hasOwnProperty(p)) continue;\r\n        this[p] = settings[p];\r\n      }\r\n    }\r\n\r\n    this.literalTypes = {};\r\n\r\n    this.validate();\r\n    this._string = null;\r\n    this._internalVariableNames = {};\r\n  }\r\n\r\n  validate() {\r\n    if (typeof this.source !== 'string' && !this.ast) {\r\n      throw new Error('this.source not a string');\r\n    }\r\n\r\n    if (!this.ast && !isFunctionString(this.source)) {\r\n      throw new Error('this.source not a function string');\r\n    }\r\n\r\n    if (!this.name) {\r\n      throw new Error('this.name could not be set');\r\n    }\r\n\r\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\r\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\r\n    }\r\n\r\n    if (this.output.length < 1) {\r\n      throw new Error('this.output is not big enough');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} name\r\n   * @returns {boolean}\r\n   */\r\n  isIdentifierConstant(name) {\r\n    if (!this.constants) return false;\r\n    return this.constants.hasOwnProperty(name);\r\n  }\r\n\r\n  isInput(argumentName) {\r\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\r\n  }\r\n\r\n  pushState(state) {\r\n    this.states.push(state);\r\n  }\r\n\r\n  popState(state) {\r\n    if (this.state !== state) {\r\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\r\n    }\r\n    this.states.pop();\r\n  }\r\n\r\n  isState(state) {\r\n    return this.state === state;\r\n  }\r\n\r\n  get state() {\r\n    return this.states[this.states.length - 1];\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * @name astMemberExpressionUnroll\r\n   * @desc Parses the abstract syntax tree for binary expression.\r\n   *\r\n   * <p>Utility function for astCallExpression.</p>\r\n   *\r\n   * @param {Object} ast - the AST object to parse\r\n   *\r\n   * @returns {String} the function namespace call, unrolled\r\n   */\r\n  astMemberExpressionUnroll(ast) {\r\n    if (ast.type === 'Identifier') {\r\n      return ast.name;\r\n    } else if (ast.type === 'ThisExpression') {\r\n      return 'this';\r\n    }\r\n\r\n    if (ast.type === 'MemberExpression') {\r\n      if (ast.object && ast.property) {\r\n        //babel sniffing\r\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\r\n          return this.astMemberExpressionUnroll(ast.property);\r\n        }\r\n\r\n        return (\r\n          this.astMemberExpressionUnroll(ast.object) +\r\n          '.' +\r\n          this.astMemberExpressionUnroll(ast.property)\r\n        );\r\n      }\r\n    }\r\n\r\n    //babel sniffing\r\n    if (ast.hasOwnProperty('expressions')) {\r\n      const firstExpression = ast.expressions[0];\r\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\r\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\r\n      }\r\n    }\r\n\r\n    // Failure, unknown expression\r\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\r\n   * This is used internally to convert to shader code\r\n   *\r\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\r\n   *\r\n   * @returns {Object} The function AST Object, note that result is cached under this.ast;\r\n   */\r\n  getJsAST(inParser) {\r\n    if (this.ast) {\r\n      return this.ast;\r\n    }\r\n    if (typeof this.source === 'object') {\r\n      this.traceFunctionAST(this.source);\r\n      return this.ast = this.source;\r\n    }\r\n\r\n    const parser = inParser && inParser.hasOwnProperty('parse') ? inParser.parse : parse\r\n    if (inParser === null) {\r\n      throw new Error('Missing JS to AST parser');\r\n    }\r\n\r\n    const ast = Object.freeze(parser(`const parser_${ this.name } = ${ this.source };`, {\r\n      locations: true\r\n    }));\r\n    // take out the function object, outside the var declarations\r\n    const functionAST = ast.body[0].declarations[0].init;\r\n    this.traceFunctionAST(functionAST);\r\n\r\n    if (!ast) {\r\n      throw new Error('Failed to parse JS code');\r\n    }\r\n\r\n    return this.ast = functionAST;\r\n  }\r\n\r\n  traceFunctionAST(ast) {\r\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\r\n    this.contexts = contexts;\r\n    this.identifiers = identifiers;\r\n    this.functionCalls = functionCalls;\r\n    this.declarations = [];\r\n    this.functions = functions;\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      const { ast, context, name, origin, forceInteger, assignable } = declaration;\r\n      const { init } = ast;\r\n      const dependencies = this.getDependencies(init);\r\n      let valueType = null;\r\n\r\n      if (forceInteger) {\r\n        valueType = 'Integer';\r\n      } else {\r\n        if (init) {\r\n          const realType = this.getType(init);\r\n          switch (realType) {\r\n            case 'Integer':\r\n            case 'Float':\r\n            case 'Number':\r\n              if (init.type === 'MemberExpression') {\r\n                valueType = realType;\r\n              } else {\r\n                valueType = 'Number';\r\n              }\r\n              break;\r\n            case 'LiteralInteger':\r\n              valueType = 'Number';\r\n              break;\r\n            default:\r\n              valueType = realType;\r\n          }\r\n        }\r\n      }\r\n      this.declarations.push({\r\n        valueType,\r\n        dependencies,\r\n        isSafe: this.isSafeDependencies(dependencies),\r\n        ast,\r\n        name,\r\n        context,\r\n        origin,\r\n        assignable,\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < functions.length; i++) {\r\n      this.onNestedFunction(functions[i]);\r\n    }\r\n  }\r\n\r\n  getDeclaration(ast) {\r\n    for (let i = 0; i < this.identifiers.length; i++) {\r\n      const identifier = this.identifiers[i];\r\n      if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\r\n        for (let j = 0; j < this.declarations.length; j++) {\r\n          const declaration = this.declarations[j];\r\n          if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\r\n            return declaration;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @desc Return the type of parameter sent to subKernel/Kernel.\r\n   * @param {Object} ast - Identifier\r\n   * @returns {String} Type of the parameter\r\n   */\r\n  getVariableType(ast) {\r\n    if (ast.type !== 'Identifier') {\r\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\r\n    }\r\n    let type = null;\r\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\r\n    if (argumentIndex === -1) {\r\n      const declaration = this.getDeclaration(ast);\r\n      if (declaration) {\r\n        return declaration.valueType;\r\n      }\r\n    } else {\r\n      const argumentType = this.argumentTypes[argumentIndex];\r\n      if (argumentType) {\r\n        type = argumentType;\r\n      }\r\n    }\r\n    if (!type && this.strictTypingChecking) {\r\n      throw new Error(`Declaration of ${name} not found`);\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Generally used to lookup the value type returned from a member expressions\r\n   * @param {String} type\r\n   * @return {String}\r\n   */\r\n  getLookupType(type) {\r\n    if (!typeLookupMap.hasOwnProperty(type)) {\r\n      throw new Error(`unknown typeLookupMap ${ type }`);\r\n    }\r\n    return typeLookupMap[type];\r\n  }\r\n\r\n  getConstantType(constantName) {\r\n    if (this.constantTypes[constantName]) {\r\n      const type = this.constantTypes[constantName];\r\n      if (type === 'Float') {\r\n        return 'Number';\r\n      } else {\r\n        return type;\r\n      }\r\n    }\r\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\r\n  }\r\n\r\n  toString() {\r\n    if (this._string) return this._string;\r\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\r\n  }\r\n\r\n  toJSON() {\r\n    const settings = {\r\n      source: this.source,\r\n      name: this.name,\r\n      constants: this.constants,\r\n      constantTypes: this.constantTypes,\r\n      isRootKernel: this.isRootKernel,\r\n      isSubKernel: this.isSubKernel,\r\n      debug: this.debug,\r\n      output: this.output,\r\n      loopMaxIterations: this.loopMaxIterations,\r\n      argumentNames: this.argumentNames,\r\n      argumentTypes: this.argumentTypes,\r\n      argumentSizes: this.argumentSizes,\r\n      returnType: this.returnType,\r\n      leadingReturnStatement: this.leadingReturnStatement,\r\n      followingReturnStatement: this.followingReturnStatement,\r\n    };\r\n\r\n    return {\r\n      ast: this.ast,\r\n      settings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Recursively looks up type for ast expression until it's found\r\n   * @param ast\r\n   * @returns {String|null}\r\n   */\r\n  getType(ast) {\r\n    if (Array.isArray(ast)) {\r\n      return this.getType(ast[ast.length - 1]);\r\n    }\r\n    switch (ast.type) {\r\n      case 'BlockStatement':\r\n        return this.getType(ast.body);\r\n      case 'ArrayExpression':\r\n        return `Array(${ ast.elements.length })`;\r\n      case 'Literal':\r\n        const literalKey = `${ast.start},${ast.end}`;\r\n        if (this.literalTypes[literalKey]) {\r\n          return this.literalTypes[literalKey];\r\n        }\r\n        if (Number.isInteger(ast.value)) {\r\n          return 'LiteralInteger';\r\n        } else if (ast.value === true || ast.value === false) {\r\n          return 'Boolean';\r\n        } else {\r\n          return 'Number';\r\n        }\r\n        case 'AssignmentExpression':\r\n          return this.getType(ast.left);\r\n        case 'CallExpression':\r\n          if (this.isAstMathFunction(ast)) {\r\n            return 'Number';\r\n          }\r\n          if (!ast.callee || !ast.callee.name) {\r\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\r\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\r\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\r\n              return this.lookupReturnType(functionName, ast, this);\r\n            }\r\n            throw this.astErrorOutput('Unknown call expression', ast);\r\n          }\r\n          if (ast.callee && ast.callee.name) {\r\n            const functionName = ast.callee.name;\r\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\r\n            return this.lookupReturnType(functionName, ast, this);\r\n          }\r\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\r\n        case 'BinaryExpression':\r\n          // modulos is Number\r\n          switch (ast.operator) {\r\n            case '%':\r\n            case '/':\r\n              if (this.fixIntegerDivisionAccuracy) {\r\n                return 'Number';\r\n              } else {\r\n                break;\r\n              }\r\n              case '>':\r\n              case '<':\r\n                return 'Boolean';\r\n              case '&':\r\n              case '|':\r\n              case '^':\r\n              case '<<':\r\n              case '>>':\r\n              case '>>>':\r\n                return 'Integer';\r\n          }\r\n          const type = this.getType(ast.left);\r\n          if (this.isState('skip-literal-correction')) return type;\r\n          if (type === 'LiteralInteger') {\r\n            const rightType = this.getType(ast.right);\r\n            if (rightType === 'LiteralInteger') {\r\n              if (ast.left.value % 1 === 0) {\r\n                return 'Integer';\r\n              } else {\r\n                return 'Float';\r\n              }\r\n            }\r\n            return rightType;\r\n          }\r\n          return typeLookupMap[type] || type;\r\n        case 'UpdateExpression':\r\n          return this.getType(ast.argument);\r\n        case 'UnaryExpression':\r\n          if (ast.operator === '~') {\r\n            return 'Integer';\r\n          }\r\n          return this.getType(ast.argument);\r\n        case 'VariableDeclaration': {\r\n          const declarations = ast.declarations;\r\n          let lastType;\r\n          for (let i = 0; i < declarations.length; i++) {\r\n            const declaration = declarations[i];\r\n            lastType = this.getType(declaration);\r\n          }\r\n          if (!lastType) {\r\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\r\n          }\r\n          return lastType;\r\n        }\r\n        case 'VariableDeclarator':\r\n          const declaration = this.getDeclaration(ast.id);\r\n          if (!declaration) {\r\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\r\n          }\r\n\r\n          if (!declaration.valueType) {\r\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\r\n          }\r\n\r\n          return declaration.valueType;\r\n        case 'Identifier':\r\n          if (ast.name === 'Infinity') {\r\n            return 'Number';\r\n          }\r\n          if (this.isAstVariable(ast)) {\r\n            const signature = this.getVariableSignature(ast);\r\n            if (signature === 'value') {\r\n              const type = this.getVariableType(ast);\r\n              if (!type) {\r\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\r\n              }\r\n              return type;\r\n            }\r\n          }\r\n          const origin = this.findIdentifierOrigin(ast);\r\n          if (origin && origin.init) {\r\n            return this.getType(origin.init);\r\n          }\r\n          return null;\r\n        case 'ReturnStatement':\r\n          return this.getType(ast.argument);\r\n        case 'MemberExpression':\r\n          if (this.isAstMathFunction(ast)) {\r\n            switch (ast.property.name) {\r\n              case 'ceil':\r\n                return 'Integer';\r\n              case 'floor':\r\n                return 'Integer';\r\n              case 'round':\r\n                return 'Integer';\r\n            }\r\n            return 'Number';\r\n          }\r\n          if (this.isAstVariable(ast)) {\r\n            const variableSignature = this.getVariableSignature(ast);\r\n            switch (variableSignature) {\r\n              case 'value[]':\r\n                return this.getLookupType(this.getVariableType(ast.object));\r\n              case 'value[][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object));\r\n              case 'value[][][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\r\n              case 'value[][][][]':\r\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\r\n              case 'value.thread.value':\r\n              case 'this.thread.value':\r\n                return 'Integer';\r\n              case 'this.output.value':\r\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\r\n              case 'this.constants.value':\r\n                return this.getConstantType(ast.property.name);\r\n              case 'this.constants.value[]':\r\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\r\n              case 'this.constants.value[][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\r\n              case 'this.constants.value[][][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\r\n              case 'this.constants.value[][][][]':\r\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\r\n              case 'fn()[]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'fn()[][]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'fn()[][][]':\r\n                return this.getLookupType(this.getType(ast.object));\r\n              case 'value.value':\r\n                if (this.isAstMathVariable(ast)) {\r\n                  return 'Number';\r\n                }\r\n                switch (ast.property.name) {\r\n                  case 'r':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'g':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'b':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                  case 'a':\r\n                    return this.getLookupType(this.getVariableType(ast.object));\r\n                }\r\n                case '[][]':\r\n                  return 'Number';\r\n            }\r\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\r\n          }\r\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\r\n        case 'ConditionalExpression':\r\n          return this.getType(ast.consequent);\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n          const lastReturn = this.findLastReturn(ast.body);\r\n          if (lastReturn) {\r\n            return this.getType(lastReturn);\r\n          }\r\n          return null;\r\n        case 'IfStatement':\r\n          return this.getType(ast.consequent);\r\n        default:\r\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\r\n    }\r\n  }\r\n\r\n  inferArgumentTypesIfNeeded(functionName, args) {\r\n    // ensure arguments are filled in, so when we lookup return type, we already can infer it\r\n    for (let i = 0; i < args.length; i++) {\r\n      if (!this.needsArgumentType(functionName, i)) continue;\r\n      const type = this.getType(args[i]);\r\n      if (!type) {\r\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\r\n      }\r\n      this.assignArgumentType(functionName, i, type);\r\n    }\r\n  }\r\n\r\n  isAstMathVariable(ast) {\r\n    const mathProperties = [\r\n      'E',\r\n      'PI',\r\n      'SQRT2',\r\n      'SQRT1_2',\r\n      'LN2',\r\n      'LN10',\r\n      'LOG2E',\r\n      'LOG10E',\r\n    ];\r\n    return ast.type === 'MemberExpression' &&\r\n      ast.object && ast.object.type === 'Identifier' &&\r\n      ast.object.name === 'Math' &&\r\n      ast.property &&\r\n      ast.property.type === 'Identifier' &&\r\n      mathProperties.indexOf(ast.property.name) > -1;\r\n  }\r\n\r\n  isAstMathFunction(ast) {\r\n    const mathFunctions = [\r\n      'abs',\r\n      'acos',\r\n      'asin',\r\n      'atan',\r\n      'atan2',\r\n      'ceil',\r\n      'cos',\r\n      'exp',\r\n      'floor',\r\n      'log',\r\n      'log2',\r\n      'max',\r\n      'min',\r\n      'pow',\r\n      'random',\r\n      'round',\r\n      'sign',\r\n      'sin',\r\n      'sqrt',\r\n      'tan',\r\n    ];\r\n    return ast.type === 'CallExpression' &&\r\n      ast.callee &&\r\n      ast.callee.type === 'MemberExpression' &&\r\n      ast.callee.object &&\r\n      ast.callee.object.type === 'Identifier' &&\r\n      ast.callee.object.name === 'Math' &&\r\n      ast.callee.property &&\r\n      ast.callee.property.type === 'Identifier' &&\r\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\r\n  }\r\n\r\n  isAstVariable(ast) {\r\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\r\n  }\r\n\r\n  isSafe(ast) {\r\n    return this.isSafeDependencies(this.getDependencies(ast));\r\n  }\r\n\r\n  isSafeDependencies(dependencies) {\r\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ast\r\n   * @param dependencies\r\n   * @param isNotSafe\r\n   * @return {Array}\r\n   */\r\n  getDependencies(ast, dependencies, isNotSafe) {\r\n    if (!dependencies) {\r\n      dependencies = [];\r\n    }\r\n    if (!ast) return null;\r\n    if (Array.isArray(ast)) {\r\n      for (let i = 0; i < ast.length; i++) {\r\n        this.getDependencies(ast[i], dependencies, isNotSafe);\r\n      }\r\n      return dependencies;\r\n    }\r\n    switch (ast.type) {\r\n      case 'AssignmentExpression':\r\n        this.getDependencies(ast.left, dependencies, isNotSafe);\r\n        this.getDependencies(ast.right, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'ConditionalExpression':\r\n        this.getDependencies(ast.test, dependencies, isNotSafe);\r\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\r\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'Literal':\r\n        dependencies.push({\r\n          origin: 'literal',\r\n          value: ast.value,\r\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\r\n        });\r\n        break;\r\n      case 'VariableDeclarator':\r\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\r\n      case 'Identifier':\r\n        const declaration = this.getDeclaration(ast);\r\n        if (declaration) {\r\n          dependencies.push({\r\n            name: ast.name,\r\n            origin: 'declaration',\r\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\r\n          });\r\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\r\n          dependencies.push({\r\n            name: ast.name,\r\n            origin: 'argument',\r\n            isSafe: false,\r\n          });\r\n        } else if (this.strictTypingChecking) {\r\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\r\n        }\r\n        break;\r\n      case 'FunctionDeclaration':\r\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\r\n      case 'ReturnStatement':\r\n        return this.getDependencies(ast.argument, dependencies);\r\n      case 'BinaryExpression':\r\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\r\n        this.getDependencies(ast.left, dependencies, isNotSafe);\r\n        this.getDependencies(ast.right, dependencies, isNotSafe);\r\n        return dependencies;\r\n      case 'UnaryExpression':\r\n      case 'UpdateExpression':\r\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\r\n      case 'VariableDeclaration':\r\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\r\n      case 'ArrayExpression':\r\n        dependencies.push({\r\n          origin: 'declaration',\r\n          isSafe: true,\r\n        });\r\n        return dependencies;\r\n      case 'CallExpression':\r\n        dependencies.push({\r\n          origin: 'function',\r\n          isSafe: true,\r\n        });\r\n        return dependencies;\r\n      case 'MemberExpression':\r\n        const details = this.getMemberExpressionDetails(ast);\r\n        switch (details.signature) {\r\n          case 'value[]':\r\n            this.getDependencies(ast.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'value[][]':\r\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'value[][][]':\r\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\r\n            break;\r\n          case 'this.output.value':\r\n            if (this.dynamicOutput) {\r\n              dependencies.push({\r\n                name: details.name,\r\n                origin: 'output',\r\n                isSafe: false,\r\n              });\r\n            }\r\n            break;\r\n        }\r\n        if (details) {\r\n          if (details.property) {\r\n            this.getDependencies(details.property, dependencies, isNotSafe);\r\n          }\r\n          if (details.xProperty) {\r\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\r\n          }\r\n          if (details.yProperty) {\r\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\r\n          }\r\n          if (details.zProperty) {\r\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\r\n          }\r\n          return dependencies;\r\n        }\r\n        default:\r\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\r\n    }\r\n    return dependencies;\r\n  }\r\n\r\n  getVariableSignature(ast) {\r\n    if (!this.isAstVariable(ast)) {\r\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\r\n    }\r\n    if (ast.type === 'Identifier') {\r\n      return 'value';\r\n    }\r\n    const signature = [];\r\n    while (true) {\r\n      if (!ast) break;\r\n      if (ast.computed) {\r\n        signature.push('[]');\r\n      } else if (ast.type === 'ThisExpression') {\r\n        signature.unshift('this');\r\n      } else if (ast.property && ast.property.name) {\r\n        if (\r\n          ast.property.name === 'x' ||\r\n          ast.property.name === 'y' ||\r\n          ast.property.name === 'z'\r\n        ) {\r\n          signature.unshift('.value');\r\n        } else if (\r\n          ast.property.name === 'constants' ||\r\n          ast.property.name === 'thread' ||\r\n          ast.property.name === 'output'\r\n        ) {\r\n          signature.unshift('.' + ast.property.name);\r\n        } else {\r\n          signature.unshift('.value');\r\n        }\r\n      } else if (ast.name) {\r\n        signature.unshift('value');\r\n      } else if (ast.callee && ast.callee.name) {\r\n        signature.unshift('fn()');\r\n      } else if (ast.elements) {\r\n        signature.unshift('[]');\r\n      } else {\r\n        signature.unshift('unknown');\r\n      }\r\n      ast = ast.object;\r\n    }\r\n\r\n    const signatureString = signature.join('');\r\n    const allowedExpressions = [\r\n      'value',\r\n      'value[]',\r\n      'value[][]',\r\n      'value[][][]',\r\n      'value[][][][]',\r\n      'value.value',\r\n      'value.thread.value',\r\n      'this.thread.value',\r\n      'this.output.value',\r\n      'this.constants.value',\r\n      'this.constants.value[]',\r\n      'this.constants.value[][]',\r\n      'this.constants.value[][][]',\r\n      'this.constants.value[][][][]',\r\n      'fn()[]',\r\n      'fn()[][]',\r\n      'fn()[][][]',\r\n      '[][]',\r\n    ];\r\n    if (allowedExpressions.indexOf(signatureString) > -1) {\r\n      return signatureString;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  build() {\r\n    return this.toString().length > 0;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for generically to its respective function\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed string array\r\n   */\r\n  astGeneric(ast, retArr) {\r\n    if (ast === null) {\r\n      throw this.astErrorOutput('NULL ast', ast);\r\n    } else {\r\n      if (Array.isArray(ast)) {\r\n        for (let i = 0; i < ast.length; i++) {\r\n          this.astGeneric(ast[i], retArr);\r\n        }\r\n        return retArr;\r\n      }\r\n\r\n      switch (ast.type) {\r\n        case 'FunctionDeclaration':\r\n          return this.astFunctionDeclaration(ast, retArr);\r\n        case 'FunctionExpression':\r\n          return this.astFunctionExpression(ast, retArr);\r\n        case 'ReturnStatement':\r\n          return this.astReturnStatement(ast, retArr);\r\n        case 'Literal':\r\n          return this.astLiteral(ast, retArr);\r\n        case 'BinaryExpression':\r\n          return this.astBinaryExpression(ast, retArr);\r\n        case 'Identifier':\r\n          return this.astIdentifierExpression(ast, retArr);\r\n        case 'AssignmentExpression':\r\n          return this.astAssignmentExpression(ast, retArr);\r\n        case 'ExpressionStatement':\r\n          return this.astExpressionStatement(ast, retArr);\r\n        case 'EmptyStatement':\r\n          return this.astEmptyStatement(ast, retArr);\r\n        case 'BlockStatement':\r\n          return this.astBlockStatement(ast, retArr);\r\n        case 'IfStatement':\r\n          return this.astIfStatement(ast, retArr);\r\n        case 'SwitchStatement':\r\n          return this.astSwitchStatement(ast, retArr);\r\n        case 'BreakStatement':\r\n          return this.astBreakStatement(ast, retArr);\r\n        case 'ContinueStatement':\r\n          return this.astContinueStatement(ast, retArr);\r\n        case 'ForStatement':\r\n          return this.astForStatement(ast, retArr);\r\n        case 'WhileStatement':\r\n          return this.astWhileStatement(ast, retArr);\r\n        case 'DoWhileStatement':\r\n          return this.astDoWhileStatement(ast, retArr);\r\n        case 'VariableDeclaration':\r\n          return this.astVariableDeclaration(ast, retArr);\r\n        case 'VariableDeclarator':\r\n          return this.astVariableDeclarator(ast, retArr);\r\n        case 'ThisExpression':\r\n          return this.astThisExpression(ast, retArr);\r\n        case 'SequenceExpression':\r\n          return this.astSequenceExpression(ast, retArr);\r\n        case 'UnaryExpression':\r\n          return this.astUnaryExpression(ast, retArr);\r\n        case 'UpdateExpression':\r\n          return this.astUpdateExpression(ast, retArr);\r\n        case 'LogicalExpression':\r\n          return this.astLogicalExpression(ast, retArr);\r\n        case 'MemberExpression':\r\n          return this.astMemberExpression(ast, retArr);\r\n        case 'CallExpression':\r\n          return this.astCallExpression(ast, retArr);\r\n        case 'ArrayExpression':\r\n          return this.astArrayExpression(ast, retArr);\r\n        case 'DebuggerStatement':\r\n          return this.astDebuggerStatement(ast, retArr);\r\n        case 'ConditionalExpression':\r\n          return this.astConditionalExpression(ast, retArr);\r\n      }\r\n\r\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\r\n    }\r\n  }\r\n  /**\r\n   * @desc To throw the AST error, with its location.\r\n   * @param {string} error - the error message output\r\n   * @param {Object} ast - the AST object where the error is\r\n   */\r\n  astErrorOutput(error, ast) {\r\n    if (typeof this.source !== 'string') {\r\n      return new Error(error);\r\n    }\r\n\r\n    const debugString = getAstString(this.source, ast);\r\n    const leadingSource = this.source.substr(ast.start);\r\n    const splitLines = leadingSource.split(/\\n/);\r\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\r\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\r\n  }\r\n\r\n  astDebuggerStatement(arrNode, retArr) {\r\n    return retArr;\r\n  }\r\n\r\n  astConditionalExpression(ast, retArr) {\r\n    if (ast.type !== 'ConditionalExpression') {\r\n      throw this.astErrorOutput('Not a conditional expression', ast);\r\n    }\r\n    retArr.push('(');\r\n    this.astGeneric(ast.test, retArr);\r\n    retArr.push('?');\r\n    this.astGeneric(ast.consequent, retArr);\r\n    retArr.push(':');\r\n    this.astGeneric(ast.alternate, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} ast\r\n   * @param {String[]} retArr\r\n   * @returns {String[]}\r\n   */\r\n  astFunction(ast, retArr) {\r\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunctionDeclaration(ast, retArr) {\r\n    if (this.isChildFunction(ast)) {\r\n      return retArr;\r\n    }\r\n    return this.astFunction(ast, retArr);\r\n  }\r\n  astFunctionExpression(ast, retArr) {\r\n    if (this.isChildFunction(ast)) {\r\n      return retArr;\r\n    }\r\n    return this.astFunction(ast, retArr);\r\n  }\r\n  isChildFunction(ast) {\r\n    for (let i = 0; i < this.functions.length; i++) {\r\n      if (this.functions[i] === ast) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  astReturnStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astLiteral(ast, retArr) {\r\n    this.literalTypes[`${ast.start},${ast.end}`] = 'Number';\r\n    return retArr;\r\n  }\r\n  astBinaryExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astIdentifierExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astAssignmentExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *generic expression* statement\r\n   * @param {Object} esNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astExpressionStatement(esNode, retArr) {\r\n    this.astGeneric(esNode.expression, retArr);\r\n    retArr.push(';');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\r\n   * @param {Object} eNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astEmptyStatement(eNode, retArr) {\r\n    return retArr;\r\n  }\r\n  astBlockStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astIfStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astSwitchStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Break* Statement\r\n   * @param {Object} brNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBreakStatement(brNode, retArr) {\r\n    retArr.push('break;');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Continue* Statement\r\n   * @param {Object} crNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astContinueStatement(crNode, retArr) {\r\n    retArr.push('continue;\\n');\r\n    return retArr;\r\n  }\r\n  astForStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astWhileStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astDoWhileStatement(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    const declarations = varDecNode.declarations;\r\n    if (!declarations || !declarations[0] || !declarations[0].init) {\r\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\r\n    }\r\n    const result = [];\r\n    const firstDeclaration = declarations[0];\r\n    const init = firstDeclaration.init;\r\n    let type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\r\n    if (type === 'LiteralInteger') {\r\n      // We had the choice to go either float or int, choosing float\r\n      type = 'Number';\r\n    }\r\n    const markupType = typeMap[type];\r\n    if (!markupType) {\r\n      throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\r\n    }\r\n    let dependencies = this.getDependencies(firstDeclaration.init);\r\n    throw new Error('remove me');\r\n    this.declarations[firstDeclaration.id.name] = Object.freeze({\r\n      type,\r\n      dependencies,\r\n      isSafe: dependencies.every(dependency => dependency.isSafe)\r\n    });\r\n    const initResult = [`${type} user_${firstDeclaration.id.name}=`];\r\n    this.astGeneric(init, initResult);\r\n    result.push(initResult.join(''));\r\n\r\n    // first declaration is done, now any added ones setup\r\n    for (let i = 1; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      dependencies = this.getDependencies(declaration);\r\n      throw new Error('Remove me');\r\n      this.declarations[declaration.id.name] = Object.freeze({\r\n        type,\r\n        dependencies,\r\n        isSafe: false\r\n      });\r\n      this.astGeneric(declaration, result);\r\n    }\r\n\r\n    retArr.push(retArr, result.join(','));\r\n    retArr.push(';');\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\r\n   * @param {Object} iVarDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclarator(iVarDecNode, retArr) {\r\n    this.astGeneric(iVarDecNode.id, retArr);\r\n    if (iVarDecNode.init !== null) {\r\n      retArr.push('=');\r\n      this.astGeneric(iVarDecNode.init, retArr);\r\n    }\r\n    return retArr;\r\n  }\r\n  astThisExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astSequenceExpression(sNode, retArr) {\r\n    for (let i = 0; i < sNode.expressions.length; i++) {\r\n      if (i > 0) {\r\n        retArr.push(',');\r\n      }\r\n      this.astGeneric(sNode.expressions, retArr);\r\n    }\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Unary* Expression\r\n   * @param {Object} uNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astUnaryExpression(uNode, retArr) {\r\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\r\n    if (unaryResult) {\r\n      return retArr;\r\n    }\r\n\r\n    if (uNode.prefix) {\r\n      retArr.push(uNode.operator);\r\n      this.astGeneric(uNode.argument, retArr);\r\n    } else {\r\n      this.astGeneric(uNode.argument, retArr);\r\n      retArr.push(uNode.operator);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Update* Expression\r\n   * @param {Object} uNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astUpdateExpression(uNode, retArr) {\r\n    if (uNode.prefix) {\r\n      retArr.push(uNode.operator);\r\n      this.astGeneric(uNode.argument, retArr);\r\n    } else {\r\n      this.astGeneric(uNode.argument, retArr);\r\n      retArr.push(uNode.operator);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Logical* Expression\r\n   * @param {Object} logNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLogicalExpression(logNode, retArr) {\r\n    retArr.push('(');\r\n    this.astGeneric(logNode.left, retArr);\r\n    retArr.push(logNode.operator);\r\n    this.astGeneric(logNode.right, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n  astMemberExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astCallExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n  astArrayExpression(ast, retArr) {\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ast\r\n   * @return {IFunctionNodeMemberExpressionDetails}\r\n   */\r\n  getMemberExpressionDetails(ast) {\r\n    if (ast.type !== 'MemberExpression') {\r\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\r\n    }\r\n    let name = null;\r\n    let type = null;\r\n    const variableSignature = this.getVariableSignature(ast);\r\n    switch (variableSignature) {\r\n      case 'value':\r\n        return null;\r\n      case 'value.thread.value':\r\n      case 'this.thread.value':\r\n      case 'this.output.value':\r\n        return {\r\n          signature: variableSignature,\r\n            type: 'Integer',\r\n            name: ast.property.name\r\n        };\r\n      case 'value[]':\r\n        if (typeof ast.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object),\r\n            xProperty: ast.property\r\n        };\r\n      case 'value[][]':\r\n        if (typeof ast.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object),\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value[][][]':\r\n        if (typeof ast.object.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object.object),\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value[][][][]':\r\n        if (typeof ast.object.object.object.object.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        name = ast.object.object.object.object.name;\r\n        return {\r\n          name,\r\n          origin: 'user',\r\n            signature: variableSignature,\r\n            type: this.getVariableType(ast.object.object.object.object),\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n        };\r\n      case 'value.value':\r\n        if (typeof ast.property.name !== 'string') {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        if (this.isAstMathVariable(ast)) {\r\n          name = ast.property.name;\r\n          return {\r\n            name,\r\n            origin: 'Math',\r\n            type: 'Number',\r\n            signature: variableSignature,\r\n          };\r\n        }\r\n        switch (ast.property.name) {\r\n          case 'r':\r\n          case 'g':\r\n          case 'b':\r\n          case 'a':\r\n            name = ast.object.name;\r\n            return {\r\n              name,\r\n              property: ast.property.name,\r\n                origin: 'user',\r\n                signature: variableSignature,\r\n                type: 'Number'\r\n            };\r\n          default:\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        case 'this.constants.value':\r\n          if (typeof ast.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n              signature: variableSignature,\r\n          };\r\n        case 'this.constants.value[]':\r\n          if (typeof ast.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n              signature: variableSignature,\r\n              xProperty: ast.property,\r\n          };\r\n        case 'this.constants.value[][]': {\r\n          if (typeof ast.object.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n            signature: variableSignature,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n          };\r\n        }\r\n        case 'this.constants.value[][][]': {\r\n          if (typeof ast.object.object.object.property.name !== 'string') {\r\n            throw this.astErrorOutput('Unexpected expression', ast);\r\n          }\r\n          name = ast.object.object.object.property.name;\r\n          type = this.getConstantType(name);\r\n          if (!type) {\r\n            throw this.astErrorOutput('Constant has no type', ast);\r\n          }\r\n          return {\r\n            name,\r\n            type,\r\n            origin: 'constants',\r\n            signature: variableSignature,\r\n            zProperty: ast.object.object.property,\r\n            yProperty: ast.object.property,\r\n            xProperty: ast.property,\r\n          };\r\n        }\r\n        case 'fn()[]':\r\n        case '[][]':\r\n          return {\r\n            signature: variableSignature,\r\n              property: ast.property,\r\n          };\r\n        default:\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n    }\r\n  }\r\n\r\n  findIdentifierOrigin(astToFind) {\r\n    const stack = [this.ast];\r\n\r\n    while (stack.length > 0) {\r\n      const atNode = stack[0];\r\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\r\n        return atNode;\r\n      }\r\n      stack.shift();\r\n      if (atNode.argument) {\r\n        stack.push(atNode.argument);\r\n      } else if (atNode.body) {\r\n        stack.push(atNode.body);\r\n      } else if (atNode.declarations) {\r\n        stack.push(atNode.declarations);\r\n      } else if (Array.isArray(atNode)) {\r\n        for (let i = 0; i < atNode.length; i++) {\r\n          stack.push(atNode[i]);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findLastReturn(ast) {\r\n    const stack = [ast || this.ast];\r\n\r\n    while (stack.length > 0) {\r\n      const atNode = stack.pop();\r\n      if (atNode.type === 'ReturnStatement') {\r\n        return atNode;\r\n      }\r\n      if (atNode.type === 'FunctionDeclaration') {\r\n        continue;\r\n      }\r\n      if (atNode.argument) {\r\n        stack.push(atNode.argument);\r\n      } else if (atNode.body) {\r\n        stack.push(atNode.body);\r\n      } else if (atNode.declarations) {\r\n        stack.push(atNode.declarations);\r\n      } else if (Array.isArray(atNode)) {\r\n        for (let i = 0; i < atNode.length; i++) {\r\n          stack.push(atNode[i]);\r\n        }\r\n      } else if (atNode.consequent) {\r\n        stack.push(atNode.consequent);\r\n      } else if (atNode.cases) {\r\n        stack.push(atNode.cases);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getInternalVariableName(name) {\r\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\r\n      this._internalVariableNames[name] = 0;\r\n    }\r\n    this._internalVariableNames[name]++;\r\n    if (this._internalVariableNames[name] === 1) {\r\n      return name;\r\n    }\r\n    return name + this._internalVariableNames[name];\r\n  }\r\n\r\n  varWarn() {\r\n    console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\r\n  }\r\n}\r\n\r\nconst typeLookupMap = {\r\n  'Number': 'Number',\r\n  'Float': 'Float',\r\n  'Integer': 'Integer',\r\n  'Array': 'Number',\r\n  'Array(2)': 'Number',\r\n  'Array(3)': 'Number',\r\n  'Array(4)': 'Number',\r\n  'Array2D': 'Number',\r\n  'Array3D': 'Number',\r\n  'Input': 'Number',\r\n  'HTMLImage': 'Array(4)',\r\n  'HTMLVideo': 'Array(4)',\r\n  'HTMLImageArray': 'Array(4)',\r\n  'NumberTexture': 'Number',\r\n  'MemoryOptimizedNumberTexture': 'Number',\r\n  'Array1D(2)': 'Array(2)',\r\n  'Array1D(3)': 'Array(3)',\r\n  'Array1D(4)': 'Array(4)',\r\n  'Array2D(2)': 'Array(2)',\r\n  'Array2D(3)': 'Array(3)',\r\n  'Array2D(4)': 'Array(4)',\r\n  'Array3D(2)': 'Array(2)',\r\n  'Array3D(3)': 'Array(3)',\r\n  'Array3D(4)': 'Array(4)',\r\n  'ArrayTexture(1)': 'Number',\r\n  'ArrayTexture(2)': 'Array(2)',\r\n  'ArrayTexture(3)': 'Array(3)',\r\n  'ArrayTexture(4)': 'Array(4)',\r\n};\r\n","import { FunctionNode } from '../function-node';\r\n\r\n/**\r\n * @desc [INTERNAL] Represents a single function, inside JS\r\n *\r\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\r\n */\r\nexport class CPUFunctionNode extends FunctionNode {\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunction(ast, retArr) {\r\n\r\n    // Setup function return type and name\r\n    if (!this.isRootKernel) {\r\n      retArr.push('function');\r\n      retArr.push(' ');\r\n      retArr.push(this.name);\r\n      retArr.push('(');\r\n\r\n      // Arguments handling\r\n      for (let i = 0; i < this.argumentNames.length; ++i) {\r\n        const argumentName = this.argumentNames[i];\r\n\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        retArr.push('user_');\r\n        retArr.push(argumentName);\r\n      }\r\n\r\n      // Function opening\r\n      retArr.push(') {\\n');\r\n    }\r\n\r\n    // Body statement iteration\r\n    for (let i = 0; i < ast.body.body.length; ++i) {\r\n      this.astGeneric(ast.body.body[i], retArr);\r\n      retArr.push('\\n');\r\n    }\r\n\r\n    if (!this.isRootKernel) {\r\n      // Function closing\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to *return* statement\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astReturnStatement(ast, retArr) {\r\n    const type = this.returnType || this.getType(ast.argument);\r\n\r\n    if (!this.returnType) {\r\n      this.returnType = type;\r\n    }\r\n\r\n    if (this.isRootKernel) {\r\n      retArr.push(this.leadingReturnStatement);\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';\\n');\r\n      retArr.push(this.followingReturnStatement);\r\n      retArr.push('continue;\\n');\r\n    } else if (this.isSubKernel) {\r\n      retArr.push(`subKernelResult_${ this.name } = `);\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';');\r\n      retArr.push(`return subKernelResult_${ this.name };`);\r\n    } else {\r\n      retArr.push('return ');\r\n      this.astGeneric(ast.argument, retArr);\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *literal value*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLiteral(ast, retArr) {\r\n\r\n    // Reject non numeric literals\r\n    if (isNaN(ast.value)) {\r\n      throw this.astErrorOutput(\r\n        'Non-numeric literal not supported : ' + ast.value,\r\n        ast\r\n      );\r\n    }\r\n\r\n    retArr.push(ast.value);\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *binary* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBinaryExpression(ast, retArr) {\r\n    retArr.push('(');\r\n    this.astGeneric(ast.left, retArr);\r\n    retArr.push(ast.operator);\r\n    this.astGeneric(ast.right, retArr);\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput(\r\n        'IdentifierExpression - not an Identifier',\r\n        idtNode\r\n      );\r\n    }\r\n\r\n    switch (idtNode.name) {\r\n      case 'Infinity':\r\n        retArr.push('Infinity');\r\n        break;\r\n      default:\r\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\r\n          retArr.push('constants_' + idtNode.name);\r\n        } else {\r\n          retArr.push('user_' + idtNode.name);\r\n        }\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *for-loop* expression\r\n   * @param {Object} forNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astForStatement(forNode, retArr) {\r\n    if (forNode.type !== 'ForStatement') {\r\n      throw this.astErrorOutput('Invalid for statement', forNode);\r\n    }\r\n\r\n    const initArr = [];\r\n    const testArr = [];\r\n    const updateArr = [];\r\n    const bodyArr = [];\r\n    let isSafe = null;\r\n\r\n    if (forNode.init) {\r\n      this.pushState('in-for-loop-init');\r\n      this.astGeneric(forNode.init, initArr);\r\n      for (let i = 0; i < initArr.length; i++) {\r\n        if (initArr[i].includes && initArr[i].includes(',')) {\r\n          isSafe = false;\r\n        }\r\n      }\r\n      this.popState('in-for-loop-init');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.test) {\r\n      this.astGeneric(forNode.test, testArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.update) {\r\n      this.astGeneric(forNode.update, updateArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.body) {\r\n      this.pushState('loop-body');\r\n      this.astGeneric(forNode.body, bodyArr);\r\n      this.popState('loop-body');\r\n    }\r\n\r\n    // have all parts, now make them safe\r\n    if (isSafe === null) {\r\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\r\n    }\r\n\r\n    if (isSafe) {\r\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push('}\\n');\r\n    } else {\r\n      const iVariableName = this.getInternalVariableName('safeI');\r\n      if (initArr.length > 0) {\r\n        retArr.push(initArr.join(''), ';\\n');\r\n      }\r\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n      if (testArr.length > 0) {\r\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\r\n      }\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push(`\\n${updateArr.join('')};`);\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *while* loop\r\n   * @param {Object} whileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed javascript string\r\n   */\r\n  astWhileStatement(whileNode, retArr) {\r\n    if (whileNode.type !== 'WhileStatement') {\r\n      throw this.astErrorOutput(\r\n        'Invalid while statement',\r\n        whileNode\r\n      );\r\n    }\r\n\r\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\r\n    retArr.push('if (');\r\n    this.astGeneric(whileNode.test, retArr);\r\n    retArr.push(') {\\n');\r\n    this.astGeneric(whileNode.body, retArr);\r\n    retArr.push('} else {\\n');\r\n    retArr.push('break;\\n');\r\n    retArr.push('}\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *do while* loop\r\n   * @param {Object} doWhileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astDoWhileStatement(doWhileNode, retArr) {\r\n    if (doWhileNode.type !== 'DoWhileStatement') {\r\n      throw this.astErrorOutput(\r\n        'Invalid while statement',\r\n        doWhileNode\r\n      );\r\n    }\r\n\r\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\r\n    this.astGeneric(doWhileNode.body, retArr);\r\n    retArr.push('if (!');\r\n    this.astGeneric(doWhileNode.test, retArr);\r\n    retArr.push(') {\\n');\r\n    retArr.push('break;\\n');\r\n    retArr.push('}\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\r\n   * @param {Object} assNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astAssignmentExpression(assNode, retArr) {\r\n    const declaration = this.getDeclaration(assNode.left);\r\n    if (declaration && !declaration.assignable) {\r\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\r\n    }\r\n    this.astGeneric(assNode.left, retArr);\r\n    retArr.push(assNode.operator);\r\n    this.astGeneric(assNode.right, retArr);\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Block* statement\r\n   * @param {Object} bNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBlockStatement(bNode, retArr) {\r\n    if (this.isState('loop-body')) {\r\n      this.pushState('block-body'); // this prevents recursive removal of braces\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      this.popState('block-body');\r\n    } else {\r\n      retArr.push('{\\n');\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\r\n      this.varWarn();\r\n    }\r\n    retArr.push(`${varDecNode.kind} `);\r\n    const { declarations } = varDecNode;\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      if (i > 0) {\r\n        retArr.push(',');\r\n      }\r\n      this.astGeneric(declarations[i], retArr);\r\n    }\r\n    if (!this.isState('in-for-loop-init')) {\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *If* Statement\r\n   * @param {Object} ifNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIfStatement(ifNode, retArr) {\r\n    retArr.push('if (');\r\n    this.astGeneric(ifNode.test, retArr);\r\n    retArr.push(')');\r\n    if (ifNode.consequent.type === 'BlockStatement') {\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n    } else {\r\n      retArr.push(' {\\n');\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n      retArr.push('\\n}\\n');\r\n    }\r\n\r\n    if (ifNode.alternate) {\r\n      retArr.push('else ');\r\n      if (ifNode.alternate.type === 'BlockStatement') {\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n      } else {\r\n        retArr.push(' {\\n');\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n        retArr.push('\\n}\\n');\r\n      }\r\n    }\r\n    return retArr;\r\n\r\n  }\r\n\r\n  astSwitchStatement(ast, retArr) {\r\n    const { discriminant, cases } = ast;\r\n    retArr.push('switch (');\r\n    this.astGeneric(discriminant, retArr);\r\n    retArr.push(') {\\n');\r\n    for (let i = 0; i < cases.length; i++) {\r\n      if (cases[i].test === null) {\r\n        retArr.push('default:\\n');\r\n        this.astGeneric(cases[i].consequent, retArr);\r\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\r\n          retArr.push('break;\\n');\r\n        }\r\n        continue;\r\n      }\r\n      retArr.push('case ');\r\n      this.astGeneric(cases[i].test, retArr);\r\n      retArr.push(':\\n');\r\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\r\n        this.astGeneric(cases[i].consequent, retArr);\r\n        retArr.push('break;\\n');\r\n      }\r\n    }\r\n    retArr.push('\\n}');\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *This* expression\r\n   * @param {Object} tNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astThisExpression(tNode, retArr) {\r\n    retArr.push('_this');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Member* Expression\r\n   * @param {Object} mNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astMemberExpression(mNode, retArr) {\r\n    const {\r\n      signature,\r\n      type,\r\n      property,\r\n      xProperty,\r\n      yProperty,\r\n      zProperty,\r\n      name,\r\n      origin\r\n    } = this.getMemberExpressionDetails(mNode);\r\n    switch (signature) {\r\n      case 'this.thread.value':\r\n        retArr.push(`_this.thread.${ name }`);\r\n        return retArr;\r\n      case 'this.output.value':\r\n        switch (name) {\r\n          case 'x':\r\n            retArr.push('outputX');\r\n            break;\r\n          case 'y':\r\n            retArr.push('outputY');\r\n            break;\r\n          case 'z':\r\n            retArr.push('outputZ');\r\n            break;\r\n          default:\r\n            throw this.astErrorOutput('Unexpected expression', mNode);\r\n        }\r\n        return retArr;\r\n      case 'value':\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n      case 'value[]':\r\n      case 'value[][]':\r\n      case 'value[][][]':\r\n      case 'value.value':\r\n        if (origin === 'Math') {\r\n          retArr.push(Math[name]);\r\n          return retArr;\r\n        }\r\n        switch (property) {\r\n          case 'r':\r\n            retArr.push(`user_${ name }[0]`);\r\n            return retArr;\r\n          case 'g':\r\n            retArr.push(`user_${ name }[1]`);\r\n            return retArr;\r\n          case 'b':\r\n            retArr.push(`user_${ name }[2]`);\r\n            return retArr;\r\n          case 'a':\r\n            retArr.push(`user_${ name }[3]`);\r\n            return retArr;\r\n        }\r\n        break;\r\n      case 'this.constants.value':\r\n      case 'this.constants.value[]':\r\n      case 'this.constants.value[][]':\r\n      case 'this.constants.value[][][]':\r\n        break;\r\n      case 'fn()[]':\r\n        this.astGeneric(mNode.object, retArr);\r\n        retArr.push('[');\r\n        this.astGeneric(mNode.property, retArr);\r\n        retArr.push(']');\r\n        return retArr;\r\n      default:\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n    }\r\n\r\n    if (!mNode.computed) {\r\n      // handle simple types\r\n      switch (type) {\r\n        case 'Number':\r\n        case 'Integer':\r\n        case 'Float':\r\n        case 'Boolean':\r\n          retArr.push(`${origin}_${name}`);\r\n          return retArr;\r\n      }\r\n    }\r\n\r\n    // handle more complex types\r\n    // argument may have come from a parent\r\n    const markupName = `${origin}_${name}`;\r\n\r\n    switch (type) {\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n      case 'HTMLImageArray':\r\n      case 'ArrayTexture(1)':\r\n      case 'ArrayTexture(2)':\r\n      case 'ArrayTexture(3)':\r\n      case 'ArrayTexture(4)':\r\n      case 'HTMLImage':\r\n      default:\r\n        let size;\r\n        let isInput;\r\n        if (origin === 'constants') {\r\n          const constant = this.constants[name];\r\n          isInput = this.constantTypes[name] === 'Input';\r\n          size = isInput ? constant.size : null;\r\n        } else {\r\n          isInput = this.isInput(name);\r\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\r\n        }\r\n        retArr.push(`${ markupName }`);\r\n        if (zProperty && yProperty) {\r\n          if (isInput) {\r\n            retArr.push('[(');\r\n            this.astGeneric(zProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          } else {\r\n            retArr.push('[');\r\n            this.astGeneric(zProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          }\r\n        } else if (yProperty) {\r\n          if (isInput) {\r\n            retArr.push('[(');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          } else {\r\n            retArr.push('[');\r\n            this.astGeneric(yProperty, retArr);\r\n            retArr.push(']');\r\n            retArr.push('[');\r\n            this.astGeneric(xProperty, retArr);\r\n            retArr.push(']');\r\n          }\r\n        } else if (typeof xProperty !== 'undefined') {\r\n          retArr.push('[');\r\n          this.astGeneric(xProperty, retArr);\r\n          retArr.push(']');\r\n        }\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *call* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns  {Array} the append retArr\r\n   */\r\n  astCallExpression(ast, retArr) {\r\n    if (ast.type !== 'CallExpression') {\r\n      // Failure, unknown expression\r\n      throw this.astErrorOutput('Unknown CallExpression', ast);\r\n    }\r\n    // Get the full function call, unrolled\r\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\r\n\r\n    // Register the function into the called registry\r\n    if (this.calledFunctions.indexOf(functionName) < 0) {\r\n      this.calledFunctions.push(functionName);\r\n    }\r\n\r\n    const isMathFunction = this.isAstMathFunction(ast);\r\n\r\n    // track the function was called\r\n    if (this.onFunctionCall) {\r\n      this.onFunctionCall(this.name, functionName, ast.arguments);\r\n    }\r\n\r\n    // Call the function\r\n    retArr.push(functionName);\r\n\r\n    // Open arguments space\r\n    retArr.push('(');\r\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\r\n    // Add the arguments\r\n    for (let i = 0; i < ast.arguments.length; ++i) {\r\n      const argument = ast.arguments[i];\r\n\r\n      // in order to track return type, even though this is CPU\r\n      let argumentType = this.getType(argument);\r\n      if (!targetTypes[i]) {\r\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\r\n      }\r\n\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      this.astGeneric(argument, retArr);\r\n    }\r\n    // Close arguments space\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Array* Expression\r\n   * @param {Object} arrNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astArrayExpression(arrNode, retArr) {\r\n    const arrLen = arrNode.elements.length;\r\n\r\n    retArr.push('new Float32Array([');\r\n    for (let i = 0; i < arrLen; ++i) {\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      const subNode = arrNode.elements[i];\r\n      this.astGeneric(subNode, retArr)\r\n    }\r\n    retArr.push('])');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  astDebuggerStatement(arrNode, retArr) {\r\n    retArr.push('debugger;');\r\n    return retArr;\r\n  }\r\n}\r\n","import { utils } from '../../utils'\r\n\r\nfunction constantsToString(constants, types) {\r\n  const results = [];\r\n  for (const name in types) {\r\n    if (!types.hasOwnProperty(name)) continue;\r\n    const type = types[name];\r\n    const constant = constants[name];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n      case 'Boolean':\r\n        results.push(`${name}:${constant}`);\r\n        break;\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\r\n        break;\r\n    }\r\n  }\r\n  return `{ ${ results.join() } }`;\r\n}\r\n\r\nexport function cpuKernelString(cpuKernel, name) {\r\n  const header = [];\r\n  const thisProperties = [];\r\n  const beforeReturn = [];\r\n\r\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\r\n\r\n  header.push(\r\n    '  const { context, canvas, constants: incomingConstants } = settings;',\r\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\r\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\r\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`,\r\n  );\r\n\r\n  thisProperties.push(\r\n    '    constants: _constants,',\r\n    '    context,',\r\n    '    output,',\r\n    '    thread: {x: 0, y: 0, z: 0},',\r\n  );\r\n\r\n  if (cpuKernel.graphical) {\r\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\r\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\r\n\r\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case '_colorData':\r\n            return '_colorData';\r\n          case '_imageData':\r\n            return '_imageData';\r\n          case 'output':\r\n            return 'output';\r\n          case 'thread':\r\n            return 'this.thread';\r\n        }\r\n        return JSON.stringify(cpuKernel[propertyName]);\r\n      },\r\n      findDependency: (object, name) => {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case '_colorData':\r\n            return '_colorData';\r\n          case '_imageData':\r\n            return '_imageData';\r\n          case 'output':\r\n            return 'output';\r\n          case 'thread':\r\n            return 'this.thread';\r\n        }\r\n        return JSON.stringify(cpuKernel[propertyName]);\r\n      },\r\n      findDependency: () => {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    thisProperties.push(\r\n      '    _imageData,',\r\n      '    _colorData,',\r\n      `    color: ${colorFn},`,\r\n    );\r\n\r\n    beforeReturn.push(\r\n      `  kernel.getPixels = ${getPixelsFn};`\r\n    );\r\n  }\r\n\r\n  const constantTypes = [];\r\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\r\n  for (let i = 0; i < constantKeys.length; i++) {\r\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\r\n  }\r\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\r\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\r\n      doNotDefine: ['canvas'],\r\n      findDependency: (object, name) => {\r\n        if (object === 'this') {\r\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\r\n        }\r\n        return null;\r\n      },\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case 'canvas':\r\n            return;\r\n          case 'context':\r\n            return 'context';\r\n        }\r\n      }\r\n    });\r\n    beforeReturn.push(flattenedImageTo3DArray);\r\n    thisProperties.push(`    _mediaTo2DArray,`);\r\n    thisProperties.push(`    _imageTo3DArray,`);\r\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\r\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\r\n      findDependency: (object, name) => {\r\n        return null;\r\n      },\r\n      thisLookup: (propertyName) => {\r\n        switch (propertyName) {\r\n          case 'canvas':\r\n            return 'settings.canvas';\r\n          case 'context':\r\n            return 'settings.context';\r\n        }\r\n        throw new Error('unhandled thisLookup');\r\n      }\r\n    });\r\n    beforeReturn.push(flattenedImageTo2DArray);\r\n    thisProperties.push(`    _mediaTo2DArray,`);\r\n  }\r\n\r\n  return `function(settings) {\r\n${ header.join('\\n') }\r\n  for (const p in _constantTypes) {\r\n    if (!_constantTypes.hasOwnProperty(p)) continue;\r\n    const type = _constantTypes[p];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n      case 'Boolean':\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        if (incomingConstants.hasOwnProperty(p)) {\r\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\r\n        }\r\n        continue;\r\n    }\r\n    if (!incomingConstants.hasOwnProperty(p)) {\r\n      throw new Error('constant ' + p + ' not found');\r\n    }\r\n    _constants[p] = incomingConstants[p];\r\n  }\r\n  const kernel = (function() {\r\n${cpuKernel._kernelString}\r\n  })\r\n    .apply({ ${thisProperties.join('\\n')} });\r\n  ${ beforeReturn.join('\\n') }\r\n  return kernel;\r\n}`;\r\n}\r\n","import { Kernel } from '../kernel';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { CPUFunctionNode } from './function-node';\r\nimport { utils } from '../../utils';\r\nimport { cpuKernelString } from './kernel-string';\r\n\r\n/**\r\n * @desc Kernel Implementation for CPU.\r\n * <p>Instantiates properties to the CPU Kernel.</p>\r\n */\r\nexport class CPUKernel extends Kernel {\r\n  static getFeatures() {\r\n    return this.features;\r\n  }\r\n  static get features() {\r\n    return Object.freeze({\r\n      kernelMap: true,\r\n      isIntegerDivisionAccurate: true\r\n    });\r\n  }\r\n  static get isSupported() {\r\n    return true;\r\n  }\r\n  static isContextMatch(context) {\r\n    return false;\r\n  }\r\n  /**\r\n   * @desc The current mode in which gpu.js is executing.\r\n   */\r\n  static get mode() {\r\n    return 'cpu';\r\n  }\r\n\r\n  static nativeFunctionArguments() {\r\n    return null;\r\n  }\r\n\r\n  static nativeFunctionReturnType() {\r\n    return null;\r\n  }\r\n\r\n  static combineKernels(combinedKernel) {\r\n    return combinedKernel;\r\n  }\r\n\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.mergeSettings(source.settings || settings);\r\n\r\n    this._imageData = null;\r\n    this._colorData = null;\r\n    this._kernelString = null;\r\n    this.thread = {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    };\r\n    this.translatedSources = null;\r\n  }\r\n\r\n  initCanvas() {\r\n    if (typeof document !== 'undefined') {\r\n      return document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      return new OffscreenCanvas(0, 0);\r\n    }\r\n  }\r\n\r\n  initContext() {\r\n    if (!this.canvas) return null;\r\n    return this.canvas.getContext('2d');\r\n  }\r\n\r\n  initPlugins(settings) {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      if (argType === 'Array') {\r\n        this.output = utils.getDimensions(argType);\r\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\r\n        this.output = args[0].output;\r\n      } else {\r\n        throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n    }\r\n\r\n    this.checkOutput();\r\n  }\r\n\r\n  translateSource() {\r\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\r\n    if (this.subKernels) {\r\n      const followingReturnStatement = []\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const {\r\n          name\r\n        } = this.subKernels[i];\r\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\r\n      }\r\n      this.followingReturnStatement = followingReturnStatement.join('');\r\n    }\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\r\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Builds the Kernel, by generating the kernel\r\n   * string using thread dimensions, and arguments\r\n   * supplied to the kernel.\r\n   *\r\n   * <p>If the graphical flag is enabled, canvas is used.</p>\r\n   */\r\n  build() {\r\n    this.setupConstants();\r\n    this.setupArguments(arguments);\r\n    this.validateSettings(arguments);\r\n    this.translateSource();\r\n\r\n    if (this.graphical) {\r\n      const {\r\n        canvas,\r\n        output\r\n      } = this;\r\n      if (!canvas) {\r\n        throw new Error('no canvas available for using graphical output');\r\n      }\r\n      const width = output[0];\r\n      const height = output[1] || 1;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      this._imageData = this.context.createImageData(width, height);\r\n      this._colorData = new Uint8ClampedArray(width * height * 4);\r\n    }\r\n\r\n    const kernelString = this.getKernelString();\r\n    this.kernelString = kernelString;\r\n\r\n    if (this.debug) {\r\n      console.log('Function output:');\r\n      console.log(kernelString);\r\n    }\r\n\r\n    try {\r\n      this.run = new Function([], kernelString).bind(this)();\r\n    } catch (e) {\r\n      console.error('An error occurred compiling the javascript: ', e);\r\n    }\r\n  }\r\n\r\n  color(r, g, b, a) {\r\n    if (typeof a === 'undefined') {\r\n      a = 1;\r\n    }\r\n\r\n    r = Math.floor(r * 255);\r\n    g = Math.floor(g * 255);\r\n    b = Math.floor(b * 255);\r\n    a = Math.floor(a * 255);\r\n\r\n    const width = this.output[0];\r\n    const height = this.output[1];\r\n\r\n    const x = this.thread.x;\r\n    const y = height - this.thread.y - 1;\r\n\r\n    const index = x + y * width;\r\n\r\n    this._colorData[index * 4 + 0] = r;\r\n    this._colorData[index * 4 + 1] = g;\r\n    this._colorData[index * 4 + 2] = b;\r\n    this._colorData[index * 4 + 3] = a;\r\n  }\r\n\r\n  /**\r\n   * @desc Generates kernel string for this kernel program.\r\n   *\r\n   * <p>If sub-kernels are supplied, they are also factored in.\r\n   * This string can be saved by calling the `toString` method\r\n   * and then can be reused later.</p>\r\n   *\r\n   * @returns {String} result\r\n   *\r\n   */\r\n  getKernelString() {\r\n    if (this._kernelString !== null) return this._kernelString;\r\n\r\n    let kernelThreadString = null;\r\n    let {\r\n      translatedSources\r\n    } = this;\r\n    if (translatedSources.length > 1) {\r\n      translatedSources = translatedSources.filter(fn => {\r\n        if (/^function/.test(fn)) return fn;\r\n        kernelThreadString = fn;\r\n        return false;\r\n      })\r\n    } else {\r\n      kernelThreadString = translatedSources.shift();\r\n    }\r\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\r\n  ${ this.injectedNative || '' }\r\n  const _this = this;\r\n  ${ this._processConstants() }\r\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\r\n    ${ this._processArguments() }\r\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\r\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\r\n  };`;\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\r\n   */\r\n  toString() {\r\n    return cpuKernelString(this);\r\n  }\r\n\r\n  /**\r\n   * @desc Get the maximum loop size String.\r\n   * @returns {String} result\r\n   */\r\n  _getLoopMaxString() {\r\n    return (\r\n      this.loopMaxIterations ?\r\n      ` ${ parseInt(this.loopMaxIterations) };` :\r\n      ' 1000;'\r\n    );\r\n  }\r\n\r\n  _processConstants() {\r\n    if (!this.constants) return '';\r\n\r\n    const result = [];\r\n    for (let p in this.constants) {\r\n      const type = this.constantTypes[p];\r\n      switch (type) {\r\n        case 'HTMLImage':\r\n        case 'HTMLVideo':\r\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\r\n          break;\r\n        case 'HTMLImageArray':\r\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\r\n          break;\r\n        case 'Input':\r\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\r\n          break;\r\n        default:\r\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  _processArguments() {\r\n    const result = [];\r\n    for (let i = 0; i < this.argumentTypes.length; i++) {\r\n      const variableName = `user_${this.argumentNames[i]}`;\r\n      switch (this.argumentTypes[i]) {\r\n        case 'HTMLImage':\r\n        case 'HTMLVideo':\r\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\r\n          break;\r\n        case 'HTMLImageArray':\r\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\r\n          break;\r\n        case 'Input':\r\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\r\n          break;\r\n        case 'ArrayTexture(1)':\r\n        case 'ArrayTexture(2)':\r\n        case 'ArrayTexture(3)':\r\n        case 'ArrayTexture(4)':\r\n        case 'NumberTexture':\r\n        case 'MemoryOptimizedNumberTexture':\r\n          result.push(`\r\n    if (${variableName}.toArray) {\r\n      if (!_this.textureCache) {\r\n        _this.textureCache = [];\r\n        _this.arrayCache = [];\r\n      }\r\n      const textureIndex = _this.textureCache.indexOf(${variableName});\r\n      if (textureIndex !== -1) {\r\n        ${variableName} = _this.arrayCache[textureIndex];\r\n      } else {\r\n        _this.textureCache.push(${variableName});\r\n        ${variableName} = ${variableName}.toArray();\r\n        _this.arrayCache.push(${variableName});\r\n      }\r\n    }`);\r\n          break;\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  _mediaTo2DArray(media) {\r\n    const canvas = this.canvas;\r\n    const width = media.width > 0 ? media.width : media.videoWidth;\r\n    const height = media.height > 0 ? media.height : media.videoHeight;\r\n    if (canvas.width < width) {\r\n      canvas.width = width;\r\n    }\r\n    if (canvas.height < height) {\r\n      canvas.height = height;\r\n    }\r\n    const ctx = this.context;\r\n    ctx.drawImage(media, 0, 0, width, height);\r\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\r\n    const imageArray = new Array(height);\r\n    let index = 0;\r\n    for (let y = height - 1; y >= 0; y--) {\r\n      const row = imageArray[y] = new Array(width);\r\n      for (let x = 0; x < width; x++) {\r\n        const pixel = new Float32Array(4);\r\n        pixel[0] = pixelsData[index++] / 255; // r\r\n        pixel[1] = pixelsData[index++] / 255; // g\r\n        pixel[2] = pixelsData[index++] / 255; // b\r\n        pixel[3] = pixelsData[index++] / 255; // a\r\n        row[x] = pixel;\r\n      }\r\n    }\r\n    return imageArray;\r\n  }\r\n\r\n  getPixels(flip) {\r\n    const [width, height] = this.output;\r\n    // cpu is not flipped by default\r\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\r\n  }\r\n\r\n  _imageTo3DArray(images) {\r\n    const imagesArray = new Array(images.length);\r\n    for (let i = 0; i < images.length; i++) {\r\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\r\n    }\r\n    return imagesArray;\r\n  }\r\n\r\n  _resultKernelBody(kernelString) {\r\n    switch (this.output.length) {\r\n      case 1:\r\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\r\n      case 2:\r\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\r\n      case 3:\r\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\r\n      default:\r\n        throw new Error('unsupported size kernel');\r\n    }\r\n  }\r\n\r\n  _graphicalKernelBody(kernelThreadString) {\r\n    switch (this.output.length) {\r\n      case 2:\r\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\r\n      default:\r\n        throw new Error('unsupported size kernel');\r\n    }\r\n  }\r\n\r\n  _graphicalOutput() {\r\n    return `\r\n    this._imageData.data.set(this._colorData);\r\n    this.context.putImageData(this._imageData, 0, 0);\r\n    return;`\r\n  }\r\n\r\n  _getKernelResultTypeConstructorString() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return 'Float32Array';\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        return 'Array';\r\n      default:\r\n        if (this.graphical) {\r\n          return 'Float32Array';\r\n        }\r\n        throw new Error(`unhandled returnType ${ this.returnType }`);\r\n    }\r\n  }\r\n\r\n  _resultKernel1DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const result = new ${constructorString}(outputX);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let x = 0; x < outputX; x++) {\r\n      this.thread.x = x;\r\n      this.thread.y = 0;\r\n      this.thread.z = 0;\r\n      ${ kernelString }\r\n    }`;\r\n  }\r\n\r\n  _resultKernel2DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    const result = new Array(outputY);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let y = 0; y < outputY; y++) {\r\n      this.thread.z = 0;\r\n      this.thread.y = y;\r\n      const resultX = result[y] = new ${constructorString}(outputX);\r\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\r\n      for (let x = 0; x < outputX; x++) {\r\n        this.thread.x = x;\r\n        ${ kernelString }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _graphicalKernel2DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let y = 0; y < outputY; y++) {\r\n      this.thread.z = 0;\r\n      this.thread.y = y;\r\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\r\n      for (let x = 0; x < outputX; x++) {\r\n        this.thread.x = x;\r\n        ${ kernelString }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _resultKernel3DLoop(kernelString) {\r\n    const {\r\n      output\r\n    } = this;\r\n    const constructorString = this._getKernelResultTypeConstructorString();\r\n    return `  const outputX = _this.output[0];\r\n    const outputY = _this.output[1];\r\n    const outputZ = _this.output[2];\r\n    const result = new Array(outputZ);\r\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\r\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\r\n    for (let z = 0; z < outputZ; z++) {\r\n      this.thread.z = z;\r\n      const resultY = result[z] = new Array(outputY);\r\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\r\n      for (let y = 0; y < outputY; y++) {\r\n        this.thread.y = y;\r\n        const resultX = resultY[y] = new ${constructorString}(outputX);\r\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\r\n        for (let x = 0; x < outputX; x++) {\r\n          this.thread.x = x;\r\n          ${ kernelString }\r\n        }\r\n      }\r\n    }`;\r\n  }\r\n\r\n  _kernelOutput() {\r\n    if (!this.subKernels) {\r\n      return '\\n    return result;';\r\n    }\r\n    return `\\n    return {\r\n      result: result,\r\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\r\n    };`;\r\n  }\r\n\r\n  _mapSubKernels(fn) {\r\n    return this.subKernels === null ? [''] :\r\n      this.subKernels.map(fn);\r\n  }\r\n\r\n\r\n\r\n  destroy(removeCanvasReference) {\r\n    if (removeCanvasReference) {\r\n      delete this.canvas;\r\n    }\r\n  }\r\n\r\n  static destroyContext(context) {}\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\r\n    return json;\r\n  }\r\n\r\n  setOutput(output) {\r\n    super.setOutput(output);\r\n    const [width, height] = this.output;\r\n    if (this.graphical) {\r\n      this._imageData = this.context.createImageData(width, height);\r\n      this._colorData = new Uint8ClampedArray(width * height * 4);\r\n    }\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { Texture } from '../../../texture';\r\n\r\nexport class GLTextureFloat extends Texture {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  renderRawOutput() {\r\n    const { context: gl } = this;\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      this.texture,\r\n      0\r\n    );\r\n    const result = new Float32Array(this.size[0] * this.size[1] * 4);\r\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n  renderValues() {\r\n    return this.renderRawOutput();\r\n  }\r\n  toArray() {\r\n    return utils.erectFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray2Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(2)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray3(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray3Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(3)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erectArray4(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureArray4Float3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureFloat2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureFloat3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(1)';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized2D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureFloat } from './float';\r\n\r\nexport class GLTextureMemoryOptimized3D extends GLTextureFloat {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'MemoryOptimizedNumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { Texture } from '../../../texture';\r\n\r\nexport class GLTextureUnsigned extends Texture {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  renderRawOutput() {\r\n    const { context: gl } = this;\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      this.texture,\r\n      0\r\n    );\r\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\r\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\r\n    return result;\r\n  }\r\n  renderValues() {\r\n    return new Float32Array(this.renderRawOutput().buffer);\r\n  }\r\n  toArray() {\r\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureUnsigned2D extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureUnsigned3D extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'NumberTexture';\r\n  }\r\n  toArray() {\r\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\r\n  }\r\n}\r\n","import { GLTextureUnsigned } from './unsigned';\r\n\r\nexport class GLTextureGraphical extends GLTextureUnsigned {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.type = 'ArrayTexture(4)';\r\n  }\r\n  toArray() {\r\n    return this.renderValues();\r\n  }\r\n}\r\n","import { Kernel } from '../kernel';\r\nimport { utils } from '../../utils';\r\nimport { GLTextureArray2Float } from './texture/array-2-float';\r\nimport { GLTextureArray2Float2D } from './texture/array-2-float-2d';\r\nimport { GLTextureArray2Float3D } from './texture/array-2-float-3d';\r\nimport { GLTextureArray3Float } from './texture/array-3-float';\r\nimport { GLTextureArray3Float2D } from './texture/array-3-float-2d';\r\nimport { GLTextureArray3Float3D } from './texture/array-3-float-3d';\r\nimport { GLTextureArray4Float } from './texture/array-4-float';\r\nimport { GLTextureArray4Float2D } from './texture/array-4-float-2d';\r\nimport { GLTextureArray4Float3D } from './texture/array-4-float-3d';\r\nimport { GLTextureFloat } from './texture/float';\r\nimport { GLTextureFloat2D } from './texture/float-2d';\r\nimport { GLTextureFloat3D } from './texture/float-3d';\r\nimport { GLTextureMemoryOptimized } from './texture/memory-optimized';\r\nimport { GLTextureMemoryOptimized2D } from './texture/memory-optimized-2d';\r\nimport { GLTextureMemoryOptimized3D } from './texture/memory-optimized-3d';\r\nimport { GLTextureUnsigned } from './texture/unsigned';\r\nimport { GLTextureUnsigned2D } from './texture/unsigned-2d';\r\nimport { GLTextureUnsigned3D } from './texture/unsigned-3d';\r\nimport { GLTextureGraphical } from './texture/graphical';\r\n\r\n/**\r\n * @abstract\r\n * @extends Kernel\r\n */\r\nexport class GLKernel extends Kernel {\r\n  static get mode() {\r\n    return 'gpu';\r\n  }\r\n\r\n  static getIsFloatRead() {\r\n    const kernelString = `function kernelFunction() {\r\n      return 1;\r\n    }`;\r\n    const kernel = new this(kernelString, {\r\n      context: this.testContext,\r\n      canvas: this.testCanvas,\r\n      validate: false,\r\n      output: [1],\r\n      precision: 'single',\r\n      returnType: 'Number',\r\n      tactic: 'speed',\r\n    });\r\n    kernel.build();\r\n    kernel.run();\r\n    const result = kernel.renderOutput();\r\n    kernel.destroy(true);\r\n    return result[0] === 1;\r\n  }\r\n\r\n  static getIsIntegerDivisionAccurate() {\r\n    function kernelFunction(v1, v2) {\r\n      return v1[this.thread.x] / v2[this.thread.x];\r\n    }\r\n    const kernel = new this(kernelFunction.toString(), {\r\n      context: this.testContext,\r\n      canvas: this.testCanvas,\r\n      validate: false,\r\n      output: [2],\r\n      returnType: 'Number',\r\n      precision: 'unsigned',\r\n      tactic: 'speed',\r\n    });\r\n    const args = [\r\n      [6, 6030401],\r\n      [3, 3991]\r\n    ];\r\n    kernel.build.apply(kernel, args);\r\n    kernel.run.apply(kernel, args);\r\n    const result = kernel.renderOutput();\r\n    kernel.destroy(true);\r\n    // have we not got whole numbers for 6/3 or 6030401/3991\r\n    // add more here if others see this problem\r\n    return result[0] === 2 && result[1] === 1511;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static get testCanvas() {\r\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static get testContext() {\r\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @type {IKernelFeatures}\r\n   */\r\n  static get features() {\r\n    throw new Error(`\"features\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  static setupFeatureChecks() {\r\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\r\n  }\r\n\r\n  /**\r\n   * @desc Fix division by factor of 3 FP accuracy bug\r\n   * @param {Boolean} fix - should fix\r\n   */\r\n  setFixIntegerDivisionAccuracy(fix) {\r\n    this.fixIntegerDivisionAccuracy = fix;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle output mode\r\n   * @param {String} flag - 'single' or 'unsigned'\r\n   */\r\n  setPrecision(flag) {\r\n    this.precision = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Toggle texture output mode\r\n   * @param {Boolean} flag - true to enable floatTextures\r\n   * @deprecated\r\n   */\r\n  setFloatTextures(flag) {\r\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\r\n    this.floatTextures = flag;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * A highly readable very forgiving micro-parser for a glsl function that gets argument types\r\n   * @param {String} source\r\n   * @returns {{argumentTypes: String[], argumentNames: String[]}}\r\n   */\r\n  static nativeFunctionArguments(source) {\r\n    const argumentTypes = [];\r\n    const argumentNames = [];\r\n    const states = [];\r\n    const isStartingVariableName = /^[a-zA-Z_]/;\r\n    const isVariableChar = /[a-zA-Z_0-9]/;\r\n    let i = 0;\r\n    let argumentName = null;\r\n    let argumentType = null;\r\n    while (i < source.length) {\r\n      const char = source[i];\r\n      const nextChar = source[i + 1];\r\n      const state = states.length > 0 ? states[states.length - 1] : null;\r\n\r\n      // begin MULTI_LINE_COMMENT handling\r\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\r\n        states.push('MULTI_LINE_COMMENT');\r\n        i += 2;\r\n        continue;\r\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\r\n        states.pop();\r\n        i += 2;\r\n        continue;\r\n      }\r\n      // end MULTI_LINE_COMMENT handling\r\n\r\n      // begin COMMENT handling\r\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\r\n        states.push('COMMENT');\r\n        i += 2;\r\n        continue;\r\n      } else if (state === 'COMMENT' && char === '\\n') {\r\n        states.pop();\r\n        i++;\r\n        continue;\r\n      }\r\n      // end COMMENT handling\r\n\r\n      // being FUNCTION_ARGUMENTS handling\r\n      else if (state === null && char === '(') {\r\n        states.push('FUNCTION_ARGUMENTS');\r\n        i++;\r\n        continue;\r\n      } else if (state === 'FUNCTION_ARGUMENTS') {\r\n        if (char === ')') {\r\n          states.pop();\r\n          break;\r\n        }\r\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'float';\r\n          argumentName = '';\r\n          i += 6;\r\n          continue;\r\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'int';\r\n          argumentName = '';\r\n          i += 4;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec2';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec3';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\r\n          states.push('DECLARE_VARIABLE');\r\n          argumentType = 'vec4';\r\n          argumentName = '';\r\n          i += 5;\r\n          continue;\r\n        }\r\n      }\r\n      // end FUNCTION_ARGUMENTS handling\r\n\r\n      // begin DECLARE_VARIABLE handling\r\n      else if (state === 'DECLARE_VARIABLE') {\r\n        if (argumentName === '') {\r\n          if (char === ' ') {\r\n            i++;\r\n            continue;\r\n          }\r\n          if (!isStartingVariableName.test(char)) {\r\n            throw new Error('variable name is not expected string');\r\n          }\r\n        }\r\n        argumentName += char;\r\n        if (!isVariableChar.test(nextChar)) {\r\n          states.pop();\r\n          argumentNames.push(argumentName);\r\n          argumentTypes.push(typeMap[argumentType]);\r\n        }\r\n      }\r\n      // end DECLARE_VARIABLE handling\r\n\r\n      // Progress to next character\r\n      i++;\r\n    }\r\n    if (states.length > 0) {\r\n      throw new Error('GLSL function was not parsable');\r\n    }\r\n    return {\r\n      argumentNames,\r\n      argumentTypes,\r\n    };\r\n  }\r\n\r\n  static nativeFunctionReturnType(source) {\r\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\r\n  }\r\n\r\n  static combineKernels(combinedKernel, lastKernel) {\r\n    combinedKernel.apply(null, arguments);\r\n    const {\r\n      texSize,\r\n      context,\r\n      threadDim\r\n    } = lastKernel.texSize;\r\n    let result;\r\n    if (lastKernel.precision === 'single') {\r\n      const w = texSize[0];\r\n      const h = Math.ceil(texSize[1] / 4);\r\n      result = new Float32Array(w * h * 4 * 4);\r\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\r\n    } else {\r\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\r\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\r\n      result = new Float32Array(bytes.buffer);\r\n    }\r\n\r\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\r\n\r\n    if (lastKernel.output.length === 1) {\r\n      return result;\r\n    } else if (lastKernel.output.length === 2) {\r\n      return utils.splitArray(result, lastKernel.output[0]);\r\n    } else if (lastKernel.output.length === 3) {\r\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\r\n      return cube.map(function(x) {\r\n        return utils.splitArray(x, lastKernel.output[0]);\r\n      });\r\n    }\r\n  }\r\n\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.transferValues = null;\r\n    this.formatValues = null;\r\n    this.TextureConstructor = null;\r\n    this.renderOutput = null;\r\n    this.renderRawOutput = null;\r\n    this.texSize = null;\r\n    this.translatedSource = null;\r\n    this.renderStrategy = null;\r\n    this.compiledFragmentShader = null;\r\n    this.compiledVertexShader = null;\r\n  }\r\n\r\n  checkTextureSize() {\r\n    const { features } = this.constructor;\r\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\r\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\r\n    }\r\n  }\r\n\r\n  translateSource() {\r\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\r\n  }\r\n\r\n  /**\r\n   * Picks a render strategy for the now finally parsed kernel\r\n   * @param args\r\n   * @return {null|KernelOutput}\r\n   */\r\n  pickRenderStrategy(args) {\r\n    if (this.graphical) {\r\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\r\n      this.transferValues = (pixels) => pixels;\r\n      this.TextureConstructor = GLTextureGraphical;\r\n      return null;\r\n    }\r\n    if (this.precision === 'unsigned') {\r\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\r\n      this.transferValues = this.readPackedPixelsToFloat32Array;\r\n      if (this.pipeline) {\r\n        this.renderOutput = this.renderTexture;\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToTextures;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned3D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned2D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureUnsigned;\r\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            return this.requestFallback(args);\r\n        }\r\n      } else {\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToArrays;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            this.renderOutput = this.renderValues;\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned3D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\r\n              this.formatValues = utils.erect3DPackedFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureUnsigned2D;\r\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\r\n              this.formatValues = utils.erect2DPackedFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureUnsigned;\r\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\r\n              this.formatValues = utils.erectPackedFloat;\r\n              return null;\r\n            }\r\n\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            return this.requestFallback(args);\r\n        }\r\n      }\r\n    } else if (this.precision === 'single') {\r\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\r\n      this.transferValues = this.readFloatPixelsToFloat32Array;\r\n      if (this.pipeline) {\r\n        this.renderStrategy = renderStrategy.FloatTexture;\r\n        this.renderOutput = this.renderTexture;\r\n        if (this.subKernels !== null) {\r\n          this.renderKernels = this.renderKernelsToTextures;\r\n        }\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              if (this.output[2] > 0) {\r\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\r\n                return null;\r\n              } else if (this.output[1] > 0) {\r\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\r\n                return null;\r\n              } else {\r\n                this.TextureConstructor = GLTextureMemoryOptimized;\r\n                return null;\r\n              }\r\n            } else {\r\n              if (this.output[2] > 0) {\r\n                this.TextureConstructor = GLTextureFloat3D;\r\n                return null;\r\n              } else if (this.output[1] > 0) {\r\n                this.TextureConstructor = GLTextureFloat2D;\r\n                return null;\r\n              } else {\r\n                this.TextureConstructor = GLTextureFloat;\r\n                return null;\r\n              }\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              return null;\r\n            }\r\n        }\r\n      }\r\n      this.renderOutput = this.renderValues;\r\n      if (this.subKernels !== null) {\r\n        this.renderKernels = this.renderKernelsToArrays;\r\n      }\r\n      if (this.optimizeFloatMemory) {\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized3DFloat;\r\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized2DFloat;\r\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureMemoryOptimized;\r\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimizedFloat;\r\n              this.formatValues = utils.erectMemoryOptimizedFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\r\n              this.formatValues = utils.erect3DArray2;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\r\n              this.formatValues = utils.erect2DArray2;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\r\n              this.formatValues = utils.erectArray2;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\r\n              this.formatValues = utils.erect3DArray3;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\r\n              this.formatValues = utils.erect2DArray3;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\r\n              this.formatValues = utils.erectArray3;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\r\n              this.formatValues = utils.erect3DArray4;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\r\n              this.formatValues = utils.erect2DArray4;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\r\n              this.formatValues = utils.erectArray4;\r\n              return null;\r\n            }\r\n        }\r\n      } else {\r\n        switch (this.returnType) {\r\n          case 'LiteralInteger':\r\n          case 'Float':\r\n          case 'Number':\r\n          case 'Integer':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureFloat3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DFloat;\r\n              this.formatValues = utils.erect3DFloat;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureFloat2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DFloat;\r\n              this.formatValues = utils.erect2DFloat;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureFloat;\r\n              this.renderStrategy = renderStrategy.FloatPixelToFloat;\r\n              this.formatValues = utils.erectFloat;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\r\n              this.formatValues = utils.erect3DArray2;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray2Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\r\n              this.formatValues = utils.erect2DArray2;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray2Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\r\n              this.formatValues = utils.erectArray2;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(3)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\r\n              this.formatValues = utils.erect3DArray3;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray3Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\r\n              this.formatValues = utils.erect2DArray3;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray3Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\r\n              this.formatValues = utils.erectArray3;\r\n              return null;\r\n            }\r\n            break;\r\n          case 'Array(4)':\r\n            if (this.output[2] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float3D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\r\n              this.formatValues = utils.erect3DArray4;\r\n              return null;\r\n            } else if (this.output[1] > 0) {\r\n              this.TextureConstructor = GLTextureArray4Float2D;\r\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\r\n              this.formatValues = utils.erect2DArray4;\r\n              return null;\r\n            } else {\r\n              this.TextureConstructor = GLTextureArray4Float;\r\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\r\n              this.formatValues = utils.erectArray4;\r\n              return null;\r\n            }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\r\n    }\r\n\r\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @returns String\r\n   */\r\n  getKernelString() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n\r\n  getMainResultTexture() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Integer':\r\n      case 'Number':\r\n        return this.getMainResultNumberTexture();\r\n      case 'Array(2)':\r\n        return this.getMainResultArray2Texture();\r\n      case 'Array(3)':\r\n        return this.getMainResultArray3Texture();\r\n      case 'Array(4)':\r\n        return this.getMainResultArray4Texture();\r\n      default:\r\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelNumberTexture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelNumberTexture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray2Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray2Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray3Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray3Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultKernelArray4Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultSubKernelArray4Texture() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultGraphical() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultMemoryOptimizedFloats() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @returns String[]\r\n   */\r\n  getMainResultPackedPixels() {\r\n    throw new Error(`abstract method call`);\r\n  }\r\n\r\n  getMainResultString() {\r\n    if (this.graphical) {\r\n      return this.getMainResultGraphical();\r\n    } else if (this.precision === 'single') {\r\n      if (this.optimizeFloatMemory) {\r\n        return this.getMainResultMemoryOptimizedFloats();\r\n      }\r\n      return this.getMainResultTexture();\r\n    } else {\r\n      return this.getMainResultPackedPixels();\r\n    }\r\n  }\r\n\r\n  getMainResultNumberTexture() {\r\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\r\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\r\n  }\r\n\r\n  getMainResultArray2Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\r\n  }\r\n\r\n  getMainResultArray3Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\r\n  }\r\n\r\n  getMainResultArray4Texture() {\r\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\r\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getFloatTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp float;\\n';\r\n      case 'performance':\r\n        return 'precision highp float;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump float;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getIntTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp int;\\n';\r\n      case 'performance':\r\n        return 'precision highp int;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump int;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string}\r\n   */\r\n  getSampler2DTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp sampler2D;\\n';\r\n      case 'performance':\r\n        return 'precision highp sampler2D;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump sampler2D;\\n';\r\n    }\r\n  }\r\n\r\n  getSampler2DArrayTacticDeclaration() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'precision lowp sampler2DArray;\\n';\r\n      case 'performance':\r\n        return 'precision highp sampler2DArray;\\n';\r\n      case 'balanced':\r\n      default:\r\n        return 'precision mediump sampler2DArray;\\n';\r\n    }\r\n  }\r\n\r\n  renderTexture() {\r\n    return new this.TextureConstructor({\r\n      texture: this.outputTexture,\r\n      size: this.texSize,\r\n      dimensions: this.threadDim,\r\n      output: this.output,\r\n      context: this.context,\r\n    });\r\n  }\r\n  readPackedPixelsToUint8Array() {\r\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\r\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\r\n    return result;\r\n  }\r\n\r\n  readPackedPixelsToFloat32Array() {\r\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\r\n  }\r\n\r\n  readFloatPixelsToFloat32Array() {\r\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const w = texSize[0];\r\n    const h = texSize[1];\r\n    const result = new Float32Array(w * h * 4);\r\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n\r\n  readMemoryOptimizedFloatPixelsToFloat32Array() {\r\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\r\n    const {\r\n      texSize,\r\n      context: gl\r\n    } = this;\r\n    const w = texSize[0];\r\n    const h = texSize[1];\r\n    const result = new Float32Array(w * h * 4);\r\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Boolean} [flip]\r\n   * @return {Uint8Array}\r\n   */\r\n  getPixels(flip) {\r\n    const {\r\n      context: gl,\r\n      output\r\n    } = this;\r\n    const [width, height] = output;\r\n    const pixels = new Uint8Array(width * height * 4);\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    // flipped by default, so invert\r\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\r\n  }\r\n\r\n  renderKernelsToArrays() {\r\n    const result = {\r\n      result: this.renderOutput(),\r\n    };\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      result[this.subKernels[i].property] = new this.TextureConstructor({\r\n        texture: this.subKernelOutputTextures[i],\r\n        size: this.texSize,\r\n        dimensions: this.threadDim,\r\n        output: this.output,\r\n        context: this.context,\r\n      }).toArray();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  renderKernelsToTextures() {\r\n    const result = {\r\n      result: this.renderOutput(),\r\n    };\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      result[this.subKernels[i].property] = new this.TextureConstructor({\r\n        texture: this.subKernelOutputTextures[i],\r\n        size: this.texSize,\r\n        dimensions: this.threadDim,\r\n        output: this.output,\r\n        context: this.context,\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  setOutput(output) {\r\n    super.setOutput(output);\r\n    if (this.program) {\r\n      this.threadDim = [this.output[0], this.output[1] || 1, this.output[2] || 1];\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      const { context: gl } = this;\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n      this.updateMaxTexSize();\r\n      this.framebuffer.width = this.texSize[0];\r\n      this.framebuffer.height = this.texSize[1];\r\n      this.context.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      this.canvas.width = this.maxTexSize[0];\r\n      this.canvas.height = this.maxTexSize[1];\r\n      this._setupOutputTexture();\r\n      if (this.subKernels && this.subKernels.length > 0) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  renderValues() {\r\n    return this.formatValues(\r\n      this.transferValues(),\r\n      this.output[0],\r\n      this.output[1],\r\n      this.output[2]\r\n    );\r\n  }\r\n}\r\n\r\nexport const renderStrategy = Object.freeze({\r\n  PackedPixelToUint8Array: Symbol('PackedPixelToUint8Array'),\r\n  PackedPixelToFloat: Symbol('PackedPixelToFloat'),\r\n  PackedPixelTo2DFloat: Symbol('PackedPixelTo2DFloat'),\r\n  PackedPixelTo3DFloat: Symbol('PackedPixelTo3DFloat'),\r\n  PackedTexture: Symbol('PackedTexture'),\r\n  FloatPixelToFloat32Array: Symbol('FloatPixelToFloat32Array'),\r\n  FloatPixelToFloat: Symbol('FloatPixelToFloat'),\r\n  FloatPixelTo2DFloat: Symbol('FloatPixelTo2DFloat'),\r\n  FloatPixelTo3DFloat: Symbol('FloatPixelTo3DFloat'),\r\n  FloatPixelToArray2: Symbol('FloatPixelToArray2'),\r\n  FloatPixelTo2DArray2: Symbol('FloatPixelTo2DArray2'),\r\n  FloatPixelTo3DArray2: Symbol('FloatPixelTo3DArray2'),\r\n  FloatPixelToArray3: Symbol('FloatPixelToArray3'),\r\n  FloatPixelTo2DArray3: Symbol('FloatPixelTo2DArray3'),\r\n  FloatPixelTo3DArray3: Symbol('FloatPixelTo3DArray3'),\r\n  FloatPixelToArray4: Symbol('FloatPixelToArray4'),\r\n  FloatPixelTo2DArray4: Symbol('FloatPixelTo2DArray4'),\r\n  FloatPixelTo3DArray4: Symbol('FloatPixelTo3DArray4'),\r\n  FloatTexture: Symbol('FloatTexture'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimizedFloat: Symbol('MemoryOptimizedFloatPixelToFloat'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimized2DFloat: Symbol('MemoryOptimizedFloatPixelTo2DFloat'),\r\n  MemoryOptimizedFloatPixelToMemoryOptimized3DFloat: Symbol('MemoryOptimizedFloatPixelTo3DFloat'),\r\n});\r\n\r\nconst typeMap = {\r\n  int: 'Integer',\r\n  float: 'Number',\r\n  vec2: 'Array(2)',\r\n  vec3: 'Array(3)',\r\n  vec4: 'Array(4)',\r\n};\r\n","import { utils } from '../../utils';\r\nimport { FunctionNode } from '../function-node';\r\n// Closure capture for the ast function, prevent collision with existing AST functions\r\n// The prefixes to use\r\nconst jsMathPrefix = 'Math.';\r\nconst localPrefix = 'this.';\r\n\r\n/**\r\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective WebGL code\r\n * @extends FunctionNode\r\n * @returns the converted WebGL function string\r\n */\r\nexport class WebGLFunctionNode extends FunctionNode {\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\r\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to its *named function*\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astFunction(ast, retArr) {\r\n    // Setup function return type and name\r\n    if (this.isRootKernel) {\r\n      retArr.push('void');\r\n    } else {\r\n      // looking up return type, this is a little expensive, and can be avoided if returnType is set\r\n      let lastReturn = null;\r\n      if (!this.returnType) {\r\n        const lastReturn = this.findLastReturn();\r\n        if (lastReturn) {\r\n          this.returnType = this.getType(ast.body);\r\n          if (this.returnType === 'LiteralInteger') {\r\n            this.returnType = 'Number';\r\n          }\r\n        }\r\n      }\r\n\r\n      const { returnType } = this;\r\n      if (!returnType) {\r\n        retArr.push('void');\r\n      } else {\r\n        const type = typeMap[returnType];\r\n        if (!type) {\r\n          throw new Error(`unknown type ${returnType}`);\r\n        }\r\n        retArr.push(type);\r\n      }\r\n    }\r\n    retArr.push(' ');\r\n    retArr.push(this.name);\r\n    retArr.push('(');\r\n\r\n    if (!this.isRootKernel) {\r\n      // Arguments handling\r\n      for (let i = 0; i < this.argumentNames.length; ++i) {\r\n        const argumentName = this.argumentNames[i];\r\n\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\r\n        // The type is too loose ended, here we descide to solidify a type, lets go with float\r\n        if (!argumentType) {\r\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\r\n        }\r\n        if (argumentType === 'LiteralInteger') {\r\n          this.argumentTypes[i] = argumentType = 'Number';\r\n        }\r\n        const type = typeMap[argumentType];\r\n        if (!type) {\r\n          throw this.astErrorOutput('Unexpected expression', ast);\r\n        }\r\n        retArr.push(type);\r\n        retArr.push(' ');\r\n        retArr.push('user_');\r\n        retArr.push(argumentName);\r\n      }\r\n    }\r\n\r\n    // Function opening\r\n    retArr.push(') {\\n');\r\n\r\n    // Body statement iteration\r\n    for (let i = 0; i < ast.body.body.length; ++i) {\r\n      this.astGeneric(ast.body.body[i], retArr);\r\n      retArr.push('\\n');\r\n    }\r\n\r\n    // Function closing\r\n    retArr.push('}\\n');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for to *return* statement\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astReturnStatement(ast, retArr) {\r\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\r\n    this.pushState('skip-literal-correction');\r\n    const type = this.getType(ast.argument);\r\n    this.popState('skip-literal-correction');\r\n\r\n    const result = [];\r\n\r\n    if (!this.returnType) {\r\n      if (type === 'LiteralInteger' || type === 'Integer') {\r\n        this.returnType = 'Number';\r\n      } else {\r\n        this.returnType = type;\r\n      }\r\n    }\r\n\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Float':\r\n        switch (type) {\r\n          case 'Integer':\r\n            result.push('float(');\r\n            this.astGeneric(ast.argument, result);\r\n            result.push(')');\r\n            break;\r\n          case 'LiteralInteger':\r\n            this.castLiteralToFloat(ast.argument, result);\r\n\r\n            // Running astGeneric forces the LiteralInteger to pick a type, and here, if we are returning a float, yet\r\n            // the LiteralInteger has picked to be an integer because of constraints on it we cast it to float.\r\n            if (this.getType(ast) === 'Integer') {\r\n              result.unshift('float(');\r\n              result.push(')');\r\n            }\r\n            break;\r\n          default:\r\n            this.astGeneric(ast.argument, result);\r\n        }\r\n        break;\r\n      case 'Integer':\r\n        switch (type) {\r\n          case 'Float':\r\n          case 'Number':\r\n            this.castValueToInteger(ast.argument, result);\r\n            break;\r\n          case 'LiteralInteger':\r\n            this.castLiteralToInteger(ast.argument, result);\r\n            break;\r\n          default:\r\n            this.astGeneric(ast.argument, result);\r\n        }\r\n        break;\r\n      case 'Array(4)':\r\n      case 'Array(3)':\r\n      case 'Array(2)':\r\n      case 'Input':\r\n        this.astGeneric(ast.argument, result);\r\n        break;\r\n      default:\r\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\r\n    }\r\n\r\n    if (this.isRootKernel) {\r\n      retArr.push(`kernelResult = ${ result.join('') };`);\r\n      retArr.push('return;');\r\n    } else if (this.isSubKernel) {\r\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\r\n      retArr.push(`return subKernelResult_${ this.name };`);\r\n    } else {\r\n      retArr.push(`return ${ result.join('') };`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *literal value*\r\n   *\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   *\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astLiteral(ast, retArr) {\r\n    // Reject non numeric literals\r\n    if (isNaN(ast.value)) {\r\n      throw this.astErrorOutput(\r\n        'Non-numeric literal not supported : ' + ast.value,\r\n        ast\r\n      );\r\n    }\r\n\r\n    const key = `${ast.start},${ast.end}`;\r\n    if (Number.isInteger(ast.value)) {\r\n      if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n        this.literalTypes[key] = 'Integer';\r\n        retArr.push(`${ast.value}`);\r\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\r\n        this.literalTypes[key] = 'Number';\r\n        retArr.push(`${ast.value}.0`);\r\n      } else {\r\n        this.literalTypes[key] = 'Number';\r\n        retArr.push(`${ast.value}.0`);\r\n      }\r\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n      this.literalTypes[key] = 'Integer';\r\n      retArr.push(Math.round(ast.value));\r\n    } else {\r\n      this.literalTypes[key] = 'Number';\r\n      retArr.push(`${ast.value}`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *binary* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBinaryExpression(ast, retArr) {\r\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\r\n      return retArr;\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\r\n      retArr.push('div_with_int_check(');\r\n      this.pushState('building-float');\r\n      switch (this.getType(ast.left)) {\r\n        case 'Integer':\r\n          this.castValueToFloat(ast.left, retArr);\r\n          break;\r\n        case 'LiteralInteger':\r\n          this.castLiteralToFloat(ast.left, retArr);\r\n          break;\r\n        default:\r\n          this.astGeneric(ast.left, retArr);\r\n      }\r\n      retArr.push(', ');\r\n      switch (this.getType(ast.right)) {\r\n        case 'Integer':\r\n          this.castValueToFloat(ast.right, retArr);\r\n          break;\r\n        case 'LiteralInteger':\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          break;\r\n        default:\r\n          this.astGeneric(ast.right, retArr);\r\n      }\r\n      this.popState('building-float');\r\n      retArr.push(')');\r\n      return retArr;\r\n    }\r\n\r\n    retArr.push('(');\r\n    const leftType = this.getType(ast.left) || 'Number';\r\n    const rightType = this.getType(ast.right) || 'Number';\r\n    if (!leftType || !rightType) {\r\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\r\n    }\r\n    const key = leftType + ' & ' + rightType;\r\n    switch (key) {\r\n      case 'Integer & Integer':\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n      case 'Number & Float':\r\n      case 'Float & Number':\r\n      case 'Float & Float':\r\n      case 'Number & Number':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n      case 'LiteralInteger & LiteralInteger':\r\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\r\n          this.pushState('building-integer');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.astGeneric(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.castLiteralToFloat(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n\r\n      case 'Integer & Float':\r\n      case 'Integer & Number':\r\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\r\n          // if right value is actually a float, don't loose that information, cast left to right rather than the usual right to left\r\n          if (!Number.isInteger(ast.right.value)) {\r\n            this.pushState('building-float');\r\n            this.castValueToFloat(ast.left, retArr);\r\n            retArr.push(operatorMap[ast.operator] || ast.operator);\r\n            this.astGeneric(ast.right, retArr);\r\n            this.popState('building-float');\r\n            break;\r\n          }\r\n        }\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.pushState('casting-to-integer');\r\n        if (ast.right.type === 'Literal') {\r\n          const literalResult = [];\r\n          this.astGeneric(ast.right, literalResult);\r\n          const literalType = this.getType(ast.right);\r\n          if (literalType === 'Integer') {\r\n            retArr.push(literalResult.join(''));\r\n          } else {\r\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\r\n          }\r\n        } else {\r\n          retArr.push('int(');\r\n          this.astGeneric(ast.right, retArr);\r\n          retArr.push(')');\r\n        }\r\n        this.popState('casting-to-integer');\r\n        this.popState('building-integer');\r\n        break;\r\n      case 'Integer & LiteralInteger':\r\n        this.pushState('building-integer');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castLiteralToInteger(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n\r\n      case 'Number & Integer':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castValueToFloat(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n      case 'Float & LiteralInteger':\r\n      case 'Number & LiteralInteger':\r\n        if (this.isState('in-for-loop-test')) {\r\n          this.pushState('building-integer');\r\n          retArr.push('int(');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(')');\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToInteger(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castLiteralToFloat(ast.right, retArr);\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n      case 'LiteralInteger & Float':\r\n      case 'LiteralInteger & Number':\r\n        if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\r\n          this.pushState('building-integer');\r\n          this.castLiteralToInteger(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.castValueToInteger(ast.right, retArr);\r\n          this.popState('building-integer');\r\n        } else {\r\n          this.pushState('building-float');\r\n          this.astGeneric(ast.left, retArr);\r\n          retArr.push(operatorMap[ast.operator] || ast.operator);\r\n          this.pushState('casting-to-float');\r\n          this.astGeneric(ast.right, retArr);\r\n          this.popState('casting-to-float');\r\n          this.popState('building-float');\r\n        }\r\n        break;\r\n      case 'LiteralInteger & Integer':\r\n        this.pushState('building-integer');\r\n        this.castLiteralToInteger(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-integer');\r\n        break;\r\n\r\n      case 'Boolean & Boolean':\r\n        this.pushState('building-boolean');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.astGeneric(ast.right, retArr);\r\n        this.popState('building-boolean');\r\n        break;\r\n\r\n      case 'Float & Integer':\r\n        this.pushState('building-float');\r\n        this.astGeneric(ast.left, retArr);\r\n        retArr.push(operatorMap[ast.operator] || ast.operator);\r\n        this.castValueToFloat(ast.right, retArr);\r\n        this.popState('building-float');\r\n        break;\r\n\r\n      default:\r\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\r\n    }\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertOperator(ast, retArr) {\r\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\r\n    if (bitwiseResult) {\r\n      return bitwiseResult;\r\n    }\r\n    const upconvertableOperators = {\r\n      '%': 'mod',\r\n      '**': 'pow',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    switch (this.getType(ast.left)) {\r\n      case 'Integer':\r\n        this.castValueToFloat(ast.left, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToFloat(ast.left, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.left, retArr);\r\n    }\r\n    retArr.push(',');\r\n    switch (this.getType(ast.right)) {\r\n      case 'Integer':\r\n        this.castValueToFloat(ast.right, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToFloat(ast.right, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.right, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\r\n    const upconvertableOperators = {\r\n      '&': 'bitwiseAnd',\r\n      '|': 'bitwiseOr',\r\n      '^': 'bitwiseXOR',\r\n      '<<': 'bitwiseZeroFillLeftShift',\r\n      '>>': 'bitwiseSignedRightShift',\r\n      '>>>': 'bitwiseZeroFillRightShift',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    const leftType = this.getType(ast.left);\r\n    switch (leftType) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.left, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.left, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.left, retArr);\r\n    }\r\n    retArr.push(',');\r\n    const rightType = this.getType(ast.right);\r\n    switch (rightType) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.right, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.right, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.right, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\r\n    const upconvertableOperators = {\r\n      '~': 'bitwiseNot',\r\n    };\r\n    const foundOperator = upconvertableOperators[ast.operator];\r\n    if (!foundOperator) return null;\r\n    retArr.push(foundOperator);\r\n    retArr.push('(');\r\n    switch (this.getType(ast.argument)) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(ast.argument, retArr);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(ast.argument, retArr);\r\n        break;\r\n      default:\r\n        this.astGeneric(ast.argument, retArr);\r\n    }\r\n    retArr.push(')');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castLiteralToInteger(ast, retArr) {\r\n    this.pushState('casting-to-integer');\r\n    this.astGeneric(ast, retArr);\r\n    this.popState('casting-to-integer');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castLiteralToFloat(ast, retArr) {\r\n    this.pushState('casting-to-float');\r\n    this.astGeneric(ast, retArr);\r\n    this.popState('casting-to-float');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castValueToInteger(ast, retArr) {\r\n    this.pushState('casting-to-integer');\r\n    retArr.push('int(');\r\n    this.astGeneric(ast, retArr);\r\n    retArr.push(')');\r\n    this.popState('casting-to-integer');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} ast\r\n   * @param {Array} retArr\r\n   * @return {String[]}\r\n   */\r\n  castValueToFloat(ast, retArr) {\r\n    this.pushState('casting-to-float');\r\n    retArr.push('float(');\r\n    this.astGeneric(ast, retArr);\r\n    retArr.push(')');\r\n    this.popState('casting-to-float');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\r\n    }\r\n\r\n    const type = this.getType(idtNode);\r\n\r\n    if (idtNode.name === 'Infinity') {\r\n      // https://stackoverflow.com/a/47543127/1324039\r\n      retArr.push('3.402823466e+38');\r\n    } else if (type === 'Boolean') {\r\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\r\n        retArr.push(`bool(user_${idtNode.name})`);\r\n      } else {\r\n        retArr.push(`user_${idtNode.name}`);\r\n      }\r\n    } else {\r\n      retArr.push(`user_${idtNode.name}`);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *for-loop* expression\r\n   * @param {Object} forNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astForStatement(forNode, retArr) {\r\n    if (forNode.type !== 'ForStatement') {\r\n      throw this.astErrorOutput('Invalid for statement', forNode);\r\n    }\r\n\r\n    const initArr = [];\r\n    const testArr = [];\r\n    const updateArr = [];\r\n    const bodyArr = [];\r\n    let isSafe = null;\r\n\r\n    if (forNode.init) {\r\n      this.pushState('in-for-loop-init');\r\n      this.astGeneric(forNode.init, initArr);\r\n      const { declarations } = forNode.init;\r\n      for (let i = 0; i < declarations.length; i++) {\r\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\r\n          isSafe = false;\r\n        }\r\n      }\r\n      if (isSafe) {\r\n        for (let i = 0; i < initArr.length; i++) {\r\n          if (initArr[i].includes && initArr[i].includes(',')) {\r\n            isSafe = false;\r\n          }\r\n        }\r\n      }\r\n      this.popState('in-for-loop-init');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.test) {\r\n      this.pushState('in-for-loop-test');\r\n      this.astGeneric(forNode.test, testArr);\r\n      this.popState('in-for-loop-test');\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.update) {\r\n      this.astGeneric(forNode.update, updateArr);\r\n    } else {\r\n      isSafe = false;\r\n    }\r\n\r\n    if (forNode.body) {\r\n      this.pushState('loop-body');\r\n      this.astGeneric(forNode.body, bodyArr);\r\n      this.popState('loop-body');\r\n    }\r\n\r\n    // have all parts, now make them safe\r\n    if (isSafe === null) {\r\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\r\n    }\r\n\r\n    if (isSafe) {\r\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push('}\\n');\r\n    } else {\r\n      const iVariableName = this.getInternalVariableName('safeI');\r\n      if (initArr.length > 0) {\r\n        retArr.push(initArr.join(''), ';\\n');\r\n      }\r\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n      if (testArr.length > 0) {\r\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\r\n      }\r\n      retArr.push(bodyArr.join(''));\r\n      retArr.push(`\\n${updateArr.join('')};`);\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *while* loop\r\n   * @param {Object} whileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astWhileStatement(whileNode, retArr) {\r\n    if (whileNode.type !== 'WhileStatement') {\r\n      throw this.astErrorOutput('Invalid while statement', whileNode);\r\n    }\r\n\r\n    const iVariableName = this.getInternalVariableName('safeI');\r\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n    retArr.push('if (!');\r\n    this.astGeneric(whileNode.test, retArr);\r\n    retArr.push(') break;\\n');\r\n    this.astGeneric(whileNode.body, retArr);\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *do while* loop\r\n   * @param {Object} doWhileNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the parsed webgl string\r\n   */\r\n  astDoWhileStatement(doWhileNode, retArr) {\r\n    if (doWhileNode.type !== 'DoWhileStatement') {\r\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\r\n    }\r\n\r\n    const iVariableName = this.getInternalVariableName('safeI');\r\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\r\n    this.astGeneric(doWhileNode.body, retArr);\r\n    retArr.push('if (!');\r\n    this.astGeneric(doWhileNode.test, retArr);\r\n    retArr.push(') break;\\n');\r\n    retArr.push('}\\n');\r\n\r\n    return retArr;\r\n  }\r\n\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\r\n   * @param {Object} assNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astAssignmentExpression(assNode, retArr) {\r\n    // TODO: casting needs implemented here\r\n    if (assNode.operator === '%=') {\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push('=');\r\n      retArr.push('mod(');\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(',');\r\n      this.astGeneric(assNode.right, retArr);\r\n      retArr.push(')');\r\n    } else if (assNode.operator === '**=') {\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push('=');\r\n      retArr.push('pow(');\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(',');\r\n      this.astGeneric(assNode.right, retArr);\r\n      retArr.push(')');\r\n    } else {\r\n      const leftType = this.getType(assNode.left);\r\n      const rightType = this.getType(assNode.right);\r\n      this.astGeneric(assNode.left, retArr);\r\n      retArr.push(assNode.operator);\r\n      if (leftType !== 'Integer' && rightType === 'Integer') {\r\n        retArr.push('float(');\r\n        this.astGeneric(assNode.right, retArr);\r\n        retArr.push(')');\r\n      } else {\r\n        this.astGeneric(assNode.right, retArr);\r\n      }\r\n      return retArr;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Block* statement\r\n   * @param {Object} bNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astBlockStatement(bNode, retArr) {\r\n    if (this.isState('loop-body')) {\r\n      this.pushState('block-body'); // this prevents recursive removal of braces\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      this.popState('block-body');\r\n    } else {\r\n      retArr.push('{\\n');\r\n      for (let i = 0; i < bNode.body.length; i++) {\r\n        this.astGeneric(bNode.body[i], retArr);\r\n      }\r\n      retArr.push('}\\n');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\r\n   * @param {Object} varDecNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astVariableDeclaration(varDecNode, retArr) {\r\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\r\n      this.varWarn();\r\n    }\r\n    const declarations = varDecNode.declarations;\r\n    if (!declarations || !declarations[0] || !declarations[0].init) {\r\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\r\n    }\r\n    const result = [];\r\n    let lastType = null;\r\n    const inForLoopInit = this.isState('in-for-loop-init');\r\n    for (let i = 0; i < declarations.length; i++) {\r\n      const declaration = declarations[i];\r\n      const init = declaration.init;\r\n      const info = this.getDeclaration(declaration.id);\r\n      const valueType = info.valueType;\r\n      const actualType = this.getType(declaration.init);\r\n      let dependencies = info.dependencies;\r\n      let type = inForLoopInit ? 'Integer' : actualType;\r\n      if (type === 'LiteralInteger') {\r\n        // We had the choice to go either float or int, choosing float\r\n        type = 'Number';\r\n      }\r\n      const markupType = typeMap[type];\r\n      if (!markupType) {\r\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\r\n      }\r\n      const declarationResult = [];\r\n      if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\r\n        // Since we are assigning to a float, ensure valueType is reset to that\r\n        info.valueType = 'Number';\r\n        if (i === 0 || lastType === null) {\r\n          declarationResult.push('float ');\r\n        } else if (type !== lastType) {\r\n          throw new Error('Unhandled declaration');\r\n        } else {\r\n          declarationResult.push(',');\r\n        }\r\n        lastType = type;\r\n        declarationResult.push(`user_${declaration.id.name}=`);\r\n        declarationResult.push('float(');\r\n        this.astGeneric(init, declarationResult);\r\n        declarationResult.push(')');\r\n      } else {\r\n        // Since we are assigning to a float, ensure valueType is reset to that\r\n        info.valueType = type;\r\n        if (i === 0 || lastType === null) {\r\n          declarationResult.push(`${markupType} `);\r\n        } else if (type !== lastType) {\r\n          result.push(';');\r\n          declarationResult.push(`${markupType} `);\r\n        } else {\r\n          declarationResult.push(',');\r\n        }\r\n        lastType = type;\r\n        declarationResult.push(`user_${declaration.id.name}=`);\r\n        if (actualType === 'Number' && type === 'Integer') {\r\n          if (init.left && init.left.type === 'Literal') {\r\n            this.astGeneric(init, declarationResult);\r\n          } else {\r\n            declarationResult.push('int(');\r\n            this.astGeneric(init, declarationResult);\r\n            declarationResult.push(')');\r\n          }\r\n        } else {\r\n          this.astGeneric(init, declarationResult);\r\n        }\r\n      }\r\n      result.push(declarationResult.join(''));\r\n    }\r\n\r\n    retArr.push(result.join(''));\r\n    if (!inForLoopInit) {\r\n      retArr.push(';');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *If* Statement\r\n   * @param {Object} ifNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIfStatement(ifNode, retArr) {\r\n    retArr.push('if (');\r\n    this.astGeneric(ifNode.test, retArr);\r\n    retArr.push(')');\r\n    if (ifNode.consequent.type === 'BlockStatement') {\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n    } else {\r\n      retArr.push(' {\\n');\r\n      this.astGeneric(ifNode.consequent, retArr);\r\n      retArr.push('\\n}\\n');\r\n    }\r\n\r\n    if (ifNode.alternate) {\r\n      retArr.push('else ');\r\n      if (ifNode.alternate.type === 'BlockStatement') {\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n      } else {\r\n        retArr.push(' {\\n');\r\n        this.astGeneric(ifNode.alternate, retArr);\r\n        retArr.push('\\n}\\n');\r\n      }\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  astSwitchStatement(ast, retArr) {\r\n    if (ast.type !== 'SwitchStatement') {\r\n      throw this.astErrorOutput('Invalid switch statement', ast);\r\n    }\r\n    const { discriminant, cases } = ast;\r\n    const type = this.getType(discriminant);\r\n    const varName = `switchDiscriminant${ast.start}_${ast.end}`;\r\n    switch (type) {\r\n      case 'Float':\r\n      case 'Number':\r\n        retArr.push(`float ${varName} = `);\r\n        this.astGeneric(discriminant, retArr);\r\n        retArr.push(';\\n');\r\n        break;\r\n      case 'Integer':\r\n        retArr.push(`int ${varName} = `);\r\n        this.astGeneric(discriminant, retArr);\r\n        retArr.push(';\\n');\r\n        break;\r\n    }\r\n    // switch with just a default:\r\n    if (cases.length === 1 && !cases[0].test) {\r\n      this.astGeneric(cases[0].consequent, retArr);\r\n      return retArr;\r\n    }\r\n\r\n    // regular switches:\r\n    let fallingThrough = false;\r\n    let defaultResult = [];\r\n    let movingDefaultToEnd = false;\r\n    let pastFirstIf = false;\r\n    for (let i = 0; i < cases.length; i++) {\r\n      // default\r\n      if (!cases[i].test) {\r\n        if (cases.length > i + 1) {\r\n          movingDefaultToEnd = true;\r\n          this.astGeneric(cases[i].consequent, defaultResult);\r\n          continue;\r\n        } else {\r\n          retArr.push(' else {\\n');\r\n        }\r\n      } else {\r\n        // all others\r\n        if (i === 0 || !pastFirstIf) {\r\n          pastFirstIf = true;\r\n          retArr.push(`if (${varName} == `);\r\n        } else {\r\n          if (fallingThrough) {\r\n            retArr.push(`${varName} == `);\r\n            fallingThrough = false;\r\n          } else {\r\n            retArr.push(` else if (${varName} == `);\r\n          }\r\n        }\r\n        if (type === 'Integer') {\r\n          const testType = this.getType(cases[i].test);\r\n          switch (testType) {\r\n            case 'Number':\r\n            case 'Float':\r\n              this.castValueToInteger(cases[i].test, retArr);\r\n              break;\r\n            case 'LiteralInteger':\r\n              this.castLiteralToInteger(cases[i].test, retArr);\r\n              break;\r\n          }\r\n        } else if (type === 'Float') {\r\n          const testType = this.getType(cases[i].test);\r\n          switch (testType) {\r\n            case 'LiteralInteger':\r\n              this.castLiteralToFloat(cases[i].test, retArr);\r\n              break;\r\n            case 'Integer':\r\n              this.castValueToFloat(cases[i].test, retArr);\r\n              break;\r\n          }\r\n        } else {\r\n          throw new Error('unhanlded');\r\n        }\r\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\r\n          fallingThrough = true;\r\n          retArr.push(' || ');\r\n          continue;\r\n        }\r\n        retArr.push(`) {\\n`);\r\n      }\r\n      this.astGeneric(cases[i].consequent, retArr);\r\n      retArr.push('\\n}');\r\n    }\r\n    if (movingDefaultToEnd) {\r\n      retArr.push(' else {');\r\n      retArr.push(defaultResult.join(''));\r\n      retArr.push('}');\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *This* expression\r\n   * @param {Object} tNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astThisExpression(tNode, retArr) {\r\n    retArr.push('this');\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Member* Expression\r\n   * @param {Object} mNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astMemberExpression(mNode, retArr) {\r\n    const {\r\n      property,\r\n      name,\r\n      signature,\r\n      origin,\r\n      type,\r\n      xProperty,\r\n      yProperty,\r\n      zProperty\r\n    } = this.getMemberExpressionDetails(mNode);\r\n    switch (signature) {\r\n      case 'value.thread.value':\r\n      case 'this.thread.value':\r\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\r\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\r\n        }\r\n        retArr.push(`threadId.${name}`);\r\n        return retArr;\r\n      case 'this.output.value':\r\n        if (this.dynamicOutput) {\r\n          switch (name) {\r\n            case 'x':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.x)');\r\n              } else {\r\n                retArr.push('uOutputDim.x');\r\n              }\r\n              break;\r\n            case 'y':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.y)');\r\n              } else {\r\n                retArr.push('uOutputDim.y');\r\n              }\r\n              break;\r\n            case 'z':\r\n              if (this.isState('casting-to-float')) {\r\n                retArr.push('float(uOutputDim.z)');\r\n              } else {\r\n                retArr.push('uOutputDim.z');\r\n              }\r\n              break;\r\n            default:\r\n              throw this.astErrorOutput('Unexpected expression', mNode);\r\n          }\r\n        } else {\r\n          switch (name) {\r\n            case 'x':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[0]);\r\n              } else {\r\n                retArr.push(this.output[0], '.0');\r\n              }\r\n              break;\r\n            case 'y':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[1]);\r\n              } else {\r\n                retArr.push(this.output[1], '.0');\r\n              }\r\n              break;\r\n            case 'z':\r\n              if (this.isState('casting-to-integer')) {\r\n                retArr.push(this.output[2]);\r\n              } else {\r\n                retArr.push(this.output[2], '.0');\r\n              }\r\n              break;\r\n            default:\r\n              throw this.astErrorOutput('Unexpected expression', mNode);\r\n          }\r\n        }\r\n        return retArr;\r\n      case 'value':\r\n        throw this.astErrorOutput('Unexpected expression', mNode);\r\n      case 'value[]':\r\n      case 'value[][]':\r\n      case 'value[][][]':\r\n      case 'value[][][][]':\r\n      case 'value.value':\r\n        if (origin === 'Math') {\r\n          retArr.push(Math[name]);\r\n          return retArr;\r\n        }\r\n        switch (property) {\r\n          case 'r':\r\n            retArr.push(`user_${ name }.r`);\r\n            return retArr;\r\n          case 'g':\r\n            retArr.push(`user_${ name }.g`);\r\n            return retArr;\r\n          case 'b':\r\n            retArr.push(`user_${ name }.b`);\r\n            return retArr;\r\n          case 'a':\r\n            retArr.push(`user_${ name }.a`);\r\n            return retArr;\r\n        }\r\n        break;\r\n      case 'this.constants.value':\r\n        if (typeof xProperty === 'undefined') {\r\n          switch (type) {\r\n            case 'Array(2)':\r\n            case 'Array(3)':\r\n            case 'Array(4)':\r\n              retArr.push(`constants_${ name }`);\r\n              return retArr;\r\n          }\r\n        }\r\n        case 'this.constants.value[]':\r\n        case 'this.constants.value[][]':\r\n        case 'this.constants.value[][][]':\r\n        case 'this.constants.value[][][][]':\r\n          break;\r\n        case 'fn()[]':\r\n          this.astCallExpression(mNode.object, retArr);\r\n          retArr.push('[');\r\n          retArr.push(this.memberExpressionPropertyMarkup(property));\r\n          retArr.push(']');\r\n          return retArr;\r\n        case '[][]':\r\n          this.astArrayExpression(mNode.object, retArr);\r\n          retArr.push('[');\r\n          retArr.push(this.memberExpressionPropertyMarkup(property));\r\n          retArr.push(']');\r\n          return retArr;\r\n        default:\r\n          throw this.astErrorOutput('Unexpected expression', mNode);\r\n    }\r\n\r\n    if (mNode.computed === false) {\r\n      // handle simple types\r\n      switch (type) {\r\n        case 'Number':\r\n        case 'Integer':\r\n        case 'Float':\r\n        case 'Boolean':\r\n          retArr.push(`${origin}_${name}`);\r\n          return retArr;\r\n      }\r\n    }\r\n\r\n    // handle more complex types\r\n    // argument may have come from a parent\r\n    const markupName = `${origin}_${name}`;\r\n\r\n    switch (type) {\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n        // Get from local vec4\r\n        this.astGeneric(mNode.object, retArr);\r\n        retArr.push('[');\r\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\r\n        retArr.push(']');\r\n        break;\r\n      case 'HTMLImageArray':\r\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(1)':\r\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(2)':\r\n      case 'Array2D(2)':\r\n      case 'Array3D(2)':\r\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(2)':\r\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(3)':\r\n      case 'Array2D(3)':\r\n      case 'Array3D(3)':\r\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(3)':\r\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'Array1D(4)':\r\n      case 'Array2D(4)':\r\n      case 'Array3D(4)':\r\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'ArrayTexture(4)':\r\n      case 'HTMLImage':\r\n      case 'HTMLVideo':\r\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      case 'NumberTexture':\r\n      case 'Array':\r\n      case 'Array2D':\r\n      case 'Array3D':\r\n      case 'Array4D':\r\n      case 'Input':\r\n      case 'Number':\r\n      case 'Float':\r\n      case 'Integer':\r\n        if (this.precision === 'single') {\r\n          // bitRatio is always 4 here, javascript doesn't yet have 8 or 16 bit support\r\n          // TODO: make 8 or 16 bit work anyway!\r\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n          retArr.push(')');\r\n        } else {\r\n          const bitRatio = (origin === 'user' ?\r\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\r\n            this.constantBitRatios[name]\r\n          );\r\n          switch (bitRatio) {\r\n            case 1:\r\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            case 2:\r\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            case 4:\r\n            case 0:\r\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\r\n              break;\r\n            default:\r\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\r\n          }\r\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n          retArr.push(')');\r\n        }\r\n        break;\r\n      case 'MemoryOptimizedNumberTexture':\r\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\r\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\r\n        retArr.push(')');\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled member expression \"${ type }\"`);\r\n    }\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *call* expression\r\n   * @param {Object} ast - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns  {Array} the append retArr\r\n   */\r\n  astCallExpression(ast, retArr) {\r\n    if (!ast.callee) {\r\n      throw this.astErrorOutput('Unknown CallExpression', ast);\r\n    }\r\n\r\n    let functionName = null;\r\n    const isMathFunction = this.isAstMathFunction(ast);\r\n\r\n    // Its a math operator or this.something(), remove the prefix\r\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\r\n      functionName = ast.callee.property.name;\r\n    }\r\n    // Issue #212, BABEL!\r\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\r\n      functionName = ast.callee.expressions[1].property.name;\r\n    } else {\r\n      functionName = ast.callee.name;\r\n    }\r\n\r\n    if (!functionName) {\r\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\r\n    }\r\n\r\n    // if this if grows to more than one, lets use a switch\r\n    if (functionName === 'atan2') {\r\n      functionName = 'atan';\r\n    }\r\n\r\n    // Register the function into the called registry\r\n    if (this.calledFunctions.indexOf(functionName) < 0) {\r\n      this.calledFunctions.push(functionName);\r\n    }\r\n\r\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\r\n          retArr.push(plugin.functionReplace);\r\n          return retArr;\r\n        }\r\n      }\r\n    }\r\n\r\n    // track the function was called\r\n    if (this.onFunctionCall) {\r\n      this.onFunctionCall(this.name, functionName, ast.arguments);\r\n    }\r\n\r\n    // Call the function\r\n    retArr.push(functionName);\r\n\r\n    // Open arguments space\r\n    retArr.push('(');\r\n\r\n    // Add the arguments\r\n    if (isMathFunction) {\r\n      for (let i = 0; i < ast.arguments.length; ++i) {\r\n        const argument = ast.arguments[i];\r\n        const argumentType = this.getType(argument);\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n\r\n        switch (argumentType) {\r\n          case 'Integer':\r\n            this.castValueToFloat(argument, retArr);\r\n            break;\r\n          default:\r\n            this.astGeneric(argument, retArr);\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\r\n      for (let i = 0; i < ast.arguments.length; ++i) {\r\n        const argument = ast.arguments[i];\r\n        let targetType = targetTypes[i];\r\n        if (i > 0) {\r\n          retArr.push(', ');\r\n        }\r\n        const argumentType = this.getType(argument);\r\n        if (!targetType) {\r\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\r\n          targetType = argumentType;\r\n        }\r\n        switch (argumentType) {\r\n          case 'Number':\r\n          case 'Float':\r\n            if (targetType === 'Integer') {\r\n              retArr.push('int(');\r\n              this.astGeneric(argument, retArr);\r\n              retArr.push(')');\r\n              continue;\r\n            } else if (targetType === 'Number' || targetType === 'Float') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'LiteralInteger') {\r\n              this.castLiteralToFloat(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'Integer':\r\n            if (targetType === 'Number' || targetType === 'Float') {\r\n              retArr.push('float(');\r\n              this.astGeneric(argument, retArr);\r\n              retArr.push(')');\r\n              continue;\r\n            } else if (targetType === 'Integer') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'LiteralInteger':\r\n            if (targetType === 'Integer') {\r\n              this.castLiteralToInteger(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'Number' || targetType === 'Float') {\r\n              this.castLiteralToFloat(argument, retArr);\r\n              continue;\r\n            } else if (targetType === 'LiteralInteger') {\r\n              this.astGeneric(argument, retArr);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n          case 'Array(3)':\r\n          case 'Array(4)':\r\n            if (targetType === argumentType) {\r\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\r\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\r\n              retArr.push(`user_${argument.name}`);\r\n              continue;\r\n            }\r\n            break;\r\n          case 'HTMLImage':\r\n          case 'HTMLImageArray':\r\n          case 'HTMLVideo':\r\n          case 'ArrayTexture(1)':\r\n          case 'ArrayTexture(2)':\r\n          case 'ArrayTexture(3)':\r\n          case 'ArrayTexture(4)':\r\n          case 'Array':\r\n          case 'Input':\r\n            if (targetType === argumentType) {\r\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\r\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\r\n              retArr.push(`user_${argument.name},user_${argument.name}Size,user_${argument.name}Dim`);\r\n              continue;\r\n            }\r\n            break;\r\n        }\r\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\r\n      }\r\n    }\r\n    // Close arguments space\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *Array* Expression\r\n   * @param {Object} arrNode - the AST object to parse\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astArrayExpression(arrNode, retArr) {\r\n    const arrLen = arrNode.elements.length;\r\n\r\n    retArr.push('vec' + arrLen + '(');\r\n    for (let i = 0; i < arrLen; ++i) {\r\n      if (i > 0) {\r\n        retArr.push(', ');\r\n      }\r\n      const subNode = arrNode.elements[i];\r\n      this.astGeneric(subNode, retArr)\r\n    }\r\n    retArr.push(')');\r\n\r\n    return retArr;\r\n  }\r\n\r\n  memberExpressionXYZ(x, y, z, retArr) {\r\n    if (z) {\r\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\r\n    } else {\r\n      retArr.push('0, ');\r\n    }\r\n    if (y) {\r\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\r\n    } else {\r\n      retArr.push('0, ');\r\n    }\r\n    retArr.push(this.memberExpressionPropertyMarkup(x));\r\n    return retArr;\r\n  }\r\n\r\n  memberExpressionPropertyMarkup(property) {\r\n    if (!property) {\r\n      throw new Error('Property not set');\r\n    }\r\n    const type = this.getType(property);\r\n    const result = [];\r\n    switch (type) {\r\n      case 'Number':\r\n      case 'Float':\r\n        this.castValueToInteger(property, result);\r\n        break;\r\n      case 'LiteralInteger':\r\n        this.castLiteralToInteger(property, result);\r\n        break;\r\n      default:\r\n        this.astGeneric(property, result);\r\n    }\r\n    return result.join('');\r\n  }\r\n}\r\n\r\nconst typeMap = {\r\n  'Array': 'sampler2D',\r\n  'Array(2)': 'vec2',\r\n  'Array(3)': 'vec3',\r\n  'Array(4)': 'vec4',\r\n  'Array2D': 'sampler2D',\r\n  'Array3D': 'sampler2D',\r\n  'Boolean': 'bool',\r\n  'Float': 'float',\r\n  'Input': 'sampler2D',\r\n  'Integer': 'int',\r\n  'Number': 'float',\r\n  'LiteralInteger': 'float',\r\n  'NumberTexture': 'sampler2D',\r\n  'MemoryOptimizedNumberTexture': 'sampler2D',\r\n  'ArrayTexture(1)': 'sampler2D',\r\n  'ArrayTexture(2)': 'sampler2D',\r\n  'ArrayTexture(3)': 'sampler2D',\r\n  'ArrayTexture(4)': 'sampler2D',\r\n  'HTMLVideo': 'sampler2D',\r\n  'HTMLImage': 'sampler2D',\r\n  'HTMLImageArray': 'sampler2DArray',\r\n};\r\n\r\nconst operatorMap = {\r\n  '===': '==',\r\n  '!==': '!='\r\n};\r\n","const source = `\r\n\r\nuniform highp float triangle_noise_seed;\r\nhighp float triangle_noise_shift = 0.000001;\r\n\r\n//https://www.shadertoy.com/view/4t2SDh\r\n//note: uniformly distributed, normalized rand, [0;1[\r\nfloat nrand( vec2 n )\r\n{\r\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\r\n}\r\n//note: remaps v to [0;1] in interval [a;b]\r\nfloat remap( float a, float b, float v )\r\n{\r\n  return clamp( (v-a) / (b-a), 0.0, 1.0 );\r\n}\r\n\r\nfloat n4rand( vec2 n )\r\n{\r\n  float t = fract( triangle_noise_seed + triangle_noise_shift );\r\n  float nrnd0 = nrand( n + 0.07*t );\r\n  float nrnd1 = nrand( n + 0.11*t );\r\n  float nrnd2 = nrand( n + 0.13*t );\r\n  float nrnd3 = nrand( n + 0.17*t );\r\n  float result = (nrnd0+nrnd1+nrnd2+nrnd3) / 4.0;\r\n  triangle_noise_shift = result + 0.000001;\r\n  return result;\r\n}`;\r\n\r\nconst name = 'triangle-noise-noise';\r\n\r\nconst functionMatch = 'Math.random()';\r\n\r\nconst functionReplace = 'n4rand(vTexCoord)';\r\n\r\nconst functionReturnType = 'Number';\r\n\r\nconst onBeforeRun = (kernel) => {\r\n  kernel.setUniform1f('triangle_noise_seed', Math.random());\r\n};\r\n\r\n/**\r\n * @type IPlugin\r\n */\r\nexport default {\r\n  name,\r\n  onBeforeRun,\r\n  functionMatch,\r\n  functionReplace,\r\n  functionReturnType,\r\n  source\r\n};\r\n","// language=GLSL\r\nexport const fragmentShader = `__HEADER__;\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nconst int LOOP_MAX = __LOOP_MAX__;\r\n\r\n__PLUGINS__;\r\n__CONSTANTS__;\r\n\r\nvarying vec2 vTexCoord;\r\n\r\nvec4 round(vec4 x) {\r\n  return floor(x + 0.5);\r\n}\r\n\r\nfloat round(float x) {\r\n  return floor(x + 0.5);\r\n}\r\n\r\nconst int BIT_COUNT = 32;\r\nint modi(int x, int y) {\r\n  return x - y * (x / y);\r\n}\r\n\r\nint bitwiseOr(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseXOR(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseAnd(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 && b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseNot(int a) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (modi(a, 2) == 0) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    n = n * 2;\r\n  }\r\n  return result;\r\n}\r\nint bitwiseZeroFillLeftShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n *= 2;\r\n  }\r\n\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nint bitwiseSignedRightShift(int num, int shifts) {\r\n  return int(floor(float(num) / pow(2.0, float(shifts))));\r\n}\r\n\r\nint bitwiseZeroFillRightShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n /= 2;\r\n  }\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nvec2 integerMod(vec2 x, float y) {\r\n  vec2 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec3 integerMod(vec3 x, float y) {\r\n  vec3 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec4 integerMod(vec4 x, vec4 y) {\r\n  vec4 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nfloat integerMod(float x, float y) {\r\n  float res = floor(mod(x, y));\r\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\r\n}\r\n\r\nint integerMod(int x, int y) {\r\n  return x - (y * int(x / y));\r\n}\r\n\r\n__DIVIDE_WITH_INTEGER_CHECK__;\r\n\r\n// Here be dragons!\r\n// DO NOT OPTIMIZE THIS CODE\r\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\r\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\r\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\r\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\r\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\r\nfloat decode32(vec4 texel) {\r\n  __DECODE32_ENDIANNESS__;\r\n  texel *= 255.0;\r\n  vec2 gte128;\r\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\r\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\r\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\r\n  float res = exp2(round(exponent));\r\n  texel.b = texel.b - 128.0 * gte128.x;\r\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\r\n  res *= gte128.y * -2.0 + 1.0;\r\n  return res;\r\n}\r\n\r\nfloat decode16(vec4 texel, int index) {\r\n  int channel = integerMod(index, 2);\r\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\r\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\r\n  return 0.0;\r\n}\r\n\r\nfloat decode8(vec4 texel, int index) {\r\n  int channel = integerMod(index, 4);\r\n  if (channel == 0) return texel.r * 255.0;\r\n  if (channel == 1) return texel.g * 255.0;\r\n  if (channel == 2) return texel.b * 255.0;\r\n  if (channel == 3) return texel.a * 255.0;\r\n  return 0.0;\r\n}\r\n\r\nvec4 legacyEncode32(float f) {\r\n  float F = abs(f);\r\n  float sign = f < 0.0 ? 1.0 : 0.0;\r\n  float exponent = floor(log2(F));\r\n  float mantissa = (exp2(-exponent) * F);\r\n  // exponent += floor(log2(mantissa));\r\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\r\n  texel.rg = integerMod(texel.rg, 256.0);\r\n  texel.b = integerMod(texel.b, 128.0);\r\n  texel.a = exponent*0.5 + 63.5;\r\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\r\n  texel = floor(texel);\r\n  texel *= 0.003921569; // 1/255\r\n  __ENCODE32_ENDIANNESS__;\r\n  return texel;\r\n}\r\n\r\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\r\nvec4 encode32(float value) {\r\n  if (value == 0.0) return vec4(0, 0, 0, 0);\r\n\r\n  float exponent;\r\n  float mantissa;\r\n  vec4  result;\r\n  float sgn;\r\n\r\n  sgn = step(0.0, -value);\r\n  value = abs(value);\r\n\r\n  exponent = floor(log2(value));\r\n\r\n  mantissa = value*pow(2.0, -exponent)-1.0;\r\n  exponent = exponent+127.0;\r\n  result   = vec4(0,0,0,0);\r\n\r\n  result.a = floor(exponent/2.0);\r\n  exponent = exponent - result.a*2.0;\r\n  result.a = result.a + 128.0*sgn;\r\n\r\n  result.b = floor(mantissa * 128.0);\r\n  mantissa = mantissa - result.b / 128.0;\r\n  result.b = result.b + exponent*128.0;\r\n\r\n  result.g = floor(mantissa*32768.0);\r\n  mantissa = mantissa - result.g/32768.0;\r\n\r\n  result.r = floor(mantissa*8388608.0);\r\n  return result/255.0;\r\n}\r\n// Dragons end here\r\n\r\nint index;\r\nivec3 threadId;\r\n\r\nivec3 indexTo3D(int idx, ivec3 texDim) {\r\n  int z = int(idx / (texDim.x * texDim.y));\r\n  idx -= z * int(texDim.x * texDim.y);\r\n  int y = int(idx / texDim.x);\r\n  int x = int(integerMod(idx, texDim.x));\r\n  return ivec3(x, y, z);\r\n}\r\n\r\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  return decode32(texel);\r\n}\r\n\r\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x * 2;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\r\n  return decode16(texel, index);\r\n}\r\n\r\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x * 4;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\r\n  return decode8(texel, index);\r\n}\r\n\r\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 4);\r\n  index = index / 4;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  if (channel == 0) return texel.r;\r\n  if (channel == 1) return texel.g;\r\n  if (channel == 2) return texel.b;\r\n  if (channel == 3) return texel.a;\r\n  return 0.0;\r\n}\r\n\r\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture2D(tex, st / vec2(texSize));\r\n}\r\n\r\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return result[0];\r\n}\r\n\r\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec2(result[0], result[1]);\r\n}\r\n\r\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int channel = integerMod(index, 2);\r\n  index = index / 2;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  if (channel == 0) return vec2(texel.r, texel.g);\r\n  if (channel == 1) return vec2(texel.b, texel.a);\r\n  return vec2(0.0, 0.0);\r\n}\r\n\r\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec3(result[0], result[1], result[2]);\r\n}\r\n\r\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\r\n  int vectorIndex = fieldIndex / 4;\r\n  int vectorOffset = fieldIndex - vectorIndex * 4;\r\n  int readY = vectorIndex / texSize.x;\r\n  int readX = vectorIndex - readY * texSize.x;\r\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\r\n\r\n  if (vectorOffset == 0) {\r\n    return tex1.xyz;\r\n  } else if (vectorOffset == 1) {\r\n    return tex1.yzw;\r\n  } else {\r\n    readX++;\r\n    if (readX >= texSize.x) {\r\n      readX = 0;\r\n      readY++;\r\n    }\r\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\r\n    if (vectorOffset == 2) {\r\n      return vec3(tex1.z, tex1.w, tex2.x);\r\n    } else {\r\n      return vec3(tex1.w, tex2.x, tex2.y);\r\n    }\r\n  }\r\n}\r\n\r\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  return getImage2D(tex, texSize, texDim, z, y, x);\r\n}\r\n\r\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture2D(tex, st / vec2(texSize));\r\n  return vec4(texel.r, texel.g, texel.b, texel.a);\r\n}\r\n\r\nvec4 actualColor;\r\nvoid color(float r, float g, float b, float a) {\r\n  actualColor = vec4(r,g,b,a);\r\n}\r\n\r\nvoid color(float r, float g, float b) {\r\n  color(r,g,b,1.0);\r\n}\r\n\r\nvoid color(sampler2D image) {\r\n  actualColor = texture2D(image, vTexCoord);\r\n}\r\n\r\n__INJECTED_NATIVE__;\r\n__MAIN_CONSTANTS__;\r\n__MAIN_ARGUMENTS__;\r\n__KERNEL__;\r\n\r\nvoid main(void) {\r\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\r\n  __MAIN_RESULT__;\r\n}`;\r\n","// language=GLSL\r\nexport const vertexShader = `__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nattribute vec2 aPos;\r\nattribute vec2 aTexCoord;\r\n\r\nvarying vec2 vTexCoord;\r\nuniform vec2 ratio;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\r\n  vTexCoord = aTexCoord;\r\n}`;\r\n","/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {IGLWiretapOptions} [options]\n * @returns {GLWiretapProxy}\n */\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { // need arguments from this, fyi\n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); // flush out errors\n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\n/**\n *\n * @param extension\n * @param {IGLExtensionWiretapOptions} options\n * @returns {*}\n */\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  // wrapped in object, so track-able\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n","import { glWiretap } from 'gl-wiretap';\r\nimport { utils } from '../../utils';\r\n\r\nfunction toStringWithoutUtils(fn) {\r\n  return fn.toString()\r\n    .replace('=>', '')\r\n    .replace(/^function /, '')\r\n    .replace(/utils[.]/g, '/*utils.*/');\r\n}\r\n\r\n/**\r\n *\r\n * @param {Kernel} Kernel\r\n * @param {KernelVariable[]} args\r\n * @param {Kernel} originKernel\r\n * @param {string} [setupContextString]\r\n * @param {string} [destroyContextString]\r\n * @returns {string}\r\n */\r\nexport function glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\r\n  args = args ? Array.from(args).map(arg => {\r\n    switch (typeof arg) {\r\n      case 'boolean':\r\n        return new Boolean(arg);\r\n      case 'number':\r\n        return new Number(arg);\r\n      default:\r\n        return arg;\r\n    }\r\n  }) : null;\r\n  const uploadedValues = [];\r\n  const postResult = [];\r\n  const context = glWiretap(originKernel.context, {\r\n    useTrackablePrimitives: true,\r\n    onReadPixels: (targetName) => {\r\n      if (kernel.subKernels) {\r\n        if (!subKernelsResultVariableSetup) {\r\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\r\n          subKernelsResultVariableSetup = true;\r\n        } else {\r\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\r\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\r\n        }\r\n        if (subKernelsResultIndex === kernel.subKernels.length) {\r\n          postResult.push('    return result;');\r\n        }\r\n        return;\r\n      }\r\n      if (targetName) {\r\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\r\n      } else {\r\n        postResult.push(`    return null;`);\r\n      }\r\n    },\r\n    onUnrecognizedArgumentLookup: (argument) => {\r\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\r\n      if (argumentName) {\r\n        return argumentName;\r\n      }\r\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\r\n      if (constantName) {\r\n        return constantName;\r\n      }\r\n      return null;\r\n    }\r\n  });\r\n  let subKernelsResultVariableSetup = false;\r\n  let subKernelsResultIndex = 0;\r\n  const {\r\n    source,\r\n    canvas,\r\n    output,\r\n    pipeline,\r\n    graphical,\r\n    loopMaxIterations,\r\n    constants,\r\n    optimizeFloatMemory,\r\n    precision,\r\n    fixIntegerDivisionAccuracy,\r\n    functions,\r\n    nativeFunctions,\r\n    subKernels,\r\n    immutable,\r\n    argumentTypes,\r\n    constantTypes,\r\n    kernelArguments,\r\n    kernelConstants,\r\n  } = originKernel;\r\n  const kernel = new Kernel(source, {\r\n    canvas,\r\n    context,\r\n    checkContext: false,\r\n    output,\r\n    pipeline,\r\n    graphical,\r\n    loopMaxIterations,\r\n    constants,\r\n    optimizeFloatMemory,\r\n    precision,\r\n    fixIntegerDivisionAccuracy,\r\n    functions,\r\n    nativeFunctions,\r\n    subKernels,\r\n    immutable,\r\n    argumentTypes,\r\n    constantTypes,\r\n  });\r\n  let result = [];\r\n  context.setIndent(2);\r\n  kernel.build.apply(kernel, args);\r\n  result.push(context.toString());\r\n  context.reset();\r\n\r\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\r\n    switch (kernelArgument.type) {\r\n      // primitives\r\n      case 'Integer':\r\n      case 'Boolean':\r\n      case 'Number':\r\n      case 'Float':\r\n        // non-primitives\r\n      case 'Array':\r\n      case 'Array(2)':\r\n      case 'Array(3)':\r\n      case 'Array(4)':\r\n      case 'HTMLImage':\r\n      case 'HTMLVideo':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\r\n        break;\r\n      case 'HTMLImageArray':\r\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\r\n          const arg = args[i];\r\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\r\n        }\r\n        break;\r\n      case 'Input':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\r\n        break;\r\n      case 'MemoryOptimizedNumberTexture':\r\n      case 'NumberTexture':\r\n      case 'Array1D(2)':\r\n      case 'Array1D(3)':\r\n      case 'Array1D(4)':\r\n      case 'Array2D(2)':\r\n      case 'Array2D(3)':\r\n      case 'Array2D(4)':\r\n      case 'Array3D(2)':\r\n      case 'Array3D(3)':\r\n      case 'Array3D(4)':\r\n      case 'ArrayTexture(1)':\r\n      case 'ArrayTexture(2)':\r\n      case 'ArrayTexture(3)':\r\n      case 'ArrayTexture(4)':\r\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\r\n        break;\r\n      default:\r\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\r\n    }\r\n  });\r\n  result.push('/** start of injected functions **/');\r\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\r\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\r\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\r\n    result.push(\r\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\r\n    );\r\n  }\r\n  result.push('/** end of injected functions **/');\r\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\r\n  context.setIndent(4);\r\n  kernel.run.apply(kernel, args);\r\n  if (kernel.renderKernels) {\r\n    kernel.renderKernels();\r\n  } else if (kernel.renderOutput) {\r\n    kernel.renderOutput();\r\n  }\r\n  result.push('    /** start setup uploads for kernel values **/');\r\n  kernel.kernelArguments.forEach(kernelArgument => {\r\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\r\n  });\r\n  result.push('    /** end setup uploads for kernel values **/');\r\n  result.push(context.toString());\r\n  if (kernel.renderOutput === kernel.renderTexture) {\r\n    context.reset();\r\n    const results = kernel.renderKernels();\r\n    const textureName = context.getContextVariableName(kernel.outputTexture);\r\n    result.push(`    return {\r\n      result: {\r\n        texture: ${ textureName },\r\n        type: '${ results.result.type }',\r\n        toArray: ${ getToArrayString(results.result, textureName) }\r\n      },`);\r\n    const { subKernels, subKernelOutputTextures } = kernel;\r\n    for (let i = 0; i < subKernels.length; i++) {\r\n      const texture = subKernelOutputTextures[i];\r\n      const subKernel = subKernels[i];\r\n      const subKernelResult = results[subKernel.property];\r\n      const subKernelTextureName = context.getContextVariableName(texture);\r\n      result.push(`\r\n      ${subKernel.property}: {\r\n        texture: ${ subKernelTextureName },\r\n        type: '${ subKernelResult.type }',\r\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\r\n      },`);\r\n    }\r\n    result.push(`    };`);\r\n  }\r\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\r\n  result.push(postResult.join('\\n'));\r\n  result.push('  };');\r\n  if (kernel.graphical) {\r\n    result.push(getGetPixelsString(kernel));\r\n    result.push(`  innerKernel.getPixels = getPixels;`);\r\n  }\r\n  result.push('  return innerKernel;');\r\n\r\n  let constantsUpload = [];\r\n  kernelConstants.forEach((kernelConstant) => {\r\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\r\n  });\r\n  return `function kernel(settings) {\r\n  const { context, constants } = settings;\r\n  ${constantsUpload.join('')}\r\n  ${setupContextString ? setupContextString : ''}\r\n${result.join('\\n')}\r\n}`;\r\n}\r\n\r\nfunction getRenderString(targetName, kernel) {\r\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\r\n  if (kernel.output[2]) {\r\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\r\n  }\r\n  if (kernel.output[1]) {\r\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\r\n  }\r\n\r\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\r\n}\r\n\r\nfunction getGetPixelsString(kernel) {\r\n  const getPixels = kernel.getPixels.toString();\r\n  const useFunctionKeyword = !/^function/.test(getPixels);\r\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\r\n    findDependency: (object, name) => {\r\n      if (object === 'utils') {\r\n        return `const ${name} = ${utils[name].toString()};`;\r\n      }\r\n      return null;\r\n    },\r\n    thisLookup: (property) => {\r\n      if (property === 'context') {\r\n        return null;\r\n      }\r\n      if (kernel.hasOwnProperty(property)) {\r\n        return JSON.stringify(kernel[property]);\r\n      }\r\n      throw new Error(`unhandled thisLookup ${ property }`);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getToArrayString(kernelResult, textureName) {\r\n  const toArray = kernelResult.toArray.toString();\r\n  const useFunctionKeyword = !/^function/.test(toArray);\r\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\r\n    findDependency: (object, name) => {\r\n      if (object === 'utils') {\r\n        return `const ${name} = ${utils[name].toString()};`;\r\n      } else if (object === 'this') {\r\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\r\n      } else {\r\n        throw new Error('unhandled fromObject');\r\n      }\r\n    },\r\n    thisLookup: (property) => {\r\n      if (property === 'texture') {\r\n        return textureName;\r\n      }\r\n      if (kernelResult.hasOwnProperty(property)) {\r\n        return JSON.stringify(kernelResult[property]);\r\n      }\r\n      throw new Error(`unhandled thisLookup ${ property }`);\r\n    }\r\n  });\r\n  return `() => {\r\n  ${flattenedFunctions}\r\n  return toArray();\r\n  }`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {KernelVariable} argument\r\n * @param {KernelValue[]} kernelValues\r\n * @param {KernelVariable[]} values\r\n * @param context\r\n * @param {KernelVariable[]} uploadedValues\r\n * @return {string|null}\r\n */\r\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\r\n  if (argument === null) return null;\r\n  switch (typeof argument) {\r\n    case 'boolean':\r\n    case 'number':\r\n      return null;\r\n  }\r\n  if (\r\n    typeof HTMLImageElement !== 'undefined' &&\r\n    argument instanceof HTMLImageElement\r\n  ) {\r\n    for (let i = 0; i < kernelValues.length; i++) {\r\n      const kernelValue = kernelValues[i];\r\n      if (kernelValue.type !== 'HTMLImageArray') continue;\r\n      if (kernelValue.uploadValue !== argument) continue;\r\n      // TODO: if we send two of the same image, the parser could get confused, and short circuit to the first, handle that here\r\n      const variableIndex = values[i].indexOf(argument);\r\n      if (variableIndex === -1) continue;\r\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\r\n      context.insertVariable(variableName, argument);\r\n      return variableName;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  for (let i = 0; i < kernelValues.length; i++) {\r\n    const kernelValue = kernelValues[i];\r\n    if (argument !== kernelValue.uploadValue) continue;\r\n    const variable = `uploadValue_${kernelValue.name}`;\r\n    context.insertVariable(variable, kernelValue);\r\n    return variable;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * @class KernelValue\r\n */\r\nexport class KernelValue {\r\n  /**\r\n   *\r\n   * @param {KernelVariable} value\r\n   * @param {IKernelValueSettings} settings\r\n   */\r\n  constructor(value, settings) {\r\n    const {\r\n      name,\r\n      kernel,\r\n      context,\r\n      checkContext,\r\n      onRequestContextHandle,\r\n      onUpdateValueMismatch,\r\n      origin,\r\n      strictIntegers,\r\n      type,\r\n      tactic,\r\n    } = settings;\r\n    if (!name) {\r\n      throw new Error('name not set');\r\n    }\r\n    if (!type) {\r\n      throw new Error('type not set');\r\n    }\r\n    if (!origin) {\r\n      throw new Error('origin not set');\r\n    }\r\n    if (!tactic) {\r\n      throw new Error('tactic not set');\r\n    }\r\n    if (origin !== 'user' && origin !== 'constants') {\r\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\r\n    }\r\n    if (!onRequestContextHandle) {\r\n      throw new Error('onRequestContextHandle is not set');\r\n    }\r\n    this.name = name;\r\n    this.origin = origin;\r\n    this.tactic = tactic;\r\n    this.id = `${this.origin}_${name}`;\r\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\r\n    this.kernel = kernel;\r\n    this.strictIntegers = strictIntegers;\r\n    // handle textures\r\n    this.type = value.type || type;\r\n    this.size = value.size || null;\r\n    this.index = null;\r\n    this.context = context;\r\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\r\n    this.contextHandle = null;\r\n    this.onRequestContextHandle = onRequestContextHandle;\r\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\r\n    this.forceUploadEachRun = null;\r\n  }\r\n\r\n  getSource() {\r\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\r\n  }\r\n\r\n  updateValue(value) {\r\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\r\n  }\r\n}\r\n","import { Input } from '../../../input';\r\nimport { KernelValue } from '../../kernel-value';\r\nimport { utils } from '../../../utils';\r\n\r\nexport class WebGLKernelValue extends KernelValue {\r\n  /**\r\n   * @param {KernelVariable} value\r\n   * @param {IWebGLKernelValueSettings} settings\r\n   */\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.dimensionsId = null;\r\n    this.sizeId = null;\r\n    this.initialValueConstructor = value.constructor;\r\n    this.onRequestTexture = settings.onRequestTexture;\r\n    this.onRequestIndex = settings.onRequestIndex;\r\n    this.uploadValue = null;\r\n    this.textureSize = null;\r\n    this.bitRatio = null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  checkSize(width, height) {\r\n    if (!this.kernel.validate) return;\r\n    const { maxTextureSize } = this.kernel.constructor.features;\r\n    if (width > maxTextureSize || height > maxTextureSize) {\r\n      if (width > height) {\r\n        throw new Error(`Argument width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\r\n      } else {\r\n        throw new Error(`Argument height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\r\n      }\r\n    }\r\n  }\r\n\r\n  requestTexture() {\r\n    this.texture = this.onRequestTexture();\r\n    this.setupTexture();\r\n  }\r\n\r\n  setupTexture() {\r\n    this.contextHandle = this.onRequestContextHandle();\r\n    this.index = this.onRequestIndex();\r\n    this.dimensionsId = this.id + 'Dim';\r\n    this.sizeId = this.id + 'Size';\r\n  }\r\n\r\n  getTransferArrayType(value) {\r\n    if (Array.isArray(value[0])) {\r\n      return this.getTransferArrayType(value[0]);\r\n    }\r\n    switch (value.constructor) {\r\n      case Array:\r\n      case Int32Array:\r\n      case Int16Array:\r\n      case Int8Array:\r\n        return Float32Array;\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Uint16Array:\r\n      case Uint32Array:\r\n      case Float32Array:\r\n      case Float64Array:\r\n        return value.constructor;\r\n    }\r\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\r\n    return value.constructor;\r\n  }\r\n  /**\r\n   * @desc Adds kernel parameters to the Value Texture,\r\n   * binding it to the context, etc.\r\n   *\r\n   * @param {Array|Float32Array|Uint16Array} value - The actual Value supplied to the kernel\r\n   * @param {Number} length - the expected total length of the output array\r\n   * @param {Object} [Type]\r\n   * @returns {Float32Array|Uint16Array|Uint8Array} flattened array to transfer\r\n   */\r\n  formatArrayTransfer(value, length, Type) {\r\n    if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\r\n      // not already flat\r\n      const valuesFlat = new Float32Array(length);\r\n      utils.flattenTo(value, valuesFlat);\r\n      return valuesFlat;\r\n    } else {\r\n      switch (value.constructor) {\r\n        case Uint8ClampedArray:\r\n        case Uint8Array:\r\n        case Int8Array:\r\n        case Uint16Array:\r\n        case Int16Array:\r\n        case Float32Array:\r\n        case Int32Array: {\r\n          const valuesFlat = new(Type || value.constructor)(length);\r\n          utils.flattenTo(value, valuesFlat);\r\n          return valuesFlat;\r\n        }\r\n        default: {\r\n          const valuesFlat = new Float32Array(length);\r\n          utils.flattenTo(value, valuesFlat);\r\n          return valuesFlat;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\r\n   * @param value\r\n   * @returns {number}\r\n   */\r\n  getBitRatio(value) {\r\n    if (Array.isArray(value[0])) {\r\n      return this.getBitRatio(value[0]);\r\n    } else if (value.constructor === Input) {\r\n      return this.getBitRatio(value.value);\r\n    }\r\n    switch (value.constructor) {\r\n      case Uint8ClampedArray:\r\n      case Uint8Array:\r\n      case Int8Array:\r\n        return 1;\r\n      case Uint16Array:\r\n      case Int16Array:\r\n        return 2;\r\n      case Float32Array:\r\n      case Int32Array:\r\n      default:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Used for when we want a string output of our kernel, so we can still input values to the kernel\r\n   */\r\n  getStringValueHandler() {\r\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\r\n  }\r\n\r\n  getVariablePrecisionString() {\r\n    switch (this.tactic) {\r\n      case 'speed':\r\n        return 'lowp';\r\n      case 'performance':\r\n        return 'highp';\r\n      case 'balanced':\r\n      default:\r\n        return 'mediump';\r\n    }\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueBoolean extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const bool ${this.id} = ${value};\\n`;\r\n    }\r\n    return `uniform bool ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueFloat extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      if (Number.isInteger(value)) {\r\n        return `const float ${this.id} = ${value}.0;\\n`;\r\n      }\r\n      return `const float ${this.id} = ${value};\\n`;\r\n    }\r\n    return `uniform float ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueInteger extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\r\n    }\r\n    return `uniform int ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueHTMLImage extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const { width, height } = value;\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, 1];\r\n    this.requestTexture();\r\n    this.textureSize = [width, height];\r\n    this.uploadValue = value;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputImage) {\r\n    if (inputImage.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    const { width, height } = value;\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, 1];\r\n    this.textureSize = [width, height];\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\r\n","import { WebGLKernelValueDynamicHTMLImage } from './dynamic-html-image';\r\n\r\nexport class WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleInput extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    if (input.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleInput } from './single-input';\r\n\r\nexport class WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueUnsignedInput extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = this.getBitRatio(value);\r\n    const [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    this.TranserArrayType = this.getTransferArrayType(value.value);\r\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\r\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\r\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    if (input.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.preUploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedInput } from './unsigned-input';\r\n\r\nexport class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    const Type = this.getTransferArrayType(value.value);\r\n    this.preUploadValue = new Type(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const [width, height] = value.size;\r\n    this.checkSize(width, height);\r\n    this.setupTexture();\r\n    this.dimensions = value.dimensions;\r\n    this.textureSize = value.size;\r\n    this.uploadValue = value.texture;\r\n    this.forceUploadEachRun = true;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    if (inputTexture.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    if (this.checkContext && inputTexture.context !== this.context) {\r\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from './memory-optimized-number-texture';\r\n\r\nexport class WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\r\n    this.dimensions = inputTexture.dimensions;\r\n    this.textureSize = inputTexture.size;\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(inputTexture);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueNumberTexture extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    const [width, height] = value.size;\r\n    this.checkSize(width, height);\r\n    this.setupTexture();\r\n    const { size: textureSize, dimensions } = value;\r\n    this.bitRatio = this.getBitRatio(value);\r\n    this.dimensions = dimensions;\r\n    this.textureSize = textureSize;\r\n    this.uploadValue = value.texture;\r\n    this.forceUploadEachRun = true;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(inputTexture) {\r\n    if (inputTexture.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    if (this.checkContext && inputTexture.context !== this.context) {\r\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\r\n    }\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueNumberTexture } from './number-texture';\r\n\r\nexport class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = value.dimensions;\r\n    this.checkSize(value.size[0], value.size[1]);\r\n    this.textureSize = value.size;\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray } from './single-array';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray1DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten2dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray1DI } from './single-array1d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray2DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten3dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray2DI } from './single-array2d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray3DI extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = 4;\r\n    this.setShape(value);\r\n  }\r\n\r\n  setShape(value) {\r\n    const valueDimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\r\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\r\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flatten4dArrayTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray3DI } from './single-array3d-i';\r\n\r\nexport class WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray2 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\r\n    }\r\n    return `uniform vec2 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(2)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray3 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\r\n    }\r\n    return `uniform vec3 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(3)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueSingleArray4 extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.uploadValue = value;\r\n  }\r\n  getSource(value) {\r\n    if (this.origin === 'constants') {\r\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\r\n    }\r\n    return `uniform vec4 ${this.id};\\n`;\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    // resetting isn't supported for Array(4)\r\n    if (this.origin === 'constants') return '';\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from './index';\r\n\r\nexport class WebGLKernelValueUnsignedArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.requestTexture();\r\n    this.bitRatio = this.getBitRatio(value);\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    this.TranserArrayType = this.getTransferArrayType(value);\r\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n  }\r\n\r\n  getStringValueHandler() {\r\n    return utils.linesToString([\r\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\r\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\r\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\r\n    ]);\r\n  }\r\n\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.preUploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedArray } from './unsigned-array';\r\n\r\nexport class WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\r\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\r\n    const Type = this.getTransferArrayType(value);\r\n    this.preUploadValue = new Type(this.uploadArrayLength);\r\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueBoolean } from './kernel-value/boolean';\r\nimport { WebGLKernelValueFloat } from './kernel-value/float';\r\nimport { WebGLKernelValueInteger } from './kernel-value/integer';\r\n\r\nimport { WebGLKernelValueHTMLImage } from './kernel-value/html-image';\r\nimport { WebGLKernelValueDynamicHTMLImage } from './kernel-value/dynamic-html-image';\r\n\r\nimport { WebGLKernelValueHTMLVideo } from './kernel-value/html-video';\r\nimport { WebGLKernelValueDynamicHTMLVideo } from './kernel-value/dynamic-html-video';\r\n\r\nimport { WebGLKernelValueSingleInput } from './kernel-value/single-input';\r\nimport { WebGLKernelValueDynamicSingleInput } from './kernel-value/dynamic-single-input';\r\n\r\nimport { WebGLKernelValueUnsignedInput } from './kernel-value/unsigned-input';\r\nimport { WebGLKernelValueDynamicUnsignedInput } from './kernel-value/dynamic-unsigned-input';\r\n\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from './kernel-value/memory-optimized-number-texture';\r\nimport { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } from './kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nimport { WebGLKernelValueNumberTexture } from './kernel-value/number-texture';\r\nimport { WebGLKernelValueDynamicNumberTexture } from './kernel-value/dynamic-number-texture';\r\n\r\nimport { WebGLKernelValueSingleArray } from './kernel-value/single-array';\r\nimport { WebGLKernelValueDynamicSingleArray } from './kernel-value/dynamic-single-array';\r\n\r\nimport { WebGLKernelValueSingleArray1DI } from './kernel-value/single-array1d-i';\r\nimport { WebGLKernelValueDynamicSingleArray1DI } from './kernel-value/dynamic-single-array1d-i';\r\n\r\nimport { WebGLKernelValueSingleArray2DI } from './kernel-value/single-array2d-i';\r\nimport { WebGLKernelValueDynamicSingleArray2DI } from './kernel-value/dynamic-single-array2d-i';\r\n\r\nimport { WebGLKernelValueSingleArray3DI } from './kernel-value/single-array3d-i';\r\nimport { WebGLKernelValueDynamicSingleArray3DI } from './kernel-value/dynamic-single-array3d-i';\r\n\r\nimport { WebGLKernelValueSingleArray2 } from './kernel-value/single-array2';\r\nimport { WebGLKernelValueSingleArray3 } from './kernel-value/single-array3';\r\nimport { WebGLKernelValueSingleArray4 } from './kernel-value/single-array4';\r\n\r\nimport { WebGLKernelValueUnsignedArray } from './kernel-value/unsigned-array';\r\nimport { WebGLKernelValueDynamicUnsignedArray } from './kernel-value/dynamic-unsigned-array';\r\n\r\nexport const kernelValueMaps = {\r\n  unsigned: {\r\n    dynamic: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Array': WebGLKernelValueDynamicUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGLKernelValueDynamicUnsignedInput,\r\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Array': WebGLKernelValueUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGLKernelValueUnsignedInput,\r\n      'NumberTexture': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\r\n    }\r\n  },\r\n  single: {\r\n    dynamic: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Array': WebGLKernelValueDynamicSingleArray,\r\n      'Array(2)': WebGLKernelValueSingleArray2,\r\n      'Array(3)': WebGLKernelValueSingleArray3,\r\n      'Array(4)': WebGLKernelValueSingleArray4,\r\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\r\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\r\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\r\n      'Input': WebGLKernelValueDynamicSingleInput,\r\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGLKernelValueBoolean,\r\n      'Float': WebGLKernelValueFloat,\r\n      'Integer': WebGLKernelValueInteger,\r\n      'Array': WebGLKernelValueSingleArray,\r\n      'Array(2)': WebGLKernelValueSingleArray2,\r\n      'Array(3)': WebGLKernelValueSingleArray3,\r\n      'Array(4)': WebGLKernelValueSingleArray4,\r\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\r\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\r\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\r\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\r\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\r\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\r\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\r\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\r\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\r\n      'Input': WebGLKernelValueSingleInput,\r\n      'NumberTexture': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGLKernelValueHTMLImage,\r\n      'HTMLImageArray': false,\r\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\r\n    }\r\n  },\r\n};\r\n\r\nexport function lookupKernelValueType(type, dynamic, precision, value) {\r\n  if (!type) {\r\n    throw new Error('type missing');\r\n  }\r\n  if (!dynamic) {\r\n    throw new Error('dynamic missing');\r\n  }\r\n  if (!precision) {\r\n    throw new Error('precision missing');\r\n  }\r\n  if (value.type) {\r\n    type = value.type;\r\n  }\r\n  const types = kernelValueMaps[precision][dynamic];\r\n  if (types[type] === false) {\r\n    return null;\r\n  } else if (types[type] === undefined) {\r\n    throw new Error(`Could not find a KernelValue for ${ type }`);\r\n  }\r\n  return types[type];\r\n}\r\n","import { GLKernel } from '../gl/kernel';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { WebGLFunctionNode } from './function-node';\r\nimport { utils } from '../../utils';\r\nimport triangleNoise from '../../plugins/triangle-noise';\r\nimport { fragmentShader } from './fragment-shader';\r\nimport { vertexShader } from './vertex-shader';\r\nimport { glKernelString } from '../gl/kernel-string';\r\nimport { lookupKernelValueType } from './kernel-value-maps';\r\n\r\nlet isSupported = null;\r\nlet testCanvas = null;\r\nlet testContext = null;\r\nlet testExtensions = null;\r\nlet features = null;\r\n\r\nconst plugins = [triangleNoise];\r\nconst canvases = [];\r\nconst maxTexSizes = {};\r\n\r\n/**\r\n * @desc Kernel Implementation for WebGL.\r\n *\r\n * This builds the shaders and runs them on the GPU, then outputs the result\r\n * back as float (enabled by default) and Texture.\r\n *\r\n * @prop {Object} textureCache - webGl Texture cache\r\n * @prop {Object} programUniformLocationCache - Location of program variables in memory\r\n * @prop {Object} framebuffer - Webgl frameBuffer\r\n * @prop {Object} buffer - WebGL buffer\r\n * @prop {Object} program - The webGl Program\r\n * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\r\n * @prop {Boolean} pipeline - Set output type to FAST mode (GPU to GPU via Textures), instead of float\r\n * @prop {String} endianness - Endian information like Little-endian, Big-endian.\r\n * @prop {Array} argumentTypes - Types of parameters sent to the Kernel\r\n * @prop {String} compiledFragmentShader - Compiled fragment shader string\r\n * @prop {String} compiledVertexShader - Compiled Vertical shader string\r\n * @extends GLKernel\r\n */\r\nexport class WebGLKernel extends GLKernel {\r\n  static get isSupported() {\r\n    if (isSupported !== null) {\r\n      return isSupported;\r\n    }\r\n    this.setupFeatureChecks();\r\n    isSupported = this.isContextMatch(testContext);\r\n    return isSupported;\r\n  }\r\n\r\n  static setupFeatureChecks() {\r\n    if (typeof document !== 'undefined') {\r\n      testCanvas = document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      testCanvas = new OffscreenCanvas(0, 0);\r\n    }\r\n    if (!testCanvas) return;\r\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\r\n    if (!testContext || !testContext.getExtension) return;\r\n    testExtensions = {\r\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\r\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\r\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\r\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\r\n    };\r\n    features = this.getFeatures();\r\n  }\r\n\r\n  static isContextMatch(context) {\r\n    if (typeof WebGLRenderingContext !== 'undefined') {\r\n      return context instanceof WebGLRenderingContext;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getFeatures() {\r\n    const isDrawBuffers = this.getIsDrawBuffers();\r\n    return Object.freeze({\r\n      isFloatRead: this.getIsFloatRead(),\r\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\r\n      isTextureFloat: this.getIsTextureFloat(),\r\n      isDrawBuffers,\r\n      kernelMap: isDrawBuffers,\r\n      channelCount: this.getChannelCount(),\r\n    });\r\n  }\r\n\r\n  static getIsTextureFloat() {\r\n    return Boolean(testExtensions.OES_texture_float);\r\n  }\r\n\r\n  static getIsDrawBuffers() {\r\n    return Boolean(testExtensions.WEBGL_draw_buffers);\r\n  }\r\n\r\n  static getChannelCount() {\r\n    return testExtensions.WEBGL_draw_buffers ?\r\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\r\n      1;\r\n  }\r\n\r\n  static lookupKernelValueType(type, dynamic, precision, value) {\r\n    return lookupKernelValueType(type, dynamic, precision, value);\r\n  }\r\n\r\n  static get testCanvas() {\r\n    return testCanvas;\r\n  }\r\n\r\n  static get testContext() {\r\n    return testContext;\r\n  }\r\n\r\n  static get features() {\r\n    return features;\r\n  }\r\n\r\n  static get fragmentShader() {\r\n    return fragmentShader;\r\n  }\r\n\r\n  static get vertexShader() {\r\n    return vertexShader;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} source\r\n   * @param {IKernelSettings} settings\r\n   */\r\n  constructor(source, settings) {\r\n    super(source, settings);\r\n    this.program = null;\r\n    this.pipeline = settings.pipeline;\r\n    this.endianness = utils.systemEndianness();\r\n    this.extensions = {};\r\n    this.subKernelOutputTextures = null;\r\n    this.kernelArguments = null;\r\n    this.argumentTextureCount = 0;\r\n    this.constantTextureCount = 0;\r\n    this.compiledFragmentShader = null;\r\n    this.compiledVertexShader = null;\r\n    this.fragShader = null;\r\n    this.vertShader = null;\r\n    this.drawBuffersMap = null;\r\n    this.outputTexture = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Int32Array|null}\r\n     */\r\n    this.maxTexSize = null;\r\n    this.switchingKernels = false;\r\n    this.onRequestSwitchKernel = null;\r\n\r\n    this.mergeSettings(source.settings || settings);\r\n\r\n    /**\r\n     * The thread dimensions, x, y and z\r\n     * @type {Array|null}\r\n     */\r\n    this.threadDim = null;\r\n    this.framebuffer = null;\r\n    this.buffer = null;\r\n    this.textureCache = {};\r\n    this.programUniformLocationCache = {};\r\n    this.uniform1fCache = {};\r\n    this.uniform1iCache = {};\r\n    this.uniform2fCache = {};\r\n    this.uniform2fvCache = {};\r\n    this.uniform2ivCache = {};\r\n    this.uniform3fvCache = {};\r\n    this.uniform3ivCache = {};\r\n    this.uniform4fvCache = {};\r\n    this.uniform4ivCache = {};\r\n  }\r\n\r\n  initCanvas() {\r\n    if (typeof document !== 'undefined') {\r\n      const canvas = document.createElement('canvas');\r\n      // Default width and height, to fix webgl issue in safari\r\n      canvas.width = 2;\r\n      canvas.height = 2;\r\n      return canvas;\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      return new OffscreenCanvas(0, 0);\r\n    }\r\n  }\r\n\r\n  initContext() {\r\n    const settings = {\r\n      alpha: false,\r\n      depth: false,\r\n      antialias: false\r\n    };\r\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\r\n  }\r\n\r\n  initPlugins(settings) {\r\n    // default plugins\r\n    const pluginsToUse = [];\r\n    const { source } = this;\r\n    if (typeof source === 'string') {\r\n      for (let i = 0; i < plugins.length; i++) {\r\n        const plugin = plugins[i];\r\n        if (source.match(plugin.functionMatch)) {\r\n          pluginsToUse.push(plugin);\r\n        }\r\n      }\r\n    } else if (typeof source === 'object') {\r\n      // `source` is from object, json\r\n      if (settings.pluginNames) { //TODO: in context of JSON support, pluginNames may not exist here\r\n        for (let i = 0; i < plugins.length; i++) {\r\n          const plugin = plugins[i];\r\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\r\n          if (usePlugin) {\r\n            pluginsToUse.push(plugin);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return pluginsToUse;\r\n  }\r\n\r\n  initExtensions() {\r\n    this.extensions = {\r\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\r\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\r\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\r\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\r\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.validate) {\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      return;\r\n    }\r\n\r\n    const { features } = this.constructor;\r\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\r\n      throw new Error('Float textures are not supported');\r\n    } else if (this.precision === 'single' && !features.isFloatRead) {\r\n      throw new Error('Single precision not supported');\r\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\r\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\r\n      throw new Error('could not instantiate draw buffers extension');\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy === null) {\r\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\r\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\r\n      this.fixIntegerDivisionAccuracy = false;\r\n    }\r\n\r\n    this.checkOutput();\r\n\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      if (argType === 'Array') {\r\n        this.output = utils.getDimensions(argType);\r\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\r\n        this.output = args[0].output;\r\n      } else {\r\n        throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n\r\n      if (this.precision === 'precision') {\r\n        this.precision = 'unsigned';\r\n        console.warn('Cannot use graphical mode and single precision at the same time');\r\n      }\r\n\r\n      this.texSize = utils.clone(this.output);\r\n      return;\r\n    } else if (this.precision === null && features.isTextureFloat) {\r\n      this.precision = 'single';\r\n    }\r\n\r\n    this.texSize = utils.getKernelTextureSize({\r\n      optimizeFloatMemory: this.optimizeFloatMemory,\r\n      precision: this.precision,\r\n    }, this.output);\r\n\r\n    this.checkTextureSize();\r\n  }\r\n\r\n  updateMaxTexSize() {\r\n    const { texSize, canvas } = this;\r\n    if (this.maxTexSize === null) {\r\n      let canvasIndex = canvases.indexOf(canvas);\r\n      if (canvasIndex === -1) {\r\n        canvasIndex = canvases.length;\r\n        canvases.push(canvas);\r\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\r\n      }\r\n      this.maxTexSize = maxTexSizes[canvasIndex];\r\n    }\r\n    if (this.maxTexSize[0] < texSize[0]) {\r\n      this.maxTexSize[0] = texSize[0];\r\n    }\r\n    if (this.maxTexSize[1] < texSize[1]) {\r\n      this.maxTexSize[1] = texSize[1];\r\n    }\r\n  }\r\n\r\n  // TODO: move channel checks to new place\r\n  _oldtranslateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n\r\n    // need this line to automatically get returnType\r\n    const translatedSource = functionBuilder.getPrototypeString('kernel');\r\n\r\n    if (!this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    let requiredChannels = 0;\r\n    const returnTypes = functionBuilder.getReturnTypes();\r\n    for (let i = 0; i < returnTypes.length; i++) {\r\n      switch (returnTypes[i]) {\r\n        case 'Float':\r\n        case 'Number':\r\n        case 'Integer':\r\n          requiredChannels++;\r\n          break;\r\n        case 'Array(2)':\r\n          requiredChannels += 2;\r\n          break;\r\n        case 'Array(3)':\r\n          requiredChannels += 3;\r\n          break;\r\n        case 'Array(4)':\r\n          requiredChannels += 4;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (features && requiredChannels > features.channelCount) {\r\n      throw new Error('Too many channels!');\r\n    }\r\n\r\n    return this.translatedSource = translatedSource;\r\n  }\r\n\r\n  setupArguments(args) {\r\n    this.kernelArguments = [];\r\n    this.argumentTextureCount = 0;\r\n    const needsArgumentTypes = this.argumentTypes === null;\r\n    // TODO: remove\r\n    if (needsArgumentTypes) {\r\n      this.argumentTypes = [];\r\n    }\r\n    this.argumentSizes = [];\r\n    this.argumentBitRatios = [];\r\n    // TODO: end remove\r\n\r\n    if (args.length < this.argumentNames.length) {\r\n      throw new Error('not enough arguments for kernel');\r\n    } else if (args.length > this.argumentNames.length) {\r\n      throw new Error('too many arguments for kernel');\r\n    }\r\n\r\n    const { context: gl } = this;\r\n    let textureIndexes = 0;\r\n    for (let index = 0; index < args.length; index++) {\r\n      const value = args[index];\r\n      const name = this.argumentNames[index];\r\n      let type;\r\n      if (needsArgumentTypes) {\r\n        type = utils.getVariableType(value, this.strictIntegers);\r\n        this.argumentTypes.push(type);\r\n      } else {\r\n        type = this.argumentTypes[index];\r\n      }\r\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\r\n      if (KernelValue === null) {\r\n        return this.requestFallback(args);\r\n      }\r\n      const kernelArgument = new KernelValue(value, {\r\n        name,\r\n        type,\r\n        tactic: this.tactic,\r\n        origin: 'user',\r\n        context: gl,\r\n        checkContext: this.checkContext,\r\n        kernel: this,\r\n        strictIntegers: this.strictIntegers,\r\n        onRequestTexture: () => {\r\n          return this.context.createTexture();\r\n        },\r\n        onRequestIndex: () => {\r\n          return textureIndexes++;\r\n        },\r\n        onUpdateValueMismatch: () => {\r\n          this.switchingKernels = true;\r\n        },\r\n        onRequestContextHandle: () => {\r\n          return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\r\n        }\r\n      });\r\n      this.kernelArguments.push(kernelArgument);\r\n      this.argumentSizes.push(kernelArgument.textureSize);\r\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\r\n    }\r\n  }\r\n\r\n  setupConstants(args) {\r\n    const { context: gl } = this;\r\n    this.kernelConstants = [];\r\n    this.forceUploadKernelConstants = [];\r\n    let needsConstantTypes = this.constantTypes === null;\r\n    if (needsConstantTypes) {\r\n      this.constantTypes = {};\r\n    }\r\n    this.constantBitRatios = {};\r\n    let textureIndexes = 0;\r\n    for (const name in this.constants) {\r\n      const value = this.constants[name];\r\n      let type;\r\n      if (needsConstantTypes) {\r\n        type = utils.getVariableType(value, this.strictIntegers);\r\n        this.constantTypes[name] = type;\r\n      } else {\r\n        type = this.constantTypes[name];\r\n      }\r\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\r\n      if (KernelValue === null) {\r\n        return this.requestFallback(args);\r\n      }\r\n      const kernelValue = new KernelValue(value, {\r\n        name,\r\n        type,\r\n        tactic: this.tactic,\r\n        origin: 'constants',\r\n        context: this.context,\r\n        checkContext: this.checkContext,\r\n        kernel: this,\r\n        strictIntegers: this.strictIntegers,\r\n        onRequestTexture: () => {\r\n          return this.context.createTexture();\r\n        },\r\n        onRequestIndex: () => {\r\n          return textureIndexes++;\r\n        },\r\n        onRequestContextHandle: () => {\r\n          return gl.TEXTURE0 + this.constantTextureCount++;\r\n        }\r\n      });\r\n      this.constantBitRatios[name] = kernelValue.bitRatio;\r\n      this.kernelConstants.push(kernelValue);\r\n      if (kernelValue.forceUploadEachRun) {\r\n        this.forceUploadKernelConstants.push(kernelValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  build() {\r\n    this.initExtensions();\r\n    this.validateSettings(arguments);\r\n    this.setupConstants(arguments);\r\n    if (this.fallbackRequested) return;\r\n    this.setupArguments(arguments);\r\n    if (this.fallbackRequested) return;\r\n    this.updateMaxTexSize();\r\n    this.translateSource();\r\n    const failureResult = this.pickRenderStrategy(arguments);\r\n    if (failureResult) {\r\n      return failureResult;\r\n    }\r\n    const { texSize, context: gl, canvas } = this;\r\n    gl.enable(gl.SCISSOR_TEST);\r\n    if (this.pipeline && this.precision === 'single') {\r\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      canvas.width = this.maxTexSize[0];\r\n      canvas.height = this.maxTexSize[1];\r\n    } else {\r\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\r\n      canvas.width = this.maxTexSize[0];\r\n      canvas.height = this.maxTexSize[1];\r\n    }\r\n    const threadDim = this.threadDim = Array.from(this.output);\r\n    while (threadDim.length < 3) {\r\n      threadDim.push(1);\r\n    }\r\n\r\n    const compiledVertexShader = this.getVertexShader(arguments);\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertShader, compiledVertexShader);\r\n    gl.compileShader(vertShader);\r\n    this.vertShader = vertShader;\r\n\r\n    const compiledFragmentShader = this.getFragmentShader(arguments);\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragShader, compiledFragmentShader);\r\n    gl.compileShader(fragShader);\r\n    this.fragShader = fragShader;\r\n\r\n    if (this.debug) {\r\n      console.log('GLSL Shader Output:');\r\n      console.log(compiledFragmentShader);\r\n    }\r\n\r\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\r\n    }\r\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\r\n    }\r\n\r\n    const program = this.program = gl.createProgram();\r\n    gl.attachShader(program, vertShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    this.framebuffer = gl.createFramebuffer();\r\n    this.framebuffer.width = texSize[0];\r\n    this.framebuffer.height = texSize[1];\r\n\r\n    const vertices = new Float32Array([-1, -1,\r\n      1, -1, -1, 1,\r\n      1, 1\r\n    ]);\r\n    const texCoords = new Float32Array([\r\n      0, 0,\r\n      1, 0,\r\n      0, 1,\r\n      1, 1\r\n    ]);\r\n\r\n    const texCoordOffset = vertices.byteLength;\r\n\r\n    let buffer = this.buffer;\r\n    if (!buffer) {\r\n      buffer = this.buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\r\n    } else {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    }\r\n\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\r\n\r\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\r\n    gl.enableVertexAttribArray(aPosLoc);\r\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\r\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\r\n    gl.enableVertexAttribArray(aTexCoordLoc);\r\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n\r\n    let i = 0;\r\n    gl.useProgram(this.program);\r\n    for (let p in this.constants) {\r\n      this.kernelConstants[i++].updateValue(this.constants[p]);\r\n    }\r\n\r\n    if (!this.immutable) {\r\n      this._setupOutputTexture();\r\n      if (\r\n        this.subKernels !== null &&\r\n        this.subKernels.length > 0\r\n      ) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n    }\r\n  }\r\n\r\n  translateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0) {\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const subKernel = this.subKernels[i];\r\n        if (!subKernel.returnType) {\r\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  run() {\r\n    const { kernelArguments, forceUploadKernelConstants } = this;\r\n    const texSize = this.texSize;\r\n    const gl = this.context;\r\n\r\n    gl.useProgram(this.program);\r\n    gl.scissor(0, 0, texSize[0], texSize[1]);\r\n\r\n    if (this.dynamicOutput) {\r\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\r\n      this.setUniform2iv('uTexSize', texSize);\r\n    }\r\n\r\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\r\n\r\n    this.switchingKernels = false;\r\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\r\n      const constant = forceUploadKernelConstants[i];\r\n      constant.updateValue(this.constants[constant.name]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      kernelArguments[i].updateValue(arguments[i]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n\r\n    if (this.plugins) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.onBeforeRun) {\r\n          plugin.onBeforeRun(this);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.pipeline) {\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        if (!this.outputTexture || this.immutable) {\r\n          this._setupOutputTexture();\r\n        }\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        return new this.TextureConstructor({\r\n          texture: this.outputTexture,\r\n          size: texSize,\r\n          dimensions: this.threadDim,\r\n          output: this.output,\r\n          context: this.context,\r\n        });\r\n      }\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n      return;\r\n    }\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    if (this.immutable) {\r\n      this._setupOutputTexture();\r\n    }\r\n\r\n    if (this.subKernels !== null) {\r\n      if (this.immutable) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n      this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\r\n    }\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  }\r\n\r\n  /**\r\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\r\n   * @returns {Object} Output Texture Cache\r\n   */\r\n  getOutputTexture() {\r\n    return this.outputTexture;\r\n  }\r\n\r\n  /**\r\n   * @desc Setup and replace output texture\r\n   */\r\n  _setupOutputTexture() {\r\n    const gl = this.context;\r\n    const texSize = this.texSize;\r\n    const texture = this.outputTexture = this.context.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    // if (this.precision === 'single') {\r\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n    // } else {\r\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    // }\r\n    if (this.precision === 'single') {\r\n      if (this.pipeline) {\r\n        // TODO: investigate if webgl1 can handle gl.RED usage in gl.texImage2D, otherwise, simplify the below\r\n        switch (this.returnType) {\r\n          case 'Number':\r\n          case 'Float':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            } else {\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          case 'Array(3)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          case 'Array(4)':\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n            break;\r\n          default:\r\n            if (!this.graphical) {\r\n              throw new Error('Unhandled return type');\r\n            }\r\n        }\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      }\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n  }\r\n\r\n  /**\r\n   * @desc Setup and replace sub-output textures\r\n   */\r\n  _setupSubOutputTextures() {\r\n    const gl = this.context;\r\n    const texSize = this.texSize;\r\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\r\n    this.subKernelOutputTextures = [];\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const texture = this.context.createTexture();\r\n      this.subKernelOutputTextures.push(texture);\r\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\r\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      if (this.precision === 'single') {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n      }\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\r\n   * @param {String} name - Name of the subkernel, argument, or kernel.\r\n   * @returns {Object} Texture cache\r\n   */\r\n  getTextureCache(name) {\r\n    if (this.textureCache.hasOwnProperty(name)) {\r\n      return this.textureCache[name];\r\n    }\r\n    return this.textureCache[name] = this.context.createTexture();\r\n  }\r\n\r\n  /**\r\n   * @desc removes a texture from the kernel's cache\r\n   * @param {String} name - Name of texture\r\n   */\r\n  detachTextureCache(name) {\r\n    delete this.textureCache[name];\r\n  }\r\n\r\n  setUniform1f(name, value) {\r\n    if (this.uniform1fCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform1fCache[name];\r\n      if (value === cache) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform1fCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform1f(loc, value);\r\n  }\r\n\r\n  setUniform1i(name, value) {\r\n    if (this.uniform1iCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform1iCache[name];\r\n      if (value === cache) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform1iCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform1i(loc, value);\r\n  }\r\n\r\n  setUniform2f(name, value1, value2) {\r\n    if (this.uniform2fCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2fCache[name];\r\n      if (\r\n        value1 === cache[0] &&\r\n        value2 === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2fCache[name] = [value1, value2];\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2f(loc, value1, value2);\r\n  }\r\n\r\n  setUniform2fv(name, value) {\r\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2fv(loc, value);\r\n  }\r\n\r\n  setUniform2iv(name, value) {\r\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform2ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform2ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform2iv(loc, value);\r\n  }\r\n\r\n  setUniform3fv(name, value) {\r\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3fv(loc, value);\r\n  }\r\n\r\n  setUniform3iv(name, value) {\r\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3iv(loc, value);\r\n  }\r\n\r\n  setUniform3fv(name, value) {\r\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform3fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform3fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform3fv(loc, value);\r\n  }\r\n\r\n  setUniform4iv(name, value) {\r\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform4ivCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2] &&\r\n        value[3] === cache[3]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform4ivCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform4iv(loc, value);\r\n  }\r\n\r\n  setUniform4fv(name, value) {\r\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\r\n      const cache = this.uniform4fvCache[name];\r\n      if (\r\n        value[0] === cache[0] &&\r\n        value[1] === cache[1] &&\r\n        value[2] === cache[2] &&\r\n        value[3] === cache[3]\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    this.uniform4fvCache[name] = value;\r\n    const loc = this.getUniformLocation(name);\r\n    this.context.uniform4fv(loc, value);\r\n  }\r\n\r\n  /**\r\n   * @desc Return WebGlUniformLocation for various variables\r\n   * related to webGl program, such as user-defined variables,\r\n   * as well as, dimension sizes, etc.\r\n   */\r\n  getUniformLocation(name) {\r\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\r\n      return this.programUniformLocationCache[name];\r\n    }\r\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\r\n  }\r\n\r\n  /**\r\n   * @desc Generate Shader artifacts for the kernel program.\r\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\r\n   */\r\n  _getFragShaderArtifactMap(args) {\r\n    return {\r\n      HEADER: this._getHeaderString(),\r\n      LOOP_MAX: this._getLoopMaxString(),\r\n      PLUGINS: this._getPluginsString(),\r\n      CONSTANTS: this._getConstantsString(),\r\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\r\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\r\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\r\n      INJECTED_NATIVE: this._getInjectedNative(),\r\n      MAIN_CONSTANTS: this._getMainConstantsString(),\r\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\r\n      KERNEL: this.getKernelString(),\r\n      MAIN_RESULT: this.getMainResultString(),\r\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\r\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\r\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\r\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Generate Shader artifacts for the kernel program.\r\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\r\n   */\r\n  _getVertShaderArtifactMap(args) {\r\n    return {\r\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\r\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\r\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\r\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Get the header string for the program.\r\n   * This returns an empty string if no sub-kernels are defined.\r\n   *\r\n   * @returns {String} result\r\n   */\r\n  _getHeaderString() {\r\n    return (\r\n      this.subKernels !== null ?\r\n      '#extension GL_EXT_draw_buffers : require\\n' :\r\n      ''\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc Get the maximum loop size String.\r\n   * @returns {String} result\r\n   */\r\n  _getLoopMaxString() {\r\n    return (\r\n      this.loopMaxIterations ?\r\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\r\n      ' 1000;\\n'\r\n    );\r\n  }\r\n\r\n  _getPluginsString() {\r\n    if (!this.plugins) return '\\n';\r\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\r\n   * @returns {String} result\r\n   */\r\n  _getConstantsString() {\r\n    const result = [];\r\n    const { threadDim, texSize } = this;\r\n    if (this.dynamicOutput) {\r\n      result.push(\r\n        'uniform ivec3 uOutputDim',\r\n        'uniform ivec2 uTexSize'\r\n      );\r\n    } else {\r\n      result.push(\r\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\r\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\r\n      );\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  /**\r\n   * @desc Get texture coordinate string for the program\r\n   * @returns {String} result\r\n   */\r\n  _getTextureCoordinate() {\r\n    const subKernels = this.subKernels;\r\n    if (subKernels === null || subKernels.length < 1) {\r\n      return 'varying vec2 vTexCoord;\\n';\r\n    } else {\r\n      return 'out vec2 vTexCoord;\\n';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Get Decode32 endianness string for little-endian and big-endian\r\n   * @returns {String} result\r\n   */\r\n  _getDecode32EndiannessString() {\r\n    return (\r\n      this.endianness === 'LE' ?\r\n      '' :\r\n      '  texel.rgba = texel.abgr;\\n'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc Get Encode32 endianness string for little-endian and big-endian\r\n   * @returns {String} result\r\n   */\r\n  _getEncode32EndiannessString() {\r\n    return (\r\n      this.endianness === 'LE' ?\r\n      '' :\r\n      '  texel.rgba = texel.abgr;\\n'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\r\n   * @returns {String} result\r\n   */\r\n  _getDivideWithIntegerCheckString() {\r\n    return this.fixIntegerDivisionAccuracy ?\r\n      `float div_with_int_check(float x, float y) {\r\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\r\n    return float(int(x)/int(y));\r\n  }\r\n  return x / y;\r\n}` :\r\n      '';\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {String} result\r\n   */\r\n  _getMainArgumentsString(args) {\r\n    const results = [];\r\n    const { argumentNames } = this;\r\n    for (let i = 0; i < argumentNames.length; i++) {\r\n      results.push(this.kernelArguments[i].getSource(args[i]));\r\n    }\r\n    return results.join('');\r\n  }\r\n\r\n  _getInjectedNative() {\r\n    return this.injectedNative || '';\r\n  }\r\n\r\n  _getMainConstantsString() {\r\n    const result = [];\r\n    const { constants } = this;\r\n    if (constants) {\r\n      let i = 0;\r\n      for (const name in constants) {\r\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  /**\r\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\r\n   * @returns {String} result\r\n   */\r\n  getKernelString() {\r\n    let kernelResultDeclaration;\r\n    switch (this.returnType) {\r\n      case 'Array(2)':\r\n        kernelResultDeclaration = 'vec2 kernelResult';\r\n        break;\r\n      case 'Array(3)':\r\n        kernelResultDeclaration = 'vec3 kernelResult';\r\n        break;\r\n      case 'Array(4)':\r\n        kernelResultDeclaration = 'vec4 kernelResult';\r\n        break;\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Number':\r\n      case 'Integer':\r\n        kernelResultDeclaration = 'float kernelResult';\r\n        break;\r\n      default:\r\n        if (this.graphical) {\r\n          kernelResultDeclaration = 'float kernelResult';\r\n        } else {\r\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\r\n        }\r\n    }\r\n\r\n    const result = [];\r\n    const subKernels = this.subKernels;\r\n    if (subKernels !== null) {\r\n      result.push(\r\n        kernelResultDeclaration\r\n      );\r\n      switch (this.returnType) {\r\n        case 'Number':\r\n        case 'Float':\r\n        case 'Integer':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            const subKernel = subKernels[i];\r\n            result.push(\r\n              subKernel.returnType === 'Integer' ?\r\n              `int subKernelResult_${ subKernel.name } = 0` :\r\n              `float subKernelResult_${ subKernel.name } = 0.0`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(2)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec2 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(3)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec3 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n        case 'Array(4)':\r\n          for (let i = 0; i < subKernels.length; i++) {\r\n            result.push(\r\n              `vec4 subKernelResult_${ subKernels[i].name }`\r\n            );\r\n          }\r\n          break;\r\n      }\r\n    } else {\r\n      result.push(\r\n        kernelResultDeclaration\r\n      );\r\n    }\r\n\r\n    return utils.linesToString(result) + this.translatedSource;\r\n  }\r\n\r\n  getMainResultGraphical() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragColor = actualColor',\r\n    ]);\r\n  }\r\n\r\n  getMainResultPackedPixels() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return this.getMainResultKernelPackedPixels() +\r\n          this.getMainResultSubKernelPackedPixels();\r\n      default:\r\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultKernelPackedPixels() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultSubKernelPackedPixels() {\r\n    const result = [];\r\n    if (!this.subKernels) return '';\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\r\n        );\r\n      }\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultMemoryOptimizedFloats() {\r\n    const result = [\r\n      '  index *= 4',\r\n    ];\r\n\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        const channels = ['r', 'g', 'b', 'a'];\r\n        for (let i = 0; i < channels.length; i++) {\r\n          const channel = channels[i];\r\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\r\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\r\n          if (i + 1 < channels.length) {\r\n            result.push('  index += 1');\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\r\n    }\r\n\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\r\n    result.push(\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  gl_FragData[0].${channel} = kernelResult`,\r\n    );\r\n  }\r\n\r\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getMainResultKernelNumberTexture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelNumberTexture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray2Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult[0]',\r\n      '  gl_FragData[0][1] = kernelResult[1]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray2Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray3Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0][0] = kernelResult[0]',\r\n      '  gl_FragData[0][1] = kernelResult[1]',\r\n      '  gl_FragData[0][2] = kernelResult[2]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray3Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray4Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  gl_FragData[0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray4Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Float':\r\n      case 'Integer':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          const subKernel = this.subKernels[i];\r\n          if (subKernel.returnType === 'Integer') {\r\n            result.push(\r\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\r\n            );\r\n          } else {\r\n            result.push(\r\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\r\n            );\r\n          }\r\n        }\r\n        break;\r\n      case 'Array(2)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n          );\r\n        }\r\n        break;\r\n      case 'Array(3)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n          );\r\n        }\r\n        break;\r\n      case 'Array(4)':\r\n        for (let i = 0; i < this.subKernels.length; ++i) {\r\n          result.push(\r\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\r\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\r\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\r\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\r\n          );\r\n        }\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {String} src - Shader string\r\n   * @param {Object} map - Variables/Constants associated with shader\r\n   */\r\n  replaceArtifacts(src, map) {\r\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\r\n      if (map.hasOwnProperty(artifact)) {\r\n        return map[artifact];\r\n      }\r\n      throw `unhandled artifact ${artifact}`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @desc Get the fragment shader String.\r\n   * If the String hasn't been compiled yet,\r\n   * then this method compiles it as well\r\n   *\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {string} Fragment Shader string\r\n   */\r\n  getFragmentShader(args) {\r\n    if (this.compiledFragmentShader !== null) {\r\n      return this.compiledFragmentShader;\r\n    }\r\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\r\n  }\r\n\r\n  /**\r\n   * @desc Get the vertical shader String\r\n   * @param {Array|IArguments} args - The actual parameters sent to the Kernel\r\n   * @returns {string} Vertical Shader string\r\n   */\r\n  getVertexShader(args) {\r\n    if (this.compiledVertexShader !== null) {\r\n      return this.compiledVertexShader;\r\n    }\r\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\r\n   */\r\n  toString() {\r\n    const setupContextString = utils.linesToString([\r\n      `const gl = context`,\r\n    ]);\r\n    return glKernelString(this.constructor, arguments, this, setupContextString);\r\n  }\r\n\r\n  destroy(removeCanvasReferences) {\r\n    if (this.outputTexture) {\r\n      this.context.deleteTexture(this.outputTexture);\r\n    }\r\n    if (this.buffer) {\r\n      this.context.deleteBuffer(this.buffer);\r\n    }\r\n    if (this.framebuffer) {\r\n      this.context.deleteFramebuffer(this.framebuffer);\r\n    }\r\n    if (this.vertShader) {\r\n      this.context.deleteShader(this.vertShader);\r\n    }\r\n    if (this.fragShader) {\r\n      this.context.deleteShader(this.fragShader);\r\n    }\r\n    if (this.program) {\r\n      this.context.deleteProgram(this.program);\r\n    }\r\n\r\n    const keys = Object.keys(this.textureCache);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const name = keys[i];\r\n      this.context.deleteTexture(this.textureCache[name]);\r\n    }\r\n\r\n    if (this.subKernelOutputTextures) {\r\n      for (let i = 0; i < this.subKernelOutputTextures.length; i++) {\r\n        this.context.deleteTexture(this.subKernelOutputTextures[i]);\r\n      }\r\n    }\r\n    if (removeCanvasReferences) {\r\n      const idx = canvases.indexOf(this.canvas);\r\n      if (idx >= 0) {\r\n        canvases[idx] = null;\r\n        maxTexSizes[idx] = null;\r\n      }\r\n    }\r\n    this.destroyExtensions();\r\n    delete this.context;\r\n    delete this.canvas;\r\n  }\r\n\r\n  destroyExtensions() {\r\n    this.extensions.OES_texture_float = null;\r\n    this.extensions.OES_texture_float_linear = null;\r\n    this.extensions.OES_element_index_uint = null;\r\n    this.extensions.WEBGL_draw_buffers = null;\r\n  }\r\n\r\n  static destroyContext(context) {\r\n    const extension = context.getExtension('WEBGL_lose_context');\r\n    if (extension) {\r\n      extension.loseContext();\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\r\n    return json;\r\n  }\r\n}\r\n","import { WebGLFunctionNode } from '../web-gl/function-node';\r\n\r\n/**\r\n * @class WebGL2FunctionNode\r\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective webGL code.\r\n * @extends WebGLFunctionNode\r\n * @returns the converted webGL function string\r\n */\r\nexport class WebGL2FunctionNode extends WebGLFunctionNode {\r\n\r\n  /**\r\n   * @desc Parses the abstract syntax tree for *identifier* expression\r\n   * @param {Object} idtNode - An ast Node\r\n   * @param {Array} retArr - return array string\r\n   * @returns {Array} the append retArr\r\n   */\r\n  astIdentifierExpression(idtNode, retArr) {\r\n    if (idtNode.type !== 'Identifier') {\r\n      throw this.astErrorOutput(\r\n        'IdentifierExpression - not an Identifier',\r\n        idtNode\r\n      );\r\n    }\r\n\r\n    const type = this.getType(idtNode);\r\n\r\n    if (idtNode.name === 'Infinity') {\r\n      retArr.push('intBitsToFloat(2139095039)');\r\n    } else if (type === 'Boolean') {\r\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\r\n        retArr.push(`bool(user_${idtNode.name})`);\r\n      } else {\r\n        retArr.push(`user_${idtNode.name}`);\r\n      }\r\n    } else {\r\n      retArr.push(`user_${idtNode.name}`);\r\n    }\r\n\r\n    return retArr;\r\n  }\r\n}\r\n","// language=GLSL\r\nexport const fragmentShader = `#version 300 es\r\n__HEADER__;\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\r\n\r\nconst int LOOP_MAX = __LOOP_MAX__;\r\n\r\n__PLUGINS__;\r\n__CONSTANTS__;\r\n\r\nin vec2 vTexCoord;\r\n\r\nconst int BIT_COUNT = 32;\r\nint modi(int x, int y) {\r\n  return x - y * (x / y);\r\n}\r\n\r\nint bitwiseOr(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseXOR(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 || b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseAnd(int a, int b) {\r\n  int result = 0;\r\n  int n = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    b = b / 2;\r\n    n = n * 2;\r\n    if(!(a > 0 && b > 0)) {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nint bitwiseNot(int a) {\r\n  int result = 0;\r\n  int n = 1;\r\n\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (modi(a, 2) == 0) {\r\n      result += n;\r\n    }\r\n    a = a / 2;\r\n    n = n * 2;\r\n  }\r\n  return result;\r\n}\r\nint bitwiseZeroFillLeftShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n *= 2;\r\n  }\r\n\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nint bitwiseSignedRightShift(int num, int shifts) {\r\n  return int(floor(float(num) / pow(2.0, float(shifts))));\r\n}\r\n\r\nint bitwiseZeroFillRightShift(int n, int shift) {\r\n  int maxBytes = BIT_COUNT;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (maxBytes >= n) {\r\n      break;\r\n    }\r\n    maxBytes *= 2;\r\n  }\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= shift) {\r\n      break;\r\n    }\r\n    n /= 2;\r\n  }\r\n  int result = 0;\r\n  int byteVal = 1;\r\n  for (int i = 0; i < BIT_COUNT; i++) {\r\n    if (i >= maxBytes) break;\r\n    if (modi(n, 2) > 0) { result += byteVal; }\r\n    n = int(n / 2);\r\n    byteVal *= 2;\r\n  }\r\n  return result;\r\n}\r\n\r\nvec2 integerMod(vec2 x, float y) {\r\n  vec2 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec3 integerMod(vec3 x, float y) {\r\n  vec3 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nvec4 integerMod(vec4 x, vec4 y) {\r\n  vec4 res = floor(mod(x, y));\r\n  return res * step(1.0 - floor(y), -res);\r\n}\r\n\r\nfloat integerMod(float x, float y) {\r\n  float res = floor(mod(x, y));\r\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\r\n}\r\n\r\nint integerMod(int x, int y) {\r\n  return x - (y * int(x/y));\r\n}\r\n\r\n__DIVIDE_WITH_INTEGER_CHECK__;\r\n\r\n// Here be dragons!\r\n// DO NOT OPTIMIZE THIS CODE\r\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\r\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\r\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\r\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\r\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\r\nfloat decode32(vec4 texel) {\r\n  __DECODE32_ENDIANNESS__;\r\n  texel *= 255.0;\r\n  vec2 gte128;\r\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\r\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\r\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\r\n  float res = exp2(round(exponent));\r\n  texel.b = texel.b - 128.0 * gte128.x;\r\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\r\n  res *= gte128.y * -2.0 + 1.0;\r\n  return res;\r\n}\r\n\r\nfloat decode16(vec4 texel, int index) {\r\n  int channel = integerMod(index, 2);\r\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\r\n}\r\n\r\nfloat decode8(vec4 texel, int index) {\r\n  int channel = integerMod(index, 4);\r\n  return texel[channel] * 255.0;\r\n}\r\n\r\nvec4 legacyEncode32(float f) {\r\n  float F = abs(f);\r\n  float sign = f < 0.0 ? 1.0 : 0.0;\r\n  float exponent = floor(log2(F));\r\n  float mantissa = (exp2(-exponent) * F);\r\n  // exponent += floor(log2(mantissa));\r\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\r\n  texel.rg = integerMod(texel.rg, 256.0);\r\n  texel.b = integerMod(texel.b, 128.0);\r\n  texel.a = exponent*0.5 + 63.5;\r\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\r\n  texel = floor(texel);\r\n  texel *= 0.003921569; // 1/255\r\n  __ENCODE32_ENDIANNESS__;\r\n  return texel;\r\n}\r\n\r\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\r\nvec4 encode32(float value) {\r\n  if (value == 0.0) return vec4(0, 0, 0, 0);\r\n\r\n  float exponent;\r\n  float mantissa;\r\n  vec4  result;\r\n  float sgn;\r\n\r\n  sgn = step(0.0, -value);\r\n  value = abs(value);\r\n\r\n  exponent = floor(log2(value));\r\n\r\n  mantissa = value*pow(2.0, -exponent)-1.0;\r\n  exponent = exponent+127.0;\r\n  result   = vec4(0,0,0,0);\r\n\r\n  result.a = floor(exponent/2.0);\r\n  exponent = exponent - result.a*2.0;\r\n  result.a = result.a + 128.0*sgn;\r\n\r\n  result.b = floor(mantissa * 128.0);\r\n  mantissa = mantissa - result.b / 128.0;\r\n  result.b = result.b + exponent*128.0;\r\n\r\n  result.g = floor(mantissa*32768.0);\r\n  mantissa = mantissa - result.g/32768.0;\r\n\r\n  result.r = floor(mantissa*8388608.0);\r\n  return result/255.0;\r\n}\r\n// Dragons end here\r\n\r\nint index;\r\nivec3 threadId;\r\n\r\nivec3 indexTo3D(int idx, ivec3 texDim) {\r\n  int z = int(idx / (texDim.x * texDim.y));\r\n  idx -= z * int(texDim.x * texDim.y);\r\n  int y = int(idx / texDim.x);\r\n  int x = int(integerMod(idx, texDim.x));\r\n  return ivec3(x, y, z);\r\n}\r\n\r\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return decode32(texel);\r\n}\r\n\r\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int w = texSize.x * 2;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\r\n  return decode16(texel, index);\r\n}\r\n\r\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int w = texSize.x * 4;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\r\n  return decode8(texel, index);\r\n}\r\n\r\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + (texDim.x * (y + (texDim.y * z)));\r\n  int channel = integerMod(index, 4);\r\n  index = index / 4;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  index = index / 4;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return texel[channel];\r\n}\r\n\r\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture(tex, st / vec2(texSize));\r\n}\r\n\r\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  return texture(tex, vec3(st / vec2(texSize), z));\r\n}\r\n\r\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return result[0];\r\n}\r\n\r\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec2(result[0], result[1]);\r\n}\r\n\r\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  index = index / 2;\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  if (channel == 0) return vec2(texel.r, texel.g);\r\n  if (channel == 1) return vec2(texel.b, texel.a);\r\n  return vec2(0.0, 0.0);\r\n}\r\n\r\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\r\n  return vec3(result[0], result[1], result[2]);\r\n}\r\n\r\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\r\n  int vectorIndex = fieldIndex / 4;\r\n  int vectorOffset = fieldIndex - vectorIndex * 4;\r\n  int readY = vectorIndex / texSize.x;\r\n  int readX = vectorIndex - readY * texSize.x;\r\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\r\n\r\n  if (vectorOffset == 0) {\r\n    return tex1.xyz;\r\n  } else if (vectorOffset == 1) {\r\n    return tex1.yzw;\r\n  } else {\r\n    readX++;\r\n    if (readX >= texSize.x) {\r\n      readX = 0;\r\n      readY++;\r\n    }\r\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\r\n    if (vectorOffset == 2) {\r\n      return vec3(tex1.z, tex1.w, tex2.x);\r\n    } else {\r\n      return vec3(tex1.w, tex2.x, tex2.y);\r\n    }\r\n  }\r\n}\r\n\r\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  return getImage2D(tex, texSize, texDim, z, y, x);\r\n}\r\n\r\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\r\n  int index = x + texDim.x * (y + texDim.y * z);\r\n  int channel = integerMod(index, 2);\r\n  int w = texSize.x;\r\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\r\n  vec4 texel = texture(tex, st / vec2(texSize));\r\n  return vec4(texel.r, texel.g, texel.b, texel.a);\r\n}\r\n\r\nvec4 actualColor;\r\nvoid color(float r, float g, float b, float a) {\r\n  actualColor = vec4(r,g,b,a);\r\n}\r\n\r\nvoid color(float r, float g, float b) {\r\n  color(r,g,b,1.0);\r\n}\r\n\r\n__INJECTED_NATIVE__;\r\n__MAIN_CONSTANTS__;\r\n__MAIN_ARGUMENTS__;\r\n__KERNEL__;\r\n\r\nvoid main(void) {\r\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\r\n  __MAIN_RESULT__;\r\n}`;\r\n","// language=GLSL\r\nexport const vertexShader = `#version 300 es\r\n__FLOAT_TACTIC_DECLARATION__;\r\n__INT_TACTIC_DECLARATION__;\r\n__SAMPLER_2D_TACTIC_DECLARATION__;\r\n\r\nin vec2 aPos;\r\nin vec2 aTexCoord;\r\n\r\nout vec2 vTexCoord;\r\nuniform vec2 ratio;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\r\n  vTexCoord = aTexCoord;\r\n}`;\r\n","import { WebGLKernelValueBoolean } from '../../web-gl/kernel-value/boolean';\r\n\r\nexport class WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\r\n","import { WebGLKernelValueFloat } from '../../web-gl/kernel-value/float';\r\n\r\nexport class WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\r\n","import { WebGLKernelValueInteger } from '../../web-gl/kernel-value/integer';\r\n\r\nexport class WebGL2KernelValueInteger extends WebGLKernelValueInteger {\r\n  getSource(value) {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    if (this.origin === 'constants') {\r\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\r\n    }\r\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (this.origin === 'constants') return;\r\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueHTMLImage } from '../../web-gl/kernel-value/html-image';\r\n\r\nexport class WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicHTMLImage } from '../../web-gl/kernel-value/dynamic-html-image';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValue } from '../../web-gl/kernel-value/index';\r\n\r\nexport class WebGL2KernelValueHTMLImageArray extends WebGLKernelValue {\r\n  constructor(value, settings) {\r\n    super(value, settings);\r\n    this.checkSize(value[0].width, value[0].height);\r\n    this.requestTexture();\r\n    this.dimensions = [value[0].width, value[0].height, value.length];\r\n    this.textureSize = [value[0].width, value[0].height];\r\n  }\r\n  getStringValueHandler() {\r\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\r\n  }\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(images) {\r\n    const { context: gl } = this;\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    // Upload the images into the texture.\r\n    gl.texImage3D(\r\n      gl.TEXTURE_2D_ARRAY,\r\n      0,\r\n      gl.RGBA,\r\n      images[0].width,\r\n      images[0].height,\r\n      images.length,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      null\r\n    );\r\n    for (let i = 0; i < images.length; i++) {\r\n      const xOffset = 0;\r\n      const yOffset = 0;\r\n      const imageDepth = 1;\r\n      gl.texSubImage3D(\r\n        gl.TEXTURE_2D_ARRAY,\r\n        0,\r\n        xOffset,\r\n        yOffset,\r\n        i,\r\n        images[i].width,\r\n        images[i].height,\r\n        imageDepth,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        this.uploadValue = images[i]\r\n      );\r\n    }\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { WebGL2KernelValueHTMLImageArray } from './html-image-array';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(images) {\r\n    const { width, height } = images[0];\r\n    this.checkSize(width, height);\r\n    this.dimensions = [width, height, images.length];\r\n    this.textureSize = [width, height];\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(images);\r\n  }\r\n}\r\n","import { WebGL2KernelValueHTMLImage } from './html-image';\r\n\r\nexport class WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\r\n","import { WebGL2KernelValueDynamicHTMLImage } from './dynamic-html-image';\r\n\r\nexport class WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleInput } from '../../web-gl/kernel-value/single-input';\r\n\r\nexport class WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(input) {\r\n    const { context: gl } = this;\r\n    utils.flattenTo(input.value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleInput } from '../../web-gl2/kernel-value/single-input';\r\n\r\nexport class WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    let [w, h, d] = value.size;\r\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedInput } from '../../web-gl/kernel-value/unsigned-input';\r\n\r\nexport class WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicUnsignedInput } from '../../web-gl/kernel-value/dynamic-unsigned-input';\r\n\r\nexport class WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueMemoryOptimizedNumberTexture } from '../../web-gl/kernel-value/memory-optimized-number-texture';\r\n\r\nexport class WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${id}`,\r\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } from '../../web-gl/kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nexport class WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\r\n  getSource() {\r\n    return utils.linesToString([\r\n      `uniform sampler2D ${this.id}`,\r\n      `uniform ivec2 ${this.sizeId}`,\r\n      `uniform ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueNumberTexture } from '../../web-gl/kernel-value/number-texture';\r\n\r\nexport class WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\r\n  getSource() {\r\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${id}`,\r\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicNumberTexture } from '../../web-gl/kernel-value/dynamic-number-texture';\r\n\r\nexport class WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray } from '../../web-gl/kernel-value/single-array';\r\n\r\nexport class WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray } from '../../web-gl2/kernel-value/single-array';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.dimensions = utils.getDimensions(value, true);\r\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\r\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\r\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\r\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray1DI } from '../../web-gl/kernel-value/single-array1d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray1DI } from '../../web-gl2/kernel-value/single-array1d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray2DI } from '../../web-gl/kernel-value/single-array2d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray2DI } from '../../web-gl2/kernel-value/single-array2d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueSingleArray3DI } from '../../web-gl/kernel-value/single-array3d-i';\r\n\r\nexport class WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\r\n  updateValue(value) {\r\n    if (value.constructor !== this.initialValueConstructor) {\r\n      this.onUpdateValueMismatch();\r\n      return;\r\n    }\r\n    const { context: gl } = this;\r\n    utils.flattenTo(value, this.uploadValue);\r\n    gl.activeTexture(this.contextHandle);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\r\n    this.kernel.setUniform1i(this.id, this.index);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGL2KernelValueSingleArray3DI } from '../../web-gl2/kernel-value/single-array3d-i';\r\n\r\nexport class WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.setShape(value);\r\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\r\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\r\n    super.updateValue(value);\r\n  }\r\n}\r\n","import { WebGLKernelValueSingleArray2 } from '../../web-gl/kernel-value/single-array2';\r\n\r\nexport class WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\r\n","import { WebGLKernelValueSingleArray3 } from '../../web-gl/kernel-value/single-array3';\r\n\r\nexport class WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\r\n","import { WebGLKernelValueSingleArray4 } from '../../web-gl/kernel-value/single-array4';\r\n\r\nexport class WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueUnsignedArray } from '../../web-gl/kernel-value/unsigned-array';\r\n\r\nexport class WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\r\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\r\n    ]);\r\n  }\r\n}\r\n","import { utils } from '../../../utils';\r\nimport { WebGLKernelValueDynamicUnsignedArray } from '../../web-gl/kernel-value/dynamic-unsigned-array';\r\n\r\nexport class WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\r\n  getSource() {\r\n    const variablePrecision = this.getVariablePrecisionString();\r\n    return utils.linesToString([\r\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\r\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\r\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\r\n    ]);\r\n  }\r\n}\r\n","import { WebGL2KernelValueBoolean } from './kernel-value/boolean';\r\nimport { WebGL2KernelValueFloat } from './kernel-value/float';\r\nimport { WebGL2KernelValueInteger } from './kernel-value/integer';\r\n\r\nimport { WebGL2KernelValueHTMLImage } from './kernel-value/html-image';\r\nimport { WebGL2KernelValueDynamicHTMLImage } from './kernel-value/dynamic-html-image';\r\n\r\nimport { WebGL2KernelValueHTMLImageArray } from './kernel-value/html-image-array';\r\nimport { WebGL2KernelValueDynamicHTMLImageArray } from './kernel-value/dynamic-html-image-array';\r\n\r\nimport { WebGL2KernelValueHTMLVideo } from './kernel-value/html-video';\r\nimport { WebGL2KernelValueDynamicHTMLVideo } from './kernel-value/dynamic-html-video';\r\n\r\nimport { WebGL2KernelValueSingleInput } from './kernel-value/single-input';\r\nimport { WebGL2KernelValueDynamicSingleInput } from './kernel-value/dynamic-single-input';\r\n\r\nimport { WebGL2KernelValueUnsignedInput } from './kernel-value/unsigned-input';\r\nimport { WebGL2KernelValueDynamicUnsignedInput } from './kernel-value/dynamic-unsigned-input';\r\n\r\nimport { WebGL2KernelValueMemoryOptimizedNumberTexture } from './kernel-value/memory-optimized-number-texture';\r\nimport { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } from './kernel-value/dynamic-memory-optimized-number-texture';\r\n\r\nimport { WebGL2KernelValueNumberTexture } from './kernel-value/number-texture';\r\nimport { WebGL2KernelValueDynamicNumberTexture } from './kernel-value/dynamic-number-texture';\r\n\r\nimport { WebGL2KernelValueSingleArray } from './kernel-value/single-array';\r\nimport { WebGL2KernelValueDynamicSingleArray } from './kernel-value/dynamic-single-array';\r\n\r\nimport { WebGL2KernelValueSingleArray1DI } from './kernel-value/single-array1d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray1DI } from './kernel-value/dynamic-single-array1d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray2DI } from './kernel-value/single-array2d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray2DI } from './kernel-value/dynamic-single-array2d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray3DI } from './kernel-value/single-array3d-i';\r\nimport { WebGL2KernelValueDynamicSingleArray3DI } from './kernel-value/dynamic-single-array3d-i';\r\n\r\nimport { WebGL2KernelValueSingleArray2 } from './kernel-value/single-array2';\r\nimport { WebGL2KernelValueSingleArray3 } from './kernel-value/single-array3';\r\nimport { WebGL2KernelValueSingleArray4 } from './kernel-value/single-array4';\r\n\r\nimport { WebGL2KernelValueUnsignedArray } from './kernel-value/unsigned-array';\r\nimport { WebGL2KernelValueDynamicUnsignedArray } from './kernel-value/dynamic-unsigned-array';\r\n\r\nexport const kernelValueMaps = {\r\n  unsigned: {\r\n    dynamic: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\r\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Array': WebGL2KernelValueUnsignedArray,\r\n      'Array(2)': false,\r\n      'Array(3)': false,\r\n      'Array(4)': false,\r\n      'Array1D(2)': false,\r\n      'Array1D(3)': false,\r\n      'Array1D(4)': false,\r\n      'Array2D(2)': false,\r\n      'Array2D(3)': false,\r\n      'Array2D(4)': false,\r\n      'Array3D(2)': false,\r\n      'Array3D(3)': false,\r\n      'Array3D(4)': false,\r\n      'Input': WebGL2KernelValueUnsignedInput,\r\n      'NumberTexture': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\r\n    }\r\n  },\r\n  single: {\r\n    dynamic: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Array': WebGL2KernelValueDynamicSingleArray,\r\n      'Array(2)': WebGL2KernelValueSingleArray2,\r\n      'Array(3)': WebGL2KernelValueSingleArray3,\r\n      'Array(4)': WebGL2KernelValueSingleArray4,\r\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\r\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\r\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\r\n      'Input': WebGL2KernelValueDynamicSingleInput,\r\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\r\n    },\r\n    static: {\r\n      'Boolean': WebGL2KernelValueBoolean,\r\n      'Float': WebGL2KernelValueFloat,\r\n      'Integer': WebGL2KernelValueInteger,\r\n      'Array': WebGL2KernelValueSingleArray,\r\n      'Array(2)': WebGL2KernelValueSingleArray2,\r\n      'Array(3)': WebGL2KernelValueSingleArray3,\r\n      'Array(4)': WebGL2KernelValueSingleArray4,\r\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\r\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\r\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\r\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\r\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\r\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\r\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\r\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\r\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\r\n      'Input': WebGL2KernelValueSingleInput,\r\n      'NumberTexture': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\r\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\r\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\r\n      'HTMLImage': WebGL2KernelValueHTMLImage,\r\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\r\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\r\n    }\r\n  },\r\n};\r\n\r\nexport function lookupKernelValueType(type, dynamic, precision, value) {\r\n  if (!type) {\r\n    throw new Error('type missing');\r\n  }\r\n  if (!dynamic) {\r\n    throw new Error('dynamic missing');\r\n  }\r\n  if (!precision) {\r\n    throw new Error('precision missing');\r\n  }\r\n  if (value.type) {\r\n    type = value.type;\r\n  }\r\n  const types = kernelValueMaps[precision][dynamic];\r\n  if (types[type] === false) {\r\n    return null;\r\n  } else if (types[type] === undefined) {\r\n    throw new Error(`Could not find a KernelValue for ${ type }`);\r\n  }\r\n  return types[type];\r\n}\r\n","import { WebGLKernel } from '../web-gl/kernel';\r\nimport { WebGL2FunctionNode } from './function-node';\r\nimport { FunctionBuilder } from '../function-builder';\r\nimport { utils } from '../../utils';\r\nimport { fragmentShader } from './fragment-shader';\r\nimport { vertexShader } from './vertex-shader';\r\nimport { lookupKernelValueType } from './kernel-value-maps';\r\n\r\nlet isSupported = null;\r\nlet testCanvas = null;\r\nlet testContext = null;\r\nlet testExtensions = null;\r\n\r\n/**\r\n *\r\n * @type {IKernelFeatures}\r\n */\r\nlet features = null;\r\n\r\n/**\r\n * @extends WebGLKernel\r\n */\r\nexport class WebGL2Kernel extends WebGLKernel {\r\n  static get isSupported() {\r\n    if (isSupported !== null) {\r\n      return isSupported;\r\n    }\r\n    this.setupFeatureChecks();\r\n    isSupported = this.isContextMatch(testContext);\r\n    return isSupported;\r\n  }\r\n\r\n  static setupFeatureChecks() {\r\n    if (typeof document !== 'undefined') {\r\n      testCanvas = document.createElement('canvas');\r\n    } else if (typeof OffscreenCanvas !== 'undefined') {\r\n      testCanvas = new OffscreenCanvas(0, 0);\r\n    }\r\n    if (!testCanvas) return;\r\n    testContext = testCanvas.getContext('webgl2');\r\n    if (!testContext || !testContext.getExtension) return;\r\n    testExtensions = {\r\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\r\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\r\n    };\r\n    features = this.getFeatures();\r\n  }\r\n\r\n  static isContextMatch(context) {\r\n    // from global\r\n    if (typeof WebGL2RenderingContext !== 'undefined') {\r\n      return context instanceof WebGL2RenderingContext;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getFeatures() {\r\n    return Object.freeze({\r\n      isFloatRead: this.getIsFloatRead(),\r\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\r\n      kernelMap: true,\r\n      isTextureFloat: true,\r\n      channelCount: this.getChannelCount(),\r\n      maxTextureSize: this.getMaxTextureSize(),\r\n    });\r\n  }\r\n\r\n  static getIsTextureFloat() {\r\n    return true;\r\n  }\r\n\r\n  static getIsIntegerDivisionAccurate() {\r\n    return super.getIsIntegerDivisionAccurate();\r\n  }\r\n\r\n  static getChannelCount() {\r\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\r\n  }\r\n\r\n  static getMaxTextureSize() {\r\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\r\n  }\r\n\r\n  static lookupKernelValueType(type, dynamic, precision, value) {\r\n    return lookupKernelValueType(type, dynamic, precision, value);\r\n  }\r\n\r\n  static get testCanvas() {\r\n    return testCanvas;\r\n  }\r\n\r\n  static get testContext() {\r\n    return testContext;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {{isFloatRead: Boolean, isIntegerDivisionAccurate: Boolean, kernelMap: Boolean, isTextureFloat: Boolean}}\r\n   */\r\n  static get features() {\r\n    return features;\r\n  }\r\n\r\n  static get fragmentShader() {\r\n    return fragmentShader;\r\n  }\r\n  static get vertexShader() {\r\n    return vertexShader;\r\n  }\r\n\r\n  initContext() {\r\n    const settings = {\r\n      alpha: false,\r\n      depth: false,\r\n      antialias: false\r\n    };\r\n    const context = this.canvas.getContext('webgl2', settings);\r\n    return context;\r\n  }\r\n\r\n  initExtensions() {\r\n    this.extensions = {\r\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\r\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\r\n   * @param {IArguments} args\r\n   */\r\n  validateSettings(args) {\r\n    if (!this.validate) {\r\n      this.texSize = utils.getKernelTextureSize({\r\n        optimizeFloatMemory: this.optimizeFloatMemory,\r\n        precision: this.precision,\r\n      }, this.output);\r\n      return;\r\n    }\r\n\r\n    const features = this.constructor.features;\r\n    if (this.precision === 'single' && !features.isFloatRead) {\r\n      throw new Error('Float texture outputs are not supported');\r\n    } else if (!this.graphical && this.precision === null) {\r\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\r\n    }\r\n\r\n    if (this.fixIntegerDivisionAccuracy === null) {\r\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\r\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\r\n      this.fixIntegerDivisionAccuracy = false;\r\n    }\r\n\r\n    this.checkOutput();\r\n\r\n    if (!this.output || this.output.length === 0) {\r\n      if (args.length !== 1) {\r\n        throw new Error('Auto output only supported for kernels with only one input');\r\n      }\r\n\r\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\r\n      switch (argType) {\r\n        case 'Array':\r\n          this.output = utils.getDimensions(argType);\r\n          break;\r\n        case 'NumberTexture':\r\n        case 'MemoryOptimizedNumberTexture':\r\n        case 'ArrayTexture(1)':\r\n        case 'ArrayTexture(2)':\r\n        case 'ArrayTexture(3)':\r\n        case 'ArrayTexture(4)':\r\n          this.output = args[0].output;\r\n          break;\r\n        default:\r\n          throw new Error('Auto output not supported for input type: ' + argType);\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.output.length !== 2) {\r\n        throw new Error('Output must have 2 dimensions on graphical mode');\r\n      }\r\n\r\n      if (this.precision === 'single') {\r\n        console.warn('Cannot use graphical mode and single precision at the same time');\r\n        this.precision = 'unsigned';\r\n      }\r\n\r\n      this.texSize = utils.clone(this.output);\r\n      return;\r\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\r\n      this.precision = 'single';\r\n    }\r\n\r\n    this.texSize = utils.getKernelTextureSize({\r\n      optimizeFloatMemory: this.optimizeFloatMemory,\r\n      precision: this.precision,\r\n    }, this.output);\r\n\r\n    this.checkTextureSize();\r\n  }\r\n\r\n  translateSource() {\r\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\r\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\r\n    });\r\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\r\n    if (!this.graphical && !this.returnType) {\r\n      this.returnType = functionBuilder.getKernelResultType();\r\n    }\r\n\r\n    if (this.subKernels && this.subKernels.length > 0) {\r\n      for (let i = 0; i < this.subKernels.length; i++) {\r\n        const subKernel = this.subKernels[i];\r\n        if (!subKernel.returnType) {\r\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  run() {\r\n    const { kernelArguments, texSize, forceUploadKernelConstants } = this;\r\n    const gl = this.context;\r\n\r\n    gl.useProgram(this.program);\r\n    gl.scissor(0, 0, texSize[0], texSize[1]);\r\n\r\n    if (this.dynamicOutput) {\r\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\r\n      this.setUniform2iv('uTexSize', texSize);\r\n    }\r\n\r\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\r\n\r\n    this.switchingKernels = false;\r\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\r\n      const constant = forceUploadKernelConstants[i];\r\n      constant.updateValue(this.constants[constant.name]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n    for (let i = 0; i < kernelArguments.length; i++) {\r\n      kernelArguments[i].updateValue(arguments[i]);\r\n      if (this.switchingKernels) return;\r\n    }\r\n\r\n    if (this.plugins) {\r\n      for (let i = 0; i < this.plugins.length; i++) {\r\n        const plugin = this.plugins[i];\r\n        if (plugin.onBeforeRun) {\r\n          plugin.onBeforeRun(this);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.graphical) {\r\n      if (this.pipeline) {\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        if (!this.outputTexture || this.immutable) {\r\n          this._setupOutputTexture();\r\n        }\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        return new this.TextureConstructor({\r\n          texture: this.outputTexture,\r\n          size: texSize,\r\n          dimensions: this.threadDim,\r\n          output: this.output,\r\n          context: this.context\r\n        });\r\n      }\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n      return;\r\n    }\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    if (this.immutable) {\r\n      this._setupOutputTexture();\r\n    }\r\n\r\n    if (this.subKernels !== null) {\r\n      if (this.immutable) {\r\n        this._setupSubOutputTextures();\r\n      }\r\n      gl.drawBuffers(this.drawBuffersMap);\r\n    }\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  }\r\n\r\n  drawBuffers() {\r\n    this.context.drawBuffers(this.drawBuffersMap);\r\n  }\r\n\r\n  getOutputTexture() {\r\n    return this.outputTexture;\r\n  }\r\n\r\n  _setupOutputTexture() {\r\n    const { texSize } = this;\r\n    const gl = this.context;\r\n    const texture = this.outputTexture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    if (this.precision === 'single') {\r\n      if (this.pipeline) {\r\n        switch (this.returnType) {\r\n          case 'Number':\r\n          case 'Float':\r\n          case 'Integer':\r\n            if (this.optimizeFloatMemory) {\r\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n            } else {\r\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R32F, texSize[0], texSize[1]);\r\n            }\r\n            break;\r\n          case 'Array(2)':\r\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32F, texSize[0], texSize[1]);\r\n            break;\r\n          case 'Array(3)': // there is _no_ 3 channel format which is guaranteed to be color-renderable\r\n          case 'Array(4)':\r\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n            break;\r\n          default:\r\n            throw new Error('Unhandled return type');\r\n        }\r\n      } else {\r\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\r\n      }\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n  }\r\n\r\n  _setupSubOutputTextures() {\r\n    const { texSize } = this;\r\n    const gl = this.context;\r\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\r\n    this.subKernelOutputTextures = [];\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const texture = this.context.createTexture();\r\n      this.subKernelOutputTextures.push(texture);\r\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\r\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      // TODO: upgrade this\r\n      if (this.precision === 'single') {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n      }\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @desc Get the header string for the program.\r\n   * This returns an empty string if no sub-kernels are defined.\r\n   *\r\n   * @returns {String} result\r\n   */\r\n  _getHeaderString() {\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * @desc Get texture coordinate string for the program\r\n   * @returns {String} result\r\n   */\r\n  _getTextureCoordinate() {\r\n    const subKernels = this.subKernels;\r\n    if (subKernels === null || subKernels.length < 1) {\r\n      switch (this.tactic) {\r\n        case 'speed':\r\n          return 'in lowp vec2 vTexCoord;\\n';\r\n        case 'performance':\r\n          return 'in highp vec2 vTexCoord;\\n';\r\n        case 'balanced':\r\n        default:\r\n          return 'in mediump vec2 vTexCoord;\\n';\r\n      }\r\n    } else {\r\n      switch (this.tactic) {\r\n        case 'speed':\r\n          return 'out lowp vec2 vTexCoord;\\n';\r\n        case 'performance':\r\n          return 'out highp vec2 vTexCoord;\\n';\r\n        case 'balanced':\r\n        default:\r\n          return 'out mediump vec2 vTexCoord;\\n';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\r\n   * @param {Array} args - The actual parameters sent to the Kernel\r\n   * @returns {String} result\r\n   */\r\n  _getMainArgumentsString(args) {\r\n    const result = [];\r\n    const argumentNames = this.argumentNames;\r\n    for (let i = 0; i < argumentNames.length; i++) {\r\n      result.push(this.kernelArguments[i].getSource(args[i]));\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  /**\r\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\r\n   * @returns {String} result\r\n   */\r\n  getKernelString() {\r\n    let kernelResultDeclaration;\r\n    switch (this.returnType) {\r\n      case 'Array(2)':\r\n        kernelResultDeclaration = 'vec2 kernelResult';\r\n        break;\r\n      case 'Array(3)':\r\n        kernelResultDeclaration = 'vec3 kernelResult';\r\n        break;\r\n      case 'Array(4)':\r\n        kernelResultDeclaration = 'vec4 kernelResult';\r\n        break;\r\n      case 'LiteralInteger':\r\n      case 'Float':\r\n      case 'Number':\r\n      case 'Integer':\r\n        kernelResultDeclaration = 'float kernelResult';\r\n        break;\r\n      default:\r\n        if (this.graphical) {\r\n          kernelResultDeclaration = 'float kernelResult';\r\n        } else {\r\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\r\n        }\r\n    }\r\n\r\n    const result = [];\r\n    const subKernels = this.subKernels;\r\n    if (subKernels !== null) {\r\n      result.push(\r\n        kernelResultDeclaration,\r\n        'layout(location = 0) out vec4 data0'\r\n      );\r\n      for (let i = 0; i < subKernels.length; i++) {\r\n        const subKernel = subKernels[i];\r\n        result.push(\r\n          subKernel.returnType === 'Integer' ?\r\n          `int subKernelResult_${ subKernel.name } = 0` :\r\n          `float subKernelResult_${ subKernel.name } = 0.0`,\r\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\r\n        );\r\n      }\r\n    } else {\r\n      result.push(\r\n        'out vec4 data0',\r\n        kernelResultDeclaration\r\n      );\r\n    }\r\n\r\n    return utils.linesToString(result) + this.translatedSource;\r\n  }\r\n\r\n  getMainResultGraphical() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0 = actualColor',\r\n    ]);\r\n  }\r\n\r\n  getMainResultPackedPixels() {\r\n    switch (this.returnType) {\r\n      case 'LiteralInteger':\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        return this.getMainResultKernelPackedPixels() +\r\n          this.getMainResultSubKernelPackedPixels();\r\n      default:\r\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultKernelPackedPixels() {\r\n    return utils.linesToString([\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  getMainResultSubKernelPackedPixels() {\r\n    const result = [];\r\n    if (!this.subKernels) return '';\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\r\n        );\r\n      }\r\n    }\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultMemoryOptimizedFloats() {\r\n    const result = [\r\n      '  index *= 4',\r\n    ];\r\n\r\n    switch (this.returnType) {\r\n      case 'Number':\r\n      case 'Integer':\r\n      case 'Float':\r\n        const channels = ['r', 'g', 'b', 'a'];\r\n        for (let i = 0; i < channels.length; i++) {\r\n          const channel = channels[i];\r\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\r\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\r\n          if (i + 1 < channels.length) {\r\n            result.push('  index += 1');\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\r\n    }\r\n\r\n    return utils.linesToString(result);\r\n  }\r\n\r\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\r\n    result.push(\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      `  data0.${channel} = kernelResult`,\r\n    );\r\n  }\r\n\r\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; i++) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getMainResultKernelNumberTexture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelNumberTexture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      if (subKernel.returnType === 'Integer') {\r\n        result.push(\r\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\r\n        );\r\n      } else {\r\n        result.push(\r\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray2Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult[0]',\r\n      '  data0[1] = kernelResult[1]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray2Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      result.push(\r\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\r\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray3Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0[0] = kernelResult[0]',\r\n      '  data0[1] = kernelResult[1]',\r\n      '  data0[2] = kernelResult[2]',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray3Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      const subKernel = this.subKernels[i];\r\n      result.push(\r\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\r\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\r\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMainResultKernelArray4Texture() {\r\n    return [\r\n      '  threadId = indexTo3D(index, uOutputDim)',\r\n      '  kernel()',\r\n      '  data0 = kernelResult',\r\n    ];\r\n  }\r\n\r\n  getMainResultSubKernelArray4Texture() {\r\n    const result = [];\r\n    if (!this.subKernels) return result;\r\n    for (let i = 0; i < this.subKernels.length; ++i) {\r\n      result.push(\r\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroyExtensions() {\r\n    this.extensions.EXT_color_buffer_float = null;\r\n    this.extensions.OES_texture_float_linear = null;\r\n  }\r\n\r\n  toJSON() {\r\n    const json = super.toJSON();\r\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\r\n    return json;\r\n  }\r\n}\r\n","import { utils } from './utils';\r\n\r\n/**\r\n * Makes kernels easier for mortals (including me)\r\n * @param kernel\r\n * @returns {function()}\r\n */\r\nexport function kernelRunShortcut(kernel) {\r\n  let run = function() {\r\n    kernel.build.apply(kernel, arguments);\r\n    if (kernel.renderKernels) {\r\n      run = function() {\r\n        kernel.run.apply(kernel, arguments);\r\n        if (kernel.switchingKernels) {\r\n          kernel.switchingKernels = false;\r\n          return kernel.onRequestSwitchKernel(arguments, kernel);\r\n        }\r\n        return kernel.renderKernels();\r\n      };\r\n    } else if (kernel.renderOutput) {\r\n      run = function() {\r\n        kernel.run.apply(kernel, arguments);\r\n        if (kernel.switchingKernels) {\r\n          kernel.switchingKernels = false;\r\n          return kernel.onRequestSwitchKernel(arguments, kernel);\r\n        }\r\n        return kernel.renderOutput();\r\n      };\r\n    } else {\r\n      run = function() {\r\n        return kernel.run.apply(kernel, arguments);\r\n      };\r\n    }\r\n    return run.apply(kernel, arguments);\r\n  };\r\n  const shortcut = function() {\r\n    return run.apply(kernel, arguments);\r\n  };\r\n  /**\r\n   * Run kernel in async mode\r\n   * @returns {Promise<KernelOutput>}\r\n   */\r\n  shortcut.exec = function() {\r\n    return new Promise((accept, reject) => {\r\n      try {\r\n        accept(run.apply(this, arguments));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  };\r\n  shortcut.replaceKernel = function(replacementKernel) {\r\n    kernel = replacementKernel;\r\n    bindKernelToShortcut(kernel, shortcut);\r\n    shortcut.kernel = kernel;\r\n  };\r\n\r\n  bindKernelToShortcut(kernel, shortcut);\r\n  shortcut.kernel = kernel;\r\n  return shortcut;\r\n}\r\n\r\nfunction bindKernelToShortcut(kernel, shortcut) {\r\n  const properties = utils.allPropertiesOf(kernel);\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const property = properties[i];\r\n    if (property[0] === '_' && property[1] === '_') continue;\r\n    if (typeof kernel[property] === 'function') {\r\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\r\n        shortcut[property] = function() {\r\n          kernel[property].apply(kernel, arguments);\r\n          return shortcut;\r\n        };\r\n      } else {\r\n        if (property === 'toString') {\r\n          shortcut.toString = function() {\r\n            return kernel.toString.apply(kernel, arguments);\r\n          };\r\n        } else {\r\n          shortcut[property] = kernel[property].bind(kernel);\r\n        }\r\n      }\r\n    } else {\r\n      shortcut.__defineGetter__(property, () => {\r\n        return kernel[property];\r\n      });\r\n      shortcut.__defineSetter__(property, (value) => {\r\n        kernel[property] = value;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { gpuMock } from 'gpu-mock.js';\r\nimport { CPUKernel } from './backend/cpu/kernel';\r\nimport { WebGL2Kernel } from './backend/web-gl2/kernel';\r\nimport { WebGLKernel } from './backend/web-gl/kernel';\r\nimport { kernelRunShortcut } from './kernel-run-shortcut';\r\nimport {\r\n  functionToIFunction,\r\n  getFunctionNameFromString,\r\n  isFunction,\r\n  warnDeprecated\r\n} from './common';\r\nimport { getVariableType } from './utils';\r\n\r\n/**\r\n * @type {Kernel[]}\r\n */\r\nconst kernelOrder = [ WebGL2Kernel, WebGLKernel ];\r\n\r\n/**\r\n * @type {string[]}\r\n */\r\nconst kernelTypes = [ 'gpu', 'cpu' ];\r\n\r\nconst internalKernels = {\r\n  'webgl2': WebGL2Kernel,\r\n  'webgl': WebGLKernel,\r\n};\r\n\r\nlet validate = true;\r\n\r\n/**\r\n * The GPU.js library class which manages the GPU context for the creating kernels\r\n */\r\nexport class GPU {\r\n  static disableValidation() {\r\n    validate = false;\r\n  }\r\n\r\n  static enableValidation() {\r\n    validate = true;\r\n  }\r\n\r\n  static get isGPUSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  static get isKernelMapSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE is platform supports OffscreenCanvas\r\n   */\r\n  static get isOffscreenCanvasSupported() {\r\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports WebGL\r\n   */\r\n  static get isWebGLSupported() {\r\n    return WebGLKernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports WebGL2\r\n   */\r\n  static get isWebGL2Supported() {\r\n    return WebGL2Kernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports HeadlessGL\r\n   */\r\n  static get isHeadlessGLSupported() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @desc TRUE if platform supports Canvas\r\n   */\r\n  static get isCanvasSupported() {\r\n    return typeof HTMLCanvasElement !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports HTMLImageArray}\r\n   */\r\n  static get isGPUHTMLImageArraySupported() {\r\n    return WebGL2Kernel.isSupported;\r\n  }\r\n\r\n  /**\r\n   * @desc TRUE if platform supports single precision}\r\n   * @returns {boolean}\r\n   */\r\n  static get isSinglePrecisionSupported() {\r\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of GPU.\r\n   * @param {IGPUSettings} [settings] - Settings to set mode, and other properties\r\n   */\r\n  constructor(settings) {\r\n    settings = settings || {};\r\n    this.canvas = settings.canvas || null;\r\n    this.context = settings.context || null;\r\n    this.mode = settings.mode;\r\n    this.Kernel = null;\r\n    this.kernels = [];\r\n    this.functions = [];\r\n    this.nativeFunctions = [];\r\n    this.injectedNative = null;\r\n    if (this.mode === 'dev') return;\r\n    this.chooseKernel();\r\n    // add functions from settings\r\n    if (settings.functions) {\r\n      for (let i = 0; i < settings.functions.length; i++) {\r\n        this.addFunction(settings.functions[i]);\r\n      }\r\n    }\r\n\r\n    // add native functions from settings\r\n    if (settings.nativeFunctions) {\r\n      for (const p in settings.nativeFunctions) {\r\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\r\n      }\r\n    }\r\n  }\r\n\r\n  getValidate() {\r\n    return validate;\r\n  }\r\n\r\n  /**\r\n   * Choose kernel type and save on .Kernel property of GPU\r\n   */\r\n  chooseKernel() {\r\n    if (this.Kernel) return;\r\n\r\n    let Kernel = null;\r\n\r\n    if (this.context) {\r\n      for (let i = 0; i < kernelOrder.length; i++) {\r\n        const ExternalKernel = kernelOrder[i];\r\n        if (ExternalKernel.isContextMatch(this.context)) {\r\n          if (!ExternalKernel.isSupported) {\r\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\r\n          }\r\n          Kernel = ExternalKernel;\r\n          break;\r\n        }\r\n      }\r\n      if (Kernel === null) {\r\n        throw new Error('unknown Context');\r\n      }\r\n    } else if (this.mode) {\r\n      if (this.mode in internalKernels) {\r\n        if (!validate || internalKernels[this.mode].isSupported) {\r\n          Kernel = internalKernels[this.mode];\r\n        }\r\n      } else if (this.mode === 'gpu') {\r\n        for (let i = 0; i < kernelOrder.length; i++) {\r\n          if (kernelOrder[i].isSupported) {\r\n            Kernel = kernelOrder[i];\r\n            break;\r\n          }\r\n        }\r\n      } else if (this.mode === 'cpu') {\r\n        Kernel = CPUKernel;\r\n      }\r\n      if (!Kernel) {\r\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < kernelOrder.length; i++) {\r\n        if (kernelOrder[i].isSupported) {\r\n          Kernel = kernelOrder[i];\r\n          break;\r\n        }\r\n      }\r\n      if (!Kernel) {\r\n        Kernel = CPUKernel;\r\n      }\r\n    }\r\n\r\n    if (!this.mode) {\r\n      this.mode = Kernel.mode;\r\n    }\r\n    this.Kernel = Kernel;\r\n  }\r\n\r\n  /**\r\n   * @desc This creates a callable function object to call the kernel function with the argument parameter set\r\n   * @param {Function|String|object} source - The calling to perform the conversion\r\n   * @param {Object} [settings] - The parameter configuration object\r\n   * @return {Kernel} callable function to run\r\n   */\r\n  createKernel(source, settings) {\r\n    if (typeof source === 'undefined') {\r\n      throw new Error('Missing source parameter');\r\n    }\r\n    if (typeof source !== 'object' && !isFunction(source) && typeof source !== 'string') {\r\n      throw new Error('source parameter not a function');\r\n    }\r\n\r\n    if (this.mode === 'dev') {\r\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\r\n      this.kernels.push(devKernel);\r\n      return devKernel;\r\n    }\r\n\r\n    source = typeof source === 'function' ? source.toString() : source;\r\n    const switchableKernels = {};\r\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\r\n    // handle conversion of argumentTypes\r\n    if (settings && typeof settings.argumentTypes === 'object') {\r\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\r\n    }\r\n\r\n    function onRequestFallback(args) {\r\n      const fallbackKernel = new CPUKernel(source, {\r\n        argumentTypes: kernelRun.argumentTypes,\r\n        constantTypes: kernelRun.constantTypes,\r\n        graphical: kernelRun.graphical,\r\n        loopMaxIterations: kernelRun.loopMaxIterations,\r\n        constants: kernelRun.constants,\r\n        dynamicOutput: kernelRun.dynamicOutput,\r\n        dynamicArgument: kernelRun.dynamicArguments,\r\n        output: kernelRun.output,\r\n        precision: kernelRun.precision,\r\n        pipeline: kernelRun.pipeline,\r\n        immutable: kernelRun.immutable,\r\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\r\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\r\n        functions: kernelRun.functions,\r\n        nativeFunctions: kernelRun.nativeFunctions,\r\n        injectedNative: kernelRun.injectedNative,\r\n        subKernels: kernelRun.subKernels,\r\n        strictIntegers: kernelRun.strictIntegers,\r\n        debug: kernelRun.debug,\r\n        warnVarUsage: kernelRun.warnVarUsage,\r\n      });\r\n      fallbackKernel.build.apply(fallbackKernel, args);\r\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\r\n      kernelRun.replaceKernel(fallbackKernel);\r\n      return result;\r\n    }\r\n\r\n    function onRequestSwitchKernel(args, kernel) {\r\n      const argumentTypes = new Array(args.length);\r\n      for (let i = 0; i < args.length; i++) {\r\n        const arg = args[i];\r\n        const type = kernel.argumentTypes[i];\r\n        if (arg.type) {\r\n          argumentTypes[i] = arg.type;\r\n        } else {\r\n          switch (type) {\r\n            case 'Number':\r\n            case 'Integer':\r\n            case 'Float':\r\n            case 'ArrayTexture(1)':\r\n              argumentTypes[i] = getVariableType(arg);\r\n              break;\r\n            default:\r\n              argumentTypes[i] = type;\r\n          }\r\n        }\r\n      }\r\n      const signature = argumentTypes.join(',');\r\n      const existingKernel = switchableKernels[signature];\r\n      if (existingKernel) {\r\n        existingKernel.run.apply(existingKernel, args);\r\n        if (existingKernel.renderKernels) {\r\n          return existingKernel.renderKernels();\r\n        } else {\r\n          return existingKernel.renderOutput();\r\n        }\r\n      }\r\n\r\n      const newKernel = switchableKernels[signature] = new kernel.constructor(source, {\r\n        argumentTypes,\r\n        constantTypes: kernel.constantTypes,\r\n        graphical: kernel.graphical,\r\n        loopMaxIterations: kernel.loopMaxIterations,\r\n        constants: kernel.constants,\r\n        dynamicOutput: kernel.dynamicOutput,\r\n        dynamicArgument: kernel.dynamicArguments,\r\n        context: kernel.context,\r\n        canvas: kernel.canvas,\r\n        output: kernel.output,\r\n        precision: kernel.precision,\r\n        pipeline: kernel.pipeline,\r\n        immutable: kernel.immutable,\r\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\r\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\r\n        functions: kernel.functions,\r\n        nativeFunctions: kernel.nativeFunctions,\r\n        injectedNative: kernel.injectedNative,\r\n        subKernels: kernel.subKernels,\r\n        strictIntegers: kernel.strictIntegers,\r\n        debug: kernel.debug,\r\n        gpu: kernel.gpu,\r\n        validate,\r\n        warnVarUsage: kernel.warnVarUsage,\r\n        returnType: kernel.returnType,\r\n        onRequestFallback,\r\n        onRequestSwitchKernel,\r\n      });\r\n      newKernel.build.apply(newKernel, args);\r\n      newKernel.run.apply(newKernel, args);\r\n      kernelRun.replaceKernel(newKernel);\r\n      if (newKernel.renderKernels) {\r\n        return newKernel.renderKernels();\r\n      } else {\r\n        return newKernel.renderOutput();\r\n      }\r\n    }\r\n    const mergedSettings = Object.assign({\r\n      context: this.context,\r\n      canvas: this.canvas,\r\n      functions: this.functions,\r\n      nativeFunctions: this.nativeFunctions,\r\n      injectedNative: this.injectedNative,\r\n      gpu: this,\r\n      validate,\r\n      onRequestFallback,\r\n      onRequestSwitchKernel\r\n    }, settingsCopy);\r\n\r\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\r\n\r\n    //if canvas didn't come from this, propagate from kernel\r\n    if (!this.canvas) {\r\n      this.canvas = kernelRun.canvas;\r\n    }\r\n\r\n    //if context didn't come from this, propagate from kernel\r\n    if (!this.context) {\r\n      this.context = kernelRun.context;\r\n    }\r\n\r\n    this.kernels.push(kernelRun);\r\n\r\n    return kernelRun;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Create a super kernel which executes sub kernels\r\n   * and saves their output to be used with the next sub kernel.\r\n   * This can be useful if we want to save the output on one kernel,\r\n   * and then use it as an input to another kernel. *Machine Learning*\r\n   *\r\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\r\n   * @param {Function} rootKernel - Root kernel\r\n   *\r\n   * @returns {Function} callable kernel function\r\n   *\r\n   * @example\r\n   * const megaKernel = gpu.createKernelMap({\r\n   *   addResult: function add(a, b) {\r\n   *     return a[this.thread.x] + b[this.thread.x];\r\n   *   },\r\n   *   multiplyResult: function multiply(a, b) {\r\n   *     return a[this.thread.x] * b[this.thread.x];\r\n   *   },\r\n   *  }, function(a, b, c) {\r\n   *       return multiply(add(a, b), c);\r\n   * });\r\n   *\r\n   * megaKernel(a, b, c);\r\n   *\r\n   * Note: You can also define subKernels as an array of functions.\r\n   * > [add, multiply]\r\n   *\r\n   */\r\n  createKernelMap() {\r\n    let fn;\r\n    let settings;\r\n    if (typeof arguments[arguments.length - 2] === 'function') {\r\n      fn = arguments[arguments.length - 2];\r\n      settings = arguments[arguments.length - 1];\r\n    } else {\r\n      fn = arguments[arguments.length - 1];\r\n    }\r\n\r\n    if (this.mode !== 'dev') {\r\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\r\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\r\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\r\n    // handle conversion of argumentTypes\r\n    if (settings && typeof settings.argumentTypes === 'object') {\r\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\r\n    }\r\n\r\n    if (Array.isArray(arguments[0])) {\r\n      settingsCopy.subKernels = [];\r\n      const functions = arguments[0];\r\n      for (let i = 0; i < functions.length; i++) {\r\n        const source = functions[i].toString();\r\n        const name = getFunctionNameFromString(source);\r\n        settingsCopy.subKernels.push({\r\n          name,\r\n          source,\r\n          property: i,\r\n        });\r\n      }\r\n    } else {\r\n      settingsCopy.subKernels = [];\r\n      const functions = arguments[0];\r\n      for (let p in functions) {\r\n        if (!functions.hasOwnProperty(p)) continue;\r\n        const source = functions[p].toString();\r\n        const name = getFunctionNameFromString(source);\r\n        settingsCopy.subKernels.push({\r\n          name: name || p,\r\n          source,\r\n          property: p,\r\n        });\r\n      }\r\n    }\r\n    const kernel = this.createKernel(fn, settingsCopy);\r\n\r\n    return kernel;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Combine different kernels into one super Kernel,\r\n   * useful to perform multiple operations inside one\r\n   * kernel without the penalty of data transfer between\r\n   * cpu and gpu.\r\n   *\r\n   * The number of kernel functions sent to this method can be variable.\r\n   * You can send in one, two, etc.\r\n   *\r\n   * @param {Function} subKernels - Kernel function(s) to combine.\r\n   * @param {Function} rootKernel - Root kernel to combine kernels into\r\n   *\r\n   * @example\r\n   *   combineKernels(add, multiply, function(a,b,c){\r\n   *     return add(multiply(a,b), c)\r\n   *  })\r\n   *\r\n   * @returns {Function} Callable kernel function\r\n   *\r\n   */\r\n  combineKernels() {\r\n    const firstKernel = arguments[0];\r\n    const combinedKernel = arguments[arguments.length - 1];\r\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\r\n    const canvas = arguments[0].canvas;\r\n    const context = arguments[0].context;\r\n    const max = arguments.length - 1;\r\n    for (let i = 0; i < max; i++) {\r\n      arguments[i]\r\n        .setCanvas(canvas)\r\n        .setContext(context)\r\n        .setPipeline(true);\r\n    }\r\n\r\n    return function() {\r\n      const texture = combinedKernel.apply(this, arguments);\r\n      if (texture.toArray) {\r\n        return texture.toArray();\r\n      }\r\n      return texture;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @desc Adds additional functions, that the kernel may call.\r\n   * @param {Function|String} source - Javascript function to convert\r\n   * @param {IFunctionSettings} [settings]\r\n   * @returns {GPU} returns itself\r\n   */\r\n  addFunction(source, settings) {\r\n    this.functions.push(functionToIFunction(source, settings));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Adds additional native functions, that the kernel may call.\r\n   * @param {String} name - native function name, used for reverse lookup\r\n   * @param {String} source - the native function implementation, as it would be defined in it's entirety\r\n   * @param {object} [settings]\r\n   * @returns {GPU} returns itself\r\n   */\r\n  addNativeFunction(name, source, settings) {\r\n    if (this.kernels.length > 0) {\r\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\r\n    }\r\n    settings = settings || {};\r\n    const { argumentTypes, argumentNames } = this.Kernel.nativeFunctionArguments(source) || {};\r\n    this.nativeFunctions.push({\r\n      name,\r\n      source,\r\n      settings,\r\n      argumentTypes,\r\n      argumentNames,\r\n      returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source),\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inject a string just before translated kernel functions\r\n   * @param {String} source\r\n   * @return {GPU}\r\n   */\r\n  injectNative(source) {\r\n    this.injectedNative = source;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @desc Destroys all memory associated with gpu.js & the webGl if we created it\r\n   */\r\n  destroy() {\r\n    if (!this.kernels) return;\r\n    // perform on next run loop - for some reason we dont get lose context events\r\n    // if webGl is created and destroyed in the same run loop.\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.kernels.length; i++) {\r\n        this.kernels[i].destroy(true); // remove canvas if exists\r\n      }\r\n      // all kernels are associated with one context, go ahead and take care of it here\r\n      let firstKernel = this.kernels[0];\r\n      if (firstKernel) {\r\n        // if it is shortcut\r\n        if (firstKernel.kernel) {\r\n          firstKernel = firstKernel.kernel;\r\n        }\r\n        if (firstKernel.constructor.destroyContext) {\r\n          firstKernel.constructor.destroyContext(this.context);\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n}\r\n\r\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\r\n  if (!settings) {\r\n    return {};\r\n  }\r\n  const upgradedSettings = Object.assign({}, settings);\r\n\r\n  if (settings.hasOwnProperty('floatOutput')) {\r\n    warnDeprecated('setting', 'floatOutput', 'precision');\r\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\r\n  }\r\n  if (settings.hasOwnProperty('outputToTexture')) {\r\n    warnDeprecated('setting', 'outputToTexture', 'pipeline');\r\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\r\n  }\r\n  if (settings.hasOwnProperty('outputImmutable')) {\r\n    warnDeprecated('setting', 'outputImmutable', 'immutable');\r\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\r\n  }\r\n  if (settings.hasOwnProperty('floatTextures')) {\r\n    warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\r\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\r\n  }\r\n  return upgradedSettings;\r\n}\r\n","import getContext from 'gl'\r\nimport { WebGLKernel } from '../web-gl/kernel';\r\nimport { glKernelString } from '../gl/kernel-string';\r\n\r\nlet isSupported = null;\r\nlet testCanvas = null;\r\nlet testContext = null;\r\nlet testExtensions = null;\r\nlet features = null;\r\n\r\nexport class HeadlessGLKernel extends WebGLKernel {\r\n  static get isSupported() {\r\n    if (isSupported !== null) return isSupported;\r\n    this.setupFeatureChecks();\r\n    isSupported = testContext !== null;\r\n    return isSupported;\r\n  }\r\n\r\n  static setupFeatureChecks() {\r\n    testCanvas = null;\r\n    testExtensions = null;\r\n    if (typeof getContext !== 'function') return;\r\n    try {\r\n      // Edge cases (just in case)\r\n      testContext = getContext(2, 2, {\r\n        preserveDrawingBuffer: true\r\n      });\r\n      if (!testContext || !testContext.getExtension) return;\r\n      testExtensions = {\r\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\r\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\r\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\r\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\r\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\r\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\r\n      };\r\n      features = this.getFeatures();\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n\r\n  static isContextMatch(context) {\r\n    try {\r\n      return context.getParameter(context.RENDERER) === 'ANGLE';\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static getFeatures() {\r\n    const isDrawBuffers = this.getIsDrawBuffers();\r\n    return Object.freeze({\r\n      isFloatRead: this.getIsFloatRead(),\r\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\r\n      isTextureFloat: this.getIsTextureFloat(),\r\n      isDrawBuffers,\r\n      kernelMap: isDrawBuffers,\r\n      channelCount: this.getChannelCount(),\r\n      maxTextureSize: this.getMaxTextureSize(),\r\n    });\r\n  }\r\n\r\n  static getIsTextureFloat() {\r\n    return Boolean(testExtensions.OES_texture_float);\r\n  }\r\n\r\n  static getIsDrawBuffers() {\r\n    return Boolean(testExtensions.WEBGL_draw_buffers);\r\n  }\r\n\r\n  static getChannelCount() {\r\n    return testExtensions.WEBGL_draw_buffers ?\r\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\r\n      1;\r\n  }\r\n\r\n  static get testCanvas() {\r\n    return testCanvas;\r\n  }\r\n\r\n  static getMaxTextureSize() {\r\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\r\n  }\r\n\r\n  static get testContext() {\r\n    return testContext;\r\n  }\r\n\r\n  static get features() {\r\n    return features;\r\n  }\r\n\r\n  initCanvas() {\r\n    return {};\r\n  }\r\n\r\n  initContext() {\r\n    const context = getContext(2, 2, {\r\n      preserveDrawingBuffer: true\r\n    });\r\n    return context;\r\n  }\r\n\r\n  initExtensions() {\r\n    this.extensions = {\r\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\r\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\r\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\r\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\r\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\r\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\r\n    };\r\n  }\r\n\r\n  build() {\r\n    super.build.apply(this, arguments);\r\n    if (!this.fallbackRequested) {\r\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\r\n    }\r\n  }\r\n\r\n  destroyExtensions() {\r\n    this.extensions.STACKGL_resize_drawingbuffer = null;\r\n    this.extensions.STACKGL_destroy_context = null;\r\n    this.extensions.OES_texture_float = null;\r\n    this.extensions.OES_texture_float_linear = null;\r\n    this.extensions.OES_element_index_uint = null;\r\n    this.extensions.WEBGL_draw_buffers = null;\r\n  }\r\n\r\n  static destroyContext(context) {\r\n    const extension = context.getExtension('STACKGL_destroy_context');\r\n    if (extension && extension.destroy) {\r\n      extension.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\r\n   */\r\n  toString() {\r\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\r\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\r\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\r\n  }\r\n\r\n  setOutput(output) {\r\n    super.setOutput(output);\r\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\r\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\r\n    }\r\n  }\r\n};\r\n","import { GPU as BaseGPU } from './base-gpu';\r\nimport { HeadlessGLKernel } from './backend/headless-gl/kernel';\r\nimport { CPUKernel } from './backend/cpu/kernel';\r\n\r\n/**\r\n * Extends the BaseGPU class to cover HeadlessGL instead of WebGL.\r\n */\r\nexport class GPU extends BaseGPU {\r\n  static get isGPUSupported() {\r\n    return HeadlessGLKernel.isSupported;\r\n  }\r\n\r\n  static get isKernelMapSupported() {\r\n    return HeadlessGLKernel.isSupported && HeadlessGLKernel.features.kernelMap;\r\n  }\r\n\r\n  static get isSinglePrecisionSupported() {\r\n    return HeadlessGLKernel.isSupported\r\n      && HeadlessGLKernel.features.isFloatRead\r\n      && HeadlessGLKernel.features.isTextureFloat;\r\n  }\r\n\r\n  static get isWebGLSupported() {\r\n    return false;\r\n  }\r\n\r\n  static get isWebGL2Supported() {\r\n    return false;\r\n  }\r\n\r\n  static get isHeadlessGLSupported() {\r\n    return HeadlessGLKernel.isSupported;\r\n  }\r\n\r\n  static get isGPUHTMLImageArraySupported() {\r\n    return false;\r\n  }\r\n\r\n  chooseKernel() {\r\n    if (this.Kernel) return;\r\n\r\n    let Kernel = null;\r\n\r\n    if (this.context) {\r\n      if (HeadlessGLKernel.isContextMatch(this.context)) {\r\n        if (!HeadlessGLKernel.isSupported) {\r\n          throw new Error(`Kernel type ${HeadlessGLKernel.name} not supported`);\r\n        }\r\n        Kernel = HeadlessGLKernel;\r\n      }\r\n      if (Kernel === null) {\r\n        throw new Error('unknown Context');\r\n      }\r\n    } else if (this.mode) {\r\n      if (this.mode === 'headlessgl') {\r\n        if (!this.getValidate() || HeadlessGLKernel.isSupported) {\r\n          Kernel = HeadlessGLKernel;\r\n        }\r\n      } else if (this.mode === 'gpu') {\r\n        if (HeadlessGLKernel.isSupported) {\r\n          Kernel = HeadlessGLKernel;\r\n        }\r\n      } else if (this.mode === 'cpu') {\r\n        Kernel = CPUKernel;\r\n      }\r\n\r\n      if (!Kernel) {\r\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\r\n      }\r\n    } else {\r\n      Kernel = HeadlessGLKernel.isSupported ? HeadlessGLKernel : CPUKernel;\r\n    }\r\n\r\n    if (!this.mode) {\r\n      this.mode = Kernel.mode;\r\n    }\r\n    this.Kernel = Kernel;\r\n  }\r\n\r\n\r\n};\r\n","import { utils } from './utils';\r\n\r\n/**\r\n * @param name\r\n * @param source\r\n * @returns {Function}\r\n */\r\nexport function alias(name, source) {\r\n  const fnString = source.toString();\r\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\r\n  ${ utils.getFunctionBodyFromString(fnString) }\r\n}`)();\r\n}\r\n","import { GPU } from './gpu';\r\nimport { alias } from './alias';\r\nimport * as common from './common';\r\nimport { utils as util } from './utils';\r\nimport { Input, input } from './input';\r\nimport { Texture } from './texture';\r\nimport { FunctionBuilder } from './backend/function-builder';\r\nimport { FunctionNode } from './backend/function-node';\r\nimport { CPUFunctionNode } from './backend/cpu/function-node';\r\nimport { CPUKernel } from './backend/cpu/kernel';\r\nimport { HeadlessGLKernel } from './backend/headless-gl/kernel';\r\nimport { WebGLFunctionNode } from './backend/web-gl/function-node';\r\nimport { WebGLKernel } from './backend/web-gl/kernel';\r\nimport { WebGL2FunctionNode } from './backend/web-gl2/function-node';\r\nimport { WebGL2Kernel } from './backend/web-gl2/kernel';\r\nimport { GLKernel } from './backend/gl/kernel';\r\nimport { Kernel } from './backend/kernel';\r\nimport { kernelValueMaps as webGLKernelValueMaps } from './backend/web-gl/kernel-value-maps';\r\nimport { kernelValueMaps as webGL2KernelValueMaps } from './backend/web-gl2/kernel-value-maps';\r\nimport { FunctionTracer } from './backend/function-tracer';\r\n\r\nconst utils = { ...common, ...util };\r\n\r\nexport {\r\n  alias,\r\n  CPUFunctionNode,\r\n  CPUKernel,\r\n  GPU,\r\n  FunctionBuilder,\r\n  FunctionNode,\r\n  HeadlessGLKernel,\r\n  Input,\r\n  input,\r\n  Texture,\r\n  utils,\r\n  WebGL2FunctionNode,\r\n  WebGL2Kernel,\r\n  webGL2KernelValueMaps,\r\n  WebGLFunctionNode,\r\n  WebGLKernel,\r\n  webGLKernelValueMaps,\r\n  GLKernel,\r\n  Kernel,\r\n  FunctionTracer,\r\n};\r\n"],"names":["utils","typeMap","name","glWiretap","fragmentShader","vertexShader","kernelValueMaps","lookupKernelValueType","isSupported","testCanvas","testContext","testExtensions","features","gpuMock","GPU","BaseGPU","util"],"mappings":"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"}